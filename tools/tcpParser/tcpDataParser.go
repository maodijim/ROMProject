package main

import (
	"ROMProject/utils"
	"encoding/hex"
	log "github.com/sirupsen/logrus"
	"strings"
)

func main() {
	// For Testing Data collected from WireShark
	inputs := [1][2]string{
		{"", "Received"},
	}

	for _, v := range inputs {
		input, _ := hex.DecodeString(v[0])
		output := utils.ParseBody(input, utils.CipherKey)
		log.Printf("%s", strings.Repeat("-", 25))
		log.Printf("%s the following commands", v[1])
		utils.TranslateMsg(output)
	}
}
