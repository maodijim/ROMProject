// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: SessionShop.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShopParam int32

const (
	ShopParam_SHOPPARAM_BUYITEM                  ShopParam = 1
	ShopParam_SHOPPARAM_QUERY_SHOP_CONFIG        ShopParam = 2
	ShopParam_SHOPPARAM_QUICKBUY_SHOP_CONFIG     ShopParam = 3
	ShopParam_SHOPPARAM_QUERY_SHOP_SOLD_COUNT    ShopParam = 4
	ShopParam_SHOPPARAM_UPDATE_DATA              ShopParam = 5
	ShopParam_SHOPPARAM_UPDATE_SHOP_CONFIG_CMD   ShopParam = 6
	ShopParam_SHOPPARAM_UPDATE_EXCHANGESHOP_DATA ShopParam = 7
	ShopParam_SHOPPARAM_EXCHANGEITEM_CMD         ShopParam = 8
	ShopParam_SHOPPARAM_RESET_EXCHANGESHOP_DATA  ShopParam = 9
	ShopParam_SHOPPARAM_FREY_EXCHANGE            ShopParam = 10
	ShopParam_SHOPPARAM_OPEN_SHOPTYPE            ShopParam = 11
)

// Enum value maps for ShopParam.
var (
	ShopParam_name = map[int32]string{
		1:  "SHOPPARAM_BUYITEM",
		2:  "SHOPPARAM_QUERY_SHOP_CONFIG",
		3:  "SHOPPARAM_QUICKBUY_SHOP_CONFIG",
		4:  "SHOPPARAM_QUERY_SHOP_SOLD_COUNT",
		5:  "SHOPPARAM_UPDATE_DATA",
		6:  "SHOPPARAM_UPDATE_SHOP_CONFIG_CMD",
		7:  "SHOPPARAM_UPDATE_EXCHANGESHOP_DATA",
		8:  "SHOPPARAM_EXCHANGEITEM_CMD",
		9:  "SHOPPARAM_RESET_EXCHANGESHOP_DATA",
		10: "SHOPPARAM_FREY_EXCHANGE",
		11: "SHOPPARAM_OPEN_SHOPTYPE",
	}
	ShopParam_value = map[string]int32{
		"SHOPPARAM_BUYITEM":                  1,
		"SHOPPARAM_QUERY_SHOP_CONFIG":        2,
		"SHOPPARAM_QUICKBUY_SHOP_CONFIG":     3,
		"SHOPPARAM_QUERY_SHOP_SOLD_COUNT":    4,
		"SHOPPARAM_UPDATE_DATA":              5,
		"SHOPPARAM_UPDATE_SHOP_CONFIG_CMD":   6,
		"SHOPPARAM_UPDATE_EXCHANGESHOP_DATA": 7,
		"SHOPPARAM_EXCHANGEITEM_CMD":         8,
		"SHOPPARAM_RESET_EXCHANGESHOP_DATA":  9,
		"SHOPPARAM_FREY_EXCHANGE":            10,
		"SHOPPARAM_OPEN_SHOPTYPE":            11,
	}
)

func (x ShopParam) Enum() *ShopParam {
	p := new(ShopParam)
	*p = x
	return p
}

func (x ShopParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShopParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[0].Descriptor()
}

func (ShopParam) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[0]
}

func (x ShopParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ShopParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ShopParam(num)
	return nil
}

// Deprecated: Use ShopParam.Descriptor instead.
func (ShopParam) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{0}
}

type EShopLimitType int32

const (
	EShopLimitType_ESHOPLIMITTYPE_MIN                     EShopLimitType = 0
	EShopLimitType_ESHOPLIMITTYPE_USER                    EShopLimitType = 1
	EShopLimitType_ESHOPLIMITTYPE_ONE_ONLY                EShopLimitType = 2
	EShopLimitType_ESHOPLIMITTYPE_ACC_USER                EShopLimitType = 4
	EShopLimitType_ESHOPLIMITTYPE_ACC_USER_ALWAYS         EShopLimitType = 8
	EShopLimitType_ESHOPLIMITTYPE_USER_WEEK               EShopLimitType = 16
	EShopLimitType_ESHOPLIMITTYPE_USER_MONTH              EShopLimitType = 32
	EShopLimitType_ESHOPLIMITTYPE_ACC_WEEK                EShopLimitType = 64
	EShopLimitType_ESHOPLIMITTYPE_ACC_MONTH               EShopLimitType = 128
	EShopLimitType_ESHOPLIMITTYPE_GUILD_MATERIAL_MAXCOUNT EShopLimitType = 256
	EShopLimitType_ESHOPLIMITTYPE_MAX                     EShopLimitType = 512
)

// Enum value maps for EShopLimitType.
var (
	EShopLimitType_name = map[int32]string{
		0:   "ESHOPLIMITTYPE_MIN",
		1:   "ESHOPLIMITTYPE_USER",
		2:   "ESHOPLIMITTYPE_ONE_ONLY",
		4:   "ESHOPLIMITTYPE_ACC_USER",
		8:   "ESHOPLIMITTYPE_ACC_USER_ALWAYS",
		16:  "ESHOPLIMITTYPE_USER_WEEK",
		32:  "ESHOPLIMITTYPE_USER_MONTH",
		64:  "ESHOPLIMITTYPE_ACC_WEEK",
		128: "ESHOPLIMITTYPE_ACC_MONTH",
		256: "ESHOPLIMITTYPE_GUILD_MATERIAL_MAXCOUNT",
		512: "ESHOPLIMITTYPE_MAX",
	}
	EShopLimitType_value = map[string]int32{
		"ESHOPLIMITTYPE_MIN":                     0,
		"ESHOPLIMITTYPE_USER":                    1,
		"ESHOPLIMITTYPE_ONE_ONLY":                2,
		"ESHOPLIMITTYPE_ACC_USER":                4,
		"ESHOPLIMITTYPE_ACC_USER_ALWAYS":         8,
		"ESHOPLIMITTYPE_USER_WEEK":               16,
		"ESHOPLIMITTYPE_USER_MONTH":              32,
		"ESHOPLIMITTYPE_ACC_WEEK":                64,
		"ESHOPLIMITTYPE_ACC_MONTH":               128,
		"ESHOPLIMITTYPE_GUILD_MATERIAL_MAXCOUNT": 256,
		"ESHOPLIMITTYPE_MAX":                     512,
	}
)

func (x EShopLimitType) Enum() *EShopLimitType {
	p := new(EShopLimitType)
	*p = x
	return p
}

func (x EShopLimitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShopLimitType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[1].Descriptor()
}

func (EShopLimitType) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[1]
}

func (x EShopLimitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShopLimitType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShopLimitType(num)
	return nil
}

// Deprecated: Use EShopLimitType.Descriptor instead.
func (EShopLimitType) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{1}
}

type EShopLockType int32

const (
	EShopLockType_ESHOPLOCKTYPE_MIN           EShopLockType = 0
	EShopLockType_ESHOPLOCKTYPE_QUEST         EShopLockType = 1
	EShopLockType_ESHOPLOCKTYPE_GUILDBUILDING EShopLockType = 2
	EShopLockType_ESHOPLOCKTYPE_MANUAL        EShopLockType = 3
	EShopLockType_ESHOPLOCKTYPE_MAX           EShopLockType = 4
)

// Enum value maps for EShopLockType.
var (
	EShopLockType_name = map[int32]string{
		0: "ESHOPLOCKTYPE_MIN",
		1: "ESHOPLOCKTYPE_QUEST",
		2: "ESHOPLOCKTYPE_GUILDBUILDING",
		3: "ESHOPLOCKTYPE_MANUAL",
		4: "ESHOPLOCKTYPE_MAX",
	}
	EShopLockType_value = map[string]int32{
		"ESHOPLOCKTYPE_MIN":           0,
		"ESHOPLOCKTYPE_QUEST":         1,
		"ESHOPLOCKTYPE_GUILDBUILDING": 2,
		"ESHOPLOCKTYPE_MANUAL":        3,
		"ESHOPLOCKTYPE_MAX":           4,
	}
)

func (x EShopLockType) Enum() *EShopLockType {
	p := new(EShopLockType)
	*p = x
	return p
}

func (x EShopLockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShopLockType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[2].Descriptor()
}

func (EShopLockType) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[2]
}

func (x EShopLockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShopLockType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShopLockType(num)
	return nil
}

// Deprecated: Use EShopLockType.Descriptor instead.
func (EShopLockType) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{2}
}

type EShopSource int32

const (
	EShopSource_ESHOPSOURCE_USER       EShopSource = 0
	EShopSource_ESHOPSOURCE_GUILD      EShopSource = 1
	EShopSource_ESHOPSOURCE_USER_GUILD EShopSource = 2
)

// Enum value maps for EShopSource.
var (
	EShopSource_name = map[int32]string{
		0: "ESHOPSOURCE_USER",
		1: "ESHOPSOURCE_GUILD",
		2: "ESHOPSOURCE_USER_GUILD",
	}
	EShopSource_value = map[string]int32{
		"ESHOPSOURCE_USER":       0,
		"ESHOPSOURCE_GUILD":      1,
		"ESHOPSOURCE_USER_GUILD": 2,
	}
)

func (x EShopSource) Enum() *EShopSource {
	p := new(EShopSource)
	*p = x
	return p
}

func (x EShopSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShopSource) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[3].Descriptor()
}

func (EShopSource) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[3]
}

func (x EShopSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShopSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShopSource(num)
	return nil
}

// Deprecated: Use EShopSource.Descriptor instead.
func (EShopSource) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{3}
}

type EPresentType int32

const (
	EPresentType_EPRESENTTYPE_NORMAL EPresentType = 0
	EPresentType_EPRESENTTYPE_LOCK   EPresentType = 1
)

// Enum value maps for EPresentType.
var (
	EPresentType_name = map[int32]string{
		0: "EPRESENTTYPE_NORMAL",
		1: "EPRESENTTYPE_LOCK",
	}
	EPresentType_value = map[string]int32{
		"EPRESENTTYPE_NORMAL": 0,
		"EPRESENTTYPE_LOCK":   1,
	}
)

func (x EPresentType) Enum() *EPresentType {
	p := new(EPresentType)
	*p = x
	return p
}

func (x EPresentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPresentType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[4].Descriptor()
}

func (EPresentType) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[4]
}

func (x EPresentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPresentType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPresentType(num)
	return nil
}

// Deprecated: Use EPresentType.Descriptor instead.
func (EPresentType) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{4}
}

type EExchangeStatusType int32

const (
	EExchangeStatusType_EEXCHANGESTATUSTYPE_OK     EExchangeStatusType = 1
	EExchangeStatusType_EEXCHANGESTATUSTYPE_EMPTY  EExchangeStatusType = 2
	EExchangeStatusType_EEXCHANGESTATUSTYPE_DELAY  EExchangeStatusType = 3
	EExchangeStatusType_EEXCHANGESTATUSTYPE_UNLOOK EExchangeStatusType = 4
)

// Enum value maps for EExchangeStatusType.
var (
	EExchangeStatusType_name = map[int32]string{
		1: "EEXCHANGESTATUSTYPE_OK",
		2: "EEXCHANGESTATUSTYPE_EMPTY",
		3: "EEXCHANGESTATUSTYPE_DELAY",
		4: "EEXCHANGESTATUSTYPE_UNLOOK",
	}
	EExchangeStatusType_value = map[string]int32{
		"EEXCHANGESTATUSTYPE_OK":     1,
		"EEXCHANGESTATUSTYPE_EMPTY":  2,
		"EEXCHANGESTATUSTYPE_DELAY":  3,
		"EEXCHANGESTATUSTYPE_UNLOOK": 4,
	}
)

func (x EExchangeStatusType) Enum() *EExchangeStatusType {
	p := new(EExchangeStatusType)
	*p = x
	return p
}

func (x EExchangeStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EExchangeStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionShop_proto_enumTypes[5].Descriptor()
}

func (EExchangeStatusType) Type() protoreflect.EnumType {
	return &file_SessionShop_proto_enumTypes[5]
}

func (x EExchangeStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EExchangeStatusType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EExchangeStatusType(num)
	return nil
}

// Deprecated: Use EExchangeStatusType.Descriptor instead.
func (EExchangeStatusType) EnumDescriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{5}
}

type Presentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Presenttype *EPresentType `protobuf:"varint,1,opt,name=presenttype,enum=Cmd.EPresentType,def=0" json:"presenttype,omitempty"`
	Msgid       *uint32       `protobuf:"varint,2,opt,name=msgid,def=0" json:"msgid,omitempty"`
	Menuid      []uint32      `protobuf:"varint,3,rep,name=menuid" json:"menuid,omitempty"`
}

// Default values for Presentation fields.
const (
	Default_Presentation_Presenttype = EPresentType_EPRESENTTYPE_NORMAL
	Default_Presentation_Msgid       = uint32(0)
)

func (x *Presentation) Reset() {
	*x = Presentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Presentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Presentation) ProtoMessage() {}

func (x *Presentation) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Presentation.ProtoReflect.Descriptor instead.
func (*Presentation) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{0}
}

func (x *Presentation) GetPresenttype() EPresentType {
	if x != nil && x.Presenttype != nil {
		return *x.Presenttype
	}
	return Default_Presentation_Presenttype
}

func (x *Presentation) GetMsgid() uint32 {
	if x != nil && x.Msgid != nil {
		return *x.Msgid
	}
	return Default_Presentation_Msgid
}

func (x *Presentation) GetMenuid() []uint32 {
	if x != nil {
		return x.Menuid
	}
	return nil
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *uint32         `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Lv              *uint32         `protobuf:"varint,2,opt,name=lv,def=0" json:"lv,omitempty"`
	Moneyid         *uint32         `protobuf:"varint,3,opt,name=moneyid,def=0" json:"moneyid,omitempty"`
	Moneycount      *uint32         `protobuf:"varint,4,opt,name=moneycount,def=0" json:"moneycount,omitempty"`
	Moneyid2        *uint32         `protobuf:"varint,5,opt,name=moneyid2" json:"moneyid2,omitempty"`
	Moneycount2     *uint32         `protobuf:"varint,6,opt,name=moneycount2" json:"moneycount2,omitempty"`
	Starttime       *uint32         `protobuf:"varint,7,opt,name=starttime,def=0" json:"starttime,omitempty"`
	Endtime         *uint32         `protobuf:"varint,8,opt,name=endtime,def=0" json:"endtime,omitempty"`
	Discount        *uint32         `protobuf:"varint,9,opt,name=discount,def=0" json:"discount,omitempty"`
	Maxcount        *uint32         `protobuf:"varint,10,opt,name=maxcount,def=0" json:"maxcount,omitempty"`
	Shopid          *uint32         `protobuf:"varint,11,opt,name=shopid,def=0" json:"shopid,omitempty"`
	Screen          *uint32         `protobuf:"varint,12,opt,name=screen,def=0" json:"screen,omitempty"`
	Itemid          *uint32         `protobuf:"varint,13,opt,name=itemid" json:"itemid,omitempty"`
	Skillid         *uint32         `protobuf:"varint,14,opt,name=skillid" json:"skillid,omitempty"`
	Haircolorid     *uint32         `protobuf:"varint,16,opt,name=haircolorid" json:"haircolorid,omitempty"`
	Num             *uint32         `protobuf:"varint,17,opt,name=num" json:"num,omitempty"`
	Menuid          *uint32         `protobuf:"varint,18,opt,name=menuid,def=0" json:"menuid,omitempty"`
	Shoptype        *uint32         `protobuf:"varint,19,opt,name=shoptype,def=0" json:"shoptype,omitempty"`
	Profession      []EProfession   `protobuf:"varint,20,rep,name=profession,enum=Cmd.EProfession" json:"profession,omitempty"`
	Limittype       *EShopLimitType `protobuf:"varint,21,opt,name=limittype,enum=Cmd.EShopLimitType,def=0" json:"limittype,omitempty"`
	Des             *string         `protobuf:"bytes,22,opt,name=des" json:"des,omitempty"`
	Levdes          *string         `protobuf:"bytes,23,opt,name=levdes" json:"levdes,omitempty"`
	Business        *uint32         `protobuf:"varint,24,opt,name=business" json:"business,omitempty"`
	Precost         *uint32         `protobuf:"varint,25,opt,name=precost" json:"precost,omitempty"`
	Display         *uint32         `protobuf:"varint,26,opt,name=display,def=0" json:"display,omitempty"`
	Shoporder       *uint32         `protobuf:"varint,27,opt,name=shoporder" json:"shoporder,omitempty"`
	Ifmsg           *uint32         `protobuf:"varint,28,opt,name=ifmsg" json:"ifmsg,omitempty"`
	Adddate         *uint32         `protobuf:"varint,29,opt,name=adddate" json:"adddate,omitempty"`
	Removedate      *uint32         `protobuf:"varint,30,opt,name=removedate" json:"removedate,omitempty"`
	Source          *EShopSource    `protobuf:"varint,37,opt,name=source,enum=Cmd.EShopSource,def=0" json:"source,omitempty"`
	Locktype        *EShopLockType  `protobuf:"varint,31,opt,name=locktype,enum=Cmd.EShopLockType,def=0" json:"locktype,omitempty"`
	Lockarg         *string         `protobuf:"bytes,32,opt,name=lockarg" json:"lockarg,omitempty"`
	Discountmax     *uint32         `protobuf:"varint,33,opt,name=discountmax" json:"discountmax,omitempty"`
	Actdiscount     *uint32         `protobuf:"varint,34,opt,name=actdiscount" json:"actdiscount,omitempty"`
	Producenum      *uint32         `protobuf:"varint,35,opt,name=producenum" json:"producenum,omitempty"`
	Nextgoodsid     *uint32         `protobuf:"varint,36,opt,name=nextgoodsid" json:"nextgoodsid,omitempty"`
	Clothcolorid    *uint32         `protobuf:"varint,38,opt,name=clothcolorid,def=0" json:"clothcolorid,omitempty"`
	Clothcolorids   []uint32        `protobuf:"varint,39,rep,name=clothcolorids" json:"clothcolorids,omitempty"`
	Itemtype        *uint32         `protobuf:"varint,40,opt,name=itemtype,def=0" json:"itemtype,omitempty"`
	Presentation    *Presentation   `protobuf:"bytes,41,opt,name=presentation" json:"presentation,omitempty"`
	Tabid           *uint32         `protobuf:"varint,42,opt,name=tabid" json:"tabid,omitempty"`
	Serverids       []uint32        `protobuf:"varint,43,rep,name=serverids" json:"serverids,omitempty"`
	Maxlimitnum     *uint32         `protobuf:"varint,44,opt,name=maxlimitnum,def=0" json:"maxlimitnum,omitempty"`
	Maxaddlimit     *uint32         `protobuf:"varint,46,opt,name=maxaddlimit,def=0" json:"maxaddlimit,omitempty"`
	Extrades        *string         `protobuf:"bytes,47,opt,name=extrades" json:"extrades,omitempty"`
	Secondiscount   *uint32         `protobuf:"varint,48,opt,name=secondiscount,def=0" json:"secondiscount,omitempty"`
	DesOption       []string        `protobuf:"bytes,49,rep,name=des_option,json=desOption" json:"des_option,omitempty"`
	Unlocknextid    *uint32         `protobuf:"varint,50,opt,name=unlocknextid,def=0" json:"unlocknextid,omitempty"`
	Unlocknextcount *uint32         `protobuf:"varint,51,opt,name=unlocknextcount,def=0" json:"unlocknextcount,omitempty"`
	Unlockpreid     *uint32         `protobuf:"varint,52,opt,name=unlockpreid,def=0" json:"unlockpreid,omitempty"`
	Unlockprecount  *uint32         `protobuf:"varint,54,opt,name=unlockprecount,def=0" json:"unlockprecount,omitempty"`
	Activityeventid *uint64         `protobuf:"varint,53,opt,name=activityeventid,def=0" json:"activityeventid,omitempty"`
	NextBuyTime     *uint32         `protobuf:"varint,55,opt,name=next_buy_time,json=nextBuyTime" json:"next_buy_time,omitempty"`
}

// Default values for ShopItem fields.
const (
	Default_ShopItem_Id              = uint32(0)
	Default_ShopItem_Lv              = uint32(0)
	Default_ShopItem_Moneyid         = uint32(0)
	Default_ShopItem_Moneycount      = uint32(0)
	Default_ShopItem_Starttime       = uint32(0)
	Default_ShopItem_Endtime         = uint32(0)
	Default_ShopItem_Discount        = uint32(0)
	Default_ShopItem_Maxcount        = uint32(0)
	Default_ShopItem_Shopid          = uint32(0)
	Default_ShopItem_Screen          = uint32(0)
	Default_ShopItem_Menuid          = uint32(0)
	Default_ShopItem_Shoptype        = uint32(0)
	Default_ShopItem_Limittype       = EShopLimitType_ESHOPLIMITTYPE_MIN
	Default_ShopItem_Display         = uint32(0)
	Default_ShopItem_Source          = EShopSource_ESHOPSOURCE_USER
	Default_ShopItem_Locktype        = EShopLockType_ESHOPLOCKTYPE_MIN
	Default_ShopItem_Clothcolorid    = uint32(0)
	Default_ShopItem_Itemtype        = uint32(0)
	Default_ShopItem_Maxlimitnum     = uint32(0)
	Default_ShopItem_Maxaddlimit     = uint32(0)
	Default_ShopItem_Secondiscount   = uint32(0)
	Default_ShopItem_Unlocknextid    = uint32(0)
	Default_ShopItem_Unlocknextcount = uint32(0)
	Default_ShopItem_Unlockpreid     = uint32(0)
	Default_ShopItem_Unlockprecount  = uint32(0)
	Default_ShopItem_Activityeventid = uint64(0)
)

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{1}
}

func (x *ShopItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ShopItem_Id
}

func (x *ShopItem) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_ShopItem_Lv
}

func (x *ShopItem) GetMoneyid() uint32 {
	if x != nil && x.Moneyid != nil {
		return *x.Moneyid
	}
	return Default_ShopItem_Moneyid
}

func (x *ShopItem) GetMoneycount() uint32 {
	if x != nil && x.Moneycount != nil {
		return *x.Moneycount
	}
	return Default_ShopItem_Moneycount
}

func (x *ShopItem) GetMoneyid2() uint32 {
	if x != nil && x.Moneyid2 != nil {
		return *x.Moneyid2
	}
	return 0
}

func (x *ShopItem) GetMoneycount2() uint32 {
	if x != nil && x.Moneycount2 != nil {
		return *x.Moneycount2
	}
	return 0
}

func (x *ShopItem) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return Default_ShopItem_Starttime
}

func (x *ShopItem) GetEndtime() uint32 {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return Default_ShopItem_Endtime
}

func (x *ShopItem) GetDiscount() uint32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return Default_ShopItem_Discount
}

func (x *ShopItem) GetMaxcount() uint32 {
	if x != nil && x.Maxcount != nil {
		return *x.Maxcount
	}
	return Default_ShopItem_Maxcount
}

func (x *ShopItem) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return Default_ShopItem_Shopid
}

func (x *ShopItem) GetScreen() uint32 {
	if x != nil && x.Screen != nil {
		return *x.Screen
	}
	return Default_ShopItem_Screen
}

func (x *ShopItem) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *ShopItem) GetSkillid() uint32 {
	if x != nil && x.Skillid != nil {
		return *x.Skillid
	}
	return 0
}

func (x *ShopItem) GetHaircolorid() uint32 {
	if x != nil && x.Haircolorid != nil {
		return *x.Haircolorid
	}
	return 0
}

func (x *ShopItem) GetNum() uint32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *ShopItem) GetMenuid() uint32 {
	if x != nil && x.Menuid != nil {
		return *x.Menuid
	}
	return Default_ShopItem_Menuid
}

func (x *ShopItem) GetShoptype() uint32 {
	if x != nil && x.Shoptype != nil {
		return *x.Shoptype
	}
	return Default_ShopItem_Shoptype
}

func (x *ShopItem) GetProfession() []EProfession {
	if x != nil {
		return x.Profession
	}
	return nil
}

func (x *ShopItem) GetLimittype() EShopLimitType {
	if x != nil && x.Limittype != nil {
		return *x.Limittype
	}
	return Default_ShopItem_Limittype
}

func (x *ShopItem) GetDes() string {
	if x != nil && x.Des != nil {
		return *x.Des
	}
	return ""
}

func (x *ShopItem) GetLevdes() string {
	if x != nil && x.Levdes != nil {
		return *x.Levdes
	}
	return ""
}

func (x *ShopItem) GetBusiness() uint32 {
	if x != nil && x.Business != nil {
		return *x.Business
	}
	return 0
}

func (x *ShopItem) GetPrecost() uint32 {
	if x != nil && x.Precost != nil {
		return *x.Precost
	}
	return 0
}

func (x *ShopItem) GetDisplay() uint32 {
	if x != nil && x.Display != nil {
		return *x.Display
	}
	return Default_ShopItem_Display
}

func (x *ShopItem) GetShoporder() uint32 {
	if x != nil && x.Shoporder != nil {
		return *x.Shoporder
	}
	return 0
}

func (x *ShopItem) GetIfmsg() uint32 {
	if x != nil && x.Ifmsg != nil {
		return *x.Ifmsg
	}
	return 0
}

func (x *ShopItem) GetAdddate() uint32 {
	if x != nil && x.Adddate != nil {
		return *x.Adddate
	}
	return 0
}

func (x *ShopItem) GetRemovedate() uint32 {
	if x != nil && x.Removedate != nil {
		return *x.Removedate
	}
	return 0
}

func (x *ShopItem) GetSource() EShopSource {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return Default_ShopItem_Source
}

func (x *ShopItem) GetLocktype() EShopLockType {
	if x != nil && x.Locktype != nil {
		return *x.Locktype
	}
	return Default_ShopItem_Locktype
}

func (x *ShopItem) GetLockarg() string {
	if x != nil && x.Lockarg != nil {
		return *x.Lockarg
	}
	return ""
}

func (x *ShopItem) GetDiscountmax() uint32 {
	if x != nil && x.Discountmax != nil {
		return *x.Discountmax
	}
	return 0
}

func (x *ShopItem) GetActdiscount() uint32 {
	if x != nil && x.Actdiscount != nil {
		return *x.Actdiscount
	}
	return 0
}

func (x *ShopItem) GetProducenum() uint32 {
	if x != nil && x.Producenum != nil {
		return *x.Producenum
	}
	return 0
}

func (x *ShopItem) GetNextgoodsid() uint32 {
	if x != nil && x.Nextgoodsid != nil {
		return *x.Nextgoodsid
	}
	return 0
}

func (x *ShopItem) GetClothcolorid() uint32 {
	if x != nil && x.Clothcolorid != nil {
		return *x.Clothcolorid
	}
	return Default_ShopItem_Clothcolorid
}

func (x *ShopItem) GetClothcolorids() []uint32 {
	if x != nil {
		return x.Clothcolorids
	}
	return nil
}

func (x *ShopItem) GetItemtype() uint32 {
	if x != nil && x.Itemtype != nil {
		return *x.Itemtype
	}
	return Default_ShopItem_Itemtype
}

func (x *ShopItem) GetPresentation() *Presentation {
	if x != nil {
		return x.Presentation
	}
	return nil
}

func (x *ShopItem) GetTabid() uint32 {
	if x != nil && x.Tabid != nil {
		return *x.Tabid
	}
	return 0
}

func (x *ShopItem) GetServerids() []uint32 {
	if x != nil {
		return x.Serverids
	}
	return nil
}

func (x *ShopItem) GetMaxlimitnum() uint32 {
	if x != nil && x.Maxlimitnum != nil {
		return *x.Maxlimitnum
	}
	return Default_ShopItem_Maxlimitnum
}

func (x *ShopItem) GetMaxaddlimit() uint32 {
	if x != nil && x.Maxaddlimit != nil {
		return *x.Maxaddlimit
	}
	return Default_ShopItem_Maxaddlimit
}

func (x *ShopItem) GetExtrades() string {
	if x != nil && x.Extrades != nil {
		return *x.Extrades
	}
	return ""
}

func (x *ShopItem) GetSecondiscount() uint32 {
	if x != nil && x.Secondiscount != nil {
		return *x.Secondiscount
	}
	return Default_ShopItem_Secondiscount
}

func (x *ShopItem) GetDesOption() []string {
	if x != nil {
		return x.DesOption
	}
	return nil
}

func (x *ShopItem) GetUnlocknextid() uint32 {
	if x != nil && x.Unlocknextid != nil {
		return *x.Unlocknextid
	}
	return Default_ShopItem_Unlocknextid
}

func (x *ShopItem) GetUnlocknextcount() uint32 {
	if x != nil && x.Unlocknextcount != nil {
		return *x.Unlocknextcount
	}
	return Default_ShopItem_Unlocknextcount
}

func (x *ShopItem) GetUnlockpreid() uint32 {
	if x != nil && x.Unlockpreid != nil {
		return *x.Unlockpreid
	}
	return Default_ShopItem_Unlockpreid
}

func (x *ShopItem) GetUnlockprecount() uint32 {
	if x != nil && x.Unlockprecount != nil {
		return *x.Unlockprecount
	}
	return Default_ShopItem_Unlockprecount
}

func (x *ShopItem) GetActivityeventid() uint64 {
	if x != nil && x.Activityeventid != nil {
		return *x.Activityeventid
	}
	return Default_ShopItem_Activityeventid
}

func (x *ShopItem) GetNextBuyTime() uint32 {
	if x != nil && x.NextBuyTime != nil {
		return *x.NextBuyTime
	}
	return 0
}

type BuyShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param   *ShopParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=1" json:"param,omitempty"`
	Id      *uint32    `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Count   *uint32    `protobuf:"varint,4,opt,name=count,def=0" json:"count,omitempty"`
	Price   *uint32    `protobuf:"varint,5,opt,name=price,def=0" json:"price,omitempty"`
	Price2  *uint32    `protobuf:"varint,6,opt,name=price2,def=0" json:"price2,omitempty"`
	Success *bool      `protobuf:"varint,7,opt,name=success" json:"success,omitempty"`
}

// Default values for BuyShopItem fields.
const (
	Default_BuyShopItem_Cmd    = Command_SESSION_USER_SHOP_PROTOCMD
	Default_BuyShopItem_Param  = ShopParam_SHOPPARAM_BUYITEM
	Default_BuyShopItem_Id     = uint32(0)
	Default_BuyShopItem_Count  = uint32(0)
	Default_BuyShopItem_Price  = uint32(0)
	Default_BuyShopItem_Price2 = uint32(0)
)

func (x *BuyShopItem) Reset() {
	*x = BuyShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyShopItem) ProtoMessage() {}

func (x *BuyShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyShopItem.ProtoReflect.Descriptor instead.
func (*BuyShopItem) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{2}
}

func (x *BuyShopItem) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BuyShopItem_Cmd
}

func (x *BuyShopItem) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BuyShopItem_Param
}

func (x *BuyShopItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_BuyShopItem_Id
}

func (x *BuyShopItem) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return Default_BuyShopItem_Count
}

func (x *BuyShopItem) GetPrice() uint32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return Default_BuyShopItem_Price
}

func (x *BuyShopItem) GetPrice2() uint32 {
	if x != nil && x.Price2 != nil {
		return *x.Price2
	}
	return Default_BuyShopItem_Price2
}

func (x *BuyShopItem) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type QueryShopConfigCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param  *ShopParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=2" json:"param,omitempty"`
	Type   *uint32     `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Shopid *uint32     `protobuf:"varint,4,opt,name=shopid" json:"shopid,omitempty"`
	Goods  []*ShopItem `protobuf:"bytes,5,rep,name=goods" json:"goods,omitempty"`
	Screen *uint32     `protobuf:"varint,6,opt,name=screen" json:"screen,omitempty"`
	Tab    *bool       `protobuf:"varint,7,opt,name=tab,def=0" json:"tab,omitempty"`
}

// Default values for QueryShopConfigCmd fields.
const (
	Default_QueryShopConfigCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_QueryShopConfigCmd_Param = ShopParam_SHOPPARAM_QUERY_SHOP_CONFIG
	Default_QueryShopConfigCmd_Tab   = bool(false)
)

func (x *QueryShopConfigCmd) Reset() {
	*x = QueryShopConfigCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryShopConfigCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryShopConfigCmd) ProtoMessage() {}

func (x *QueryShopConfigCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryShopConfigCmd.ProtoReflect.Descriptor instead.
func (*QueryShopConfigCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{3}
}

func (x *QueryShopConfigCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryShopConfigCmd_Cmd
}

func (x *QueryShopConfigCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryShopConfigCmd_Param
}

func (x *QueryShopConfigCmd) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *QueryShopConfigCmd) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return 0
}

func (x *QueryShopConfigCmd) GetGoods() []*ShopItem {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *QueryShopConfigCmd) GetScreen() uint32 {
	if x != nil && x.Screen != nil {
		return *x.Screen
	}
	return 0
}

func (x *QueryShopConfigCmd) GetTab() bool {
	if x != nil && x.Tab != nil {
		return *x.Tab
	}
	return Default_QueryShopConfigCmd_Tab
}

type QueryQuickBuyConfigCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param   *ShopParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=3" json:"param,omitempty"`
	Itemids []uint32    `protobuf:"varint,3,rep,name=itemids" json:"itemids,omitempty"`
	Goods   []*ShopItem `protobuf:"bytes,4,rep,name=goods" json:"goods,omitempty"`
}

// Default values for QueryQuickBuyConfigCmd fields.
const (
	Default_QueryQuickBuyConfigCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_QueryQuickBuyConfigCmd_Param = ShopParam_SHOPPARAM_QUICKBUY_SHOP_CONFIG
)

func (x *QueryQuickBuyConfigCmd) Reset() {
	*x = QueryQuickBuyConfigCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQuickBuyConfigCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQuickBuyConfigCmd) ProtoMessage() {}

func (x *QueryQuickBuyConfigCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQuickBuyConfigCmd.ProtoReflect.Descriptor instead.
func (*QueryQuickBuyConfigCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{4}
}

func (x *QueryQuickBuyConfigCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryQuickBuyConfigCmd_Cmd
}

func (x *QueryQuickBuyConfigCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryQuickBuyConfigCmd_Param
}

func (x *QueryQuickBuyConfigCmd) GetItemids() []uint32 {
	if x != nil {
		return x.Itemids
	}
	return nil
}

func (x *QueryQuickBuyConfigCmd) GetGoods() []*ShopItem {
	if x != nil {
		return x.Goods
	}
	return nil
}

type ShopSoldItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Count  *uint32 `protobuf:"varint,2,opt,name=count,def=0" json:"count,omitempty"`
	Shopid *uint32 `protobuf:"varint,3,opt,name=shopid" json:"shopid,omitempty"`
	Type   *uint32 `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
}

// Default values for ShopSoldItem fields.
const (
	Default_ShopSoldItem_Id    = uint32(0)
	Default_ShopSoldItem_Count = uint32(0)
)

func (x *ShopSoldItem) Reset() {
	*x = ShopSoldItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopSoldItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopSoldItem) ProtoMessage() {}

func (x *ShopSoldItem) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopSoldItem.ProtoReflect.Descriptor instead.
func (*ShopSoldItem) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{5}
}

func (x *ShopSoldItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ShopSoldItem_Id
}

func (x *ShopSoldItem) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return Default_ShopSoldItem_Count
}

func (x *ShopSoldItem) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return 0
}

func (x *ShopSoldItem) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type QueryShopSoldCountCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param *ShopParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=4" json:"param,omitempty"`
	Items []*ShopSoldItem `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

// Default values for QueryShopSoldCountCmd fields.
const (
	Default_QueryShopSoldCountCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_QueryShopSoldCountCmd_Param = ShopParam_SHOPPARAM_QUERY_SHOP_SOLD_COUNT
)

func (x *QueryShopSoldCountCmd) Reset() {
	*x = QueryShopSoldCountCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryShopSoldCountCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryShopSoldCountCmd) ProtoMessage() {}

func (x *QueryShopSoldCountCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryShopSoldCountCmd.ProtoReflect.Descriptor instead.
func (*QueryShopSoldCountCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{6}
}

func (x *QueryShopSoldCountCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryShopSoldCountCmd_Cmd
}

func (x *QueryShopSoldCountCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryShopSoldCountCmd_Param
}

func (x *QueryShopSoldCountCmd) GetItems() []*ShopSoldItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ShopDataUpdateCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param  *ShopParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=5" json:"param,omitempty"`
	Type   *uint32    `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Shopid *uint32    `protobuf:"varint,4,opt,name=shopid,def=0" json:"shopid,omitempty"`
}

// Default values for ShopDataUpdateCmd fields.
const (
	Default_ShopDataUpdateCmd_Cmd    = Command_SESSION_USER_SHOP_PROTOCMD
	Default_ShopDataUpdateCmd_Param  = ShopParam_SHOPPARAM_UPDATE_DATA
	Default_ShopDataUpdateCmd_Shopid = uint32(0)
)

func (x *ShopDataUpdateCmd) Reset() {
	*x = ShopDataUpdateCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopDataUpdateCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopDataUpdateCmd) ProtoMessage() {}

func (x *ShopDataUpdateCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopDataUpdateCmd.ProtoReflect.Descriptor instead.
func (*ShopDataUpdateCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{7}
}

func (x *ShopDataUpdateCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ShopDataUpdateCmd_Cmd
}

func (x *ShopDataUpdateCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ShopDataUpdateCmd_Param
}

func (x *ShopDataUpdateCmd) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ShopDataUpdateCmd) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return Default_ShopDataUpdateCmd_Shopid
}

type UpdateShopConfigCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param      *ShopParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=6" json:"param,omitempty"`
	Type       *uint32     `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Shopid     *uint32     `protobuf:"varint,4,opt,name=shopid" json:"shopid,omitempty"`
	DelGoodsId []uint32    `protobuf:"varint,5,rep,name=del_goods_id,json=delGoodsId" json:"del_goods_id,omitempty"`
	AddGoods   []*ShopItem `protobuf:"bytes,6,rep,name=add_goods,json=addGoods" json:"add_goods,omitempty"`
}

// Default values for UpdateShopConfigCmd fields.
const (
	Default_UpdateShopConfigCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_UpdateShopConfigCmd_Param = ShopParam_SHOPPARAM_UPDATE_SHOP_CONFIG_CMD
)

func (x *UpdateShopConfigCmd) Reset() {
	*x = UpdateShopConfigCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShopConfigCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShopConfigCmd) ProtoMessage() {}

func (x *UpdateShopConfigCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShopConfigCmd.ProtoReflect.Descriptor instead.
func (*UpdateShopConfigCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateShopConfigCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateShopConfigCmd_Cmd
}

func (x *UpdateShopConfigCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateShopConfigCmd_Param
}

func (x *UpdateShopConfigCmd) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *UpdateShopConfigCmd) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return 0
}

func (x *UpdateShopConfigCmd) GetDelGoodsId() []uint32 {
	if x != nil {
		return x.DelGoodsId
	}
	return nil
}

func (x *UpdateShopConfigCmd) GetAddGoods() []*ShopItem {
	if x != nil {
		return x.AddGoods
	}
	return nil
}

type ExchangeShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *uint32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Status        *EExchangeStatusType `protobuf:"varint,2,opt,name=status,enum=Cmd.EExchangeStatusType,def=1" json:"status,omitempty"`
	Progress      *uint32              `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	ExchangeCount *uint32              `protobuf:"varint,4,opt,name=exchange_count,json=exchangeCount" json:"exchange_count,omitempty"`
	LeftTime      *uint32              `protobuf:"varint,5,opt,name=left_time,json=leftTime" json:"left_time,omitempty"`
	DelayTime     *uint32              `protobuf:"varint,6,opt,name=delay_time,json=delayTime" json:"delay_time,omitempty"`
}

// Default values for ExchangeShopItem fields.
const (
	Default_ExchangeShopItem_Status = EExchangeStatusType_EEXCHANGESTATUSTYPE_OK
)

func (x *ExchangeShopItem) Reset() {
	*x = ExchangeShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeShopItem) ProtoMessage() {}

func (x *ExchangeShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeShopItem.ProtoReflect.Descriptor instead.
func (*ExchangeShopItem) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{9}
}

func (x *ExchangeShopItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ExchangeShopItem) GetStatus() EExchangeStatusType {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_ExchangeShopItem_Status
}

func (x *ExchangeShopItem) GetProgress() uint32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *ExchangeShopItem) GetExchangeCount() uint32 {
	if x != nil && x.ExchangeCount != nil {
		return *x.ExchangeCount
	}
	return 0
}

func (x *ExchangeShopItem) GetLeftTime() uint32 {
	if x != nil && x.LeftTime != nil {
		return *x.LeftTime
	}
	return 0
}

func (x *ExchangeShopItem) GetDelayTime() uint32 {
	if x != nil && x.DelayTime != nil {
		return *x.DelayTime
	}
	return 0
}

type UpdateExchangeShopData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param    *ShopParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=7" json:"param,omitempty"`
	Items    []*ExchangeShopItem `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	DelItems []uint32            `protobuf:"varint,4,rep,name=del_items,json=delItems" json:"del_items,omitempty"`
	MenuOpen *bool               `protobuf:"varint,5,opt,name=menu_open,json=menuOpen" json:"menu_open,omitempty"`
	Reset_   *bool               `protobuf:"varint,6,opt,name=reset,def=0" json:"reset,omitempty"`
}

// Default values for UpdateExchangeShopData fields.
const (
	Default_UpdateExchangeShopData_Cmd    = Command_SESSION_USER_SHOP_PROTOCMD
	Default_UpdateExchangeShopData_Param  = ShopParam_SHOPPARAM_UPDATE_EXCHANGESHOP_DATA
	Default_UpdateExchangeShopData_Reset_ = bool(false)
)

func (x *UpdateExchangeShopData) Reset() {
	*x = UpdateExchangeShopData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExchangeShopData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExchangeShopData) ProtoMessage() {}

func (x *UpdateExchangeShopData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExchangeShopData.ProtoReflect.Descriptor instead.
func (*UpdateExchangeShopData) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateExchangeShopData) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateExchangeShopData_Cmd
}

func (x *UpdateExchangeShopData) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateExchangeShopData_Param
}

func (x *UpdateExchangeShopData) GetItems() []*ExchangeShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpdateExchangeShopData) GetDelItems() []uint32 {
	if x != nil {
		return x.DelItems
	}
	return nil
}

func (x *UpdateExchangeShopData) GetMenuOpen() bool {
	if x != nil && x.MenuOpen != nil {
		return *x.MenuOpen
	}
	return false
}

func (x *UpdateExchangeShopData) GetReset_() bool {
	if x != nil && x.Reset_ != nil {
		return *x.Reset_
	}
	return Default_UpdateExchangeShopData_Reset_
}

type ExchangeItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Num *uint32 `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
}

func (x *ExchangeItemInfo) Reset() {
	*x = ExchangeItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeItemInfo) ProtoMessage() {}

func (x *ExchangeItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeItemInfo.ProtoReflect.Descriptor instead.
func (*ExchangeItemInfo) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeItemInfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ExchangeItemInfo) GetNum() uint32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type ExchangeShopItemCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param *ShopParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=8" json:"param,omitempty"`
	Id    *uint32             `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Items []*ExchangeItemInfo `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
}

// Default values for ExchangeShopItemCmd fields.
const (
	Default_ExchangeShopItemCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_ExchangeShopItemCmd_Param = ShopParam_SHOPPARAM_EXCHANGEITEM_CMD
)

func (x *ExchangeShopItemCmd) Reset() {
	*x = ExchangeShopItemCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeShopItemCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeShopItemCmd) ProtoMessage() {}

func (x *ExchangeShopItemCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeShopItemCmd.ProtoReflect.Descriptor instead.
func (*ExchangeShopItemCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{12}
}

func (x *ExchangeShopItemCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ExchangeShopItemCmd_Cmd
}

func (x *ExchangeShopItemCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ExchangeShopItemCmd_Param
}

func (x *ExchangeShopItemCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ExchangeShopItemCmd) GetItems() []*ExchangeItemInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type ResetExchangeShopDataShopCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param *ShopParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=9" json:"param,omitempty"`
	Items []*ExchangeShopItem `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

// Default values for ResetExchangeShopDataShopCmd fields.
const (
	Default_ResetExchangeShopDataShopCmd_Cmd   = Command_SESSION_USER_SHOP_PROTOCMD
	Default_ResetExchangeShopDataShopCmd_Param = ShopParam_SHOPPARAM_RESET_EXCHANGESHOP_DATA
)

func (x *ResetExchangeShopDataShopCmd) Reset() {
	*x = ResetExchangeShopDataShopCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetExchangeShopDataShopCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetExchangeShopDataShopCmd) ProtoMessage() {}

func (x *ResetExchangeShopDataShopCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetExchangeShopDataShopCmd.ProtoReflect.Descriptor instead.
func (*ResetExchangeShopDataShopCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{13}
}

func (x *ResetExchangeShopDataShopCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ResetExchangeShopDataShopCmd_Cmd
}

func (x *ResetExchangeShopDataShopCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ResetExchangeShopDataShopCmd_Param
}

func (x *ResetExchangeShopDataShopCmd) GetItems() []*ExchangeShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FreyExchangeShopCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param  *ShopParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=10" json:"param,omitempty"`
	Shopid *uint32             `protobuf:"varint,3,opt,name=shopid,def=0" json:"shopid,omitempty"`
	Items  []*ExchangeItemInfo `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
}

// Default values for FreyExchangeShopCmd fields.
const (
	Default_FreyExchangeShopCmd_Cmd    = Command_SESSION_USER_SHOP_PROTOCMD
	Default_FreyExchangeShopCmd_Param  = ShopParam_SHOPPARAM_FREY_EXCHANGE
	Default_FreyExchangeShopCmd_Shopid = uint32(0)
)

func (x *FreyExchangeShopCmd) Reset() {
	*x = FreyExchangeShopCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreyExchangeShopCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreyExchangeShopCmd) ProtoMessage() {}

func (x *FreyExchangeShopCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreyExchangeShopCmd.ProtoReflect.Descriptor instead.
func (*FreyExchangeShopCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{14}
}

func (x *FreyExchangeShopCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FreyExchangeShopCmd_Cmd
}

func (x *FreyExchangeShopCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FreyExchangeShopCmd_Param
}

func (x *FreyExchangeShopCmd) GetShopid() uint32 {
	if x != nil && x.Shopid != nil {
		return *x.Shopid
	}
	return Default_FreyExchangeShopCmd_Shopid
}

func (x *FreyExchangeShopCmd) GetItems() []*ExchangeItemInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type OpenShopTypeShopCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=52" json:"cmd,omitempty"`
	Param    *ShopParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ShopParam,def=11" json:"param,omitempty"`
	Shoptype *uint32    `protobuf:"varint,3,opt,name=shoptype,def=0" json:"shoptype,omitempty"`
	Open     *bool      `protobuf:"varint,4,opt,name=open,def=0" json:"open,omitempty"`
}

// Default values for OpenShopTypeShopCmd fields.
const (
	Default_OpenShopTypeShopCmd_Cmd      = Command_SESSION_USER_SHOP_PROTOCMD
	Default_OpenShopTypeShopCmd_Param    = ShopParam_SHOPPARAM_OPEN_SHOPTYPE
	Default_OpenShopTypeShopCmd_Shoptype = uint32(0)
	Default_OpenShopTypeShopCmd_Open     = bool(false)
)

func (x *OpenShopTypeShopCmd) Reset() {
	*x = OpenShopTypeShopCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionShop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenShopTypeShopCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenShopTypeShopCmd) ProtoMessage() {}

func (x *OpenShopTypeShopCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionShop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenShopTypeShopCmd.ProtoReflect.Descriptor instead.
func (*OpenShopTypeShopCmd) Descriptor() ([]byte, []int) {
	return file_SessionShop_proto_rawDescGZIP(), []int{15}
}

func (x *OpenShopTypeShopCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_OpenShopTypeShopCmd_Cmd
}

func (x *OpenShopTypeShopCmd) GetParam() ShopParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_OpenShopTypeShopCmd_Param
}

func (x *OpenShopTypeShopCmd) GetShoptype() uint32 {
	if x != nil && x.Shoptype != nil {
		return *x.Shoptype
	}
	return Default_OpenShopTypeShopCmd_Shoptype
}

func (x *OpenShopTypeShopCmd) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return Default_OpenShopTypeShopCmd_Open
}

var File_SessionShop_proto protoreflect.FileDescriptor

var file_SessionShop_proto_rawDesc = []byte{
	0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x13, 0x45, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6e, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x65, 0x6e,
	0x75, 0x69, 0x64, 0x22, 0xfd, 0x0d, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x11, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x1b, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69,
	0x64, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69,
	0x64, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x69, 0x72,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x68,
	0x61, 0x69, 0x72, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x06,
	0x6d, 0x65, 0x6e, 0x75, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x06, 0x6d, 0x65, 0x6e, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x12, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x64, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x70, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x70, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x66,
	0x6d, 0x73, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x66, 0x6d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x10, 0x45, 0x53,
	0x48, 0x4f, 0x50, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x45, 0x53,
	0x48, 0x4f, 0x50, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63,
	0x6b, 0x61, 0x72, 0x67, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x6b,
	0x61, 0x72, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6d,
	0x61, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x6d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x69, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6c, 0x6f,
	0x74, 0x68, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x64,
	0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x73, 0x18,
	0x2b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x75, 0x6d, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x61, 0x64, 0x64, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x61, 0x64, 0x64, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x31, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x65, 0x78, 0x74, 0x69, 0x64, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x6e,
	0x65, 0x78, 0x74, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x6e,
	0x65, 0x78, 0x74, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x65, 0x78, 0x74, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x72, 0x65, 0x69,
	0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x70, 0x72, 0x65, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f,
	0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11,
	0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x55, 0x59, 0x49, 0x54, 0x45,
	0x4d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x12, 0x17, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x03, 0x74, 0x61, 0x62, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x1e, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x49, 0x43,
	0x4b, 0x42, 0x55, 0x59, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64,
	0x73, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x6f,
	0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc3,
	0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x1f, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x69, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x20, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x61, 0x64, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x16, 0x45, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4b, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x48, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x53, 0x48,
	0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x45,
	0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x43, 0x4d, 0x44,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68,
	0x6f, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x21, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x46, 0x72, 0x65, 0x79,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6d, 0x64, 0x12,
	0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x53, 0x48, 0x4f, 0x50,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x52, 0x45, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x54, 0x59, 0x50, 0x45, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x2a,
	0xf6, 0x02, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x55, 0x59, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x42, 0x55, 0x59, 0x5f, 0x53, 0x48, 0x4f, 0x50,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x48, 0x4f,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x48, 0x4f,
	0x50, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x05, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x48, 0x4f,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x48,
	0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x06, 0x12,
	0x26, 0x0a, 0x22, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x48, 0x4f, 0x50,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x48, 0x4f, 0x50, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x08, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x48, 0x4f, 0x50, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x09, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x52, 0x45, 0x59,
	0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x48, 0x4f, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x53, 0x48,
	0x4f, 0x50, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0b, 0x2a, 0xde, 0x02, 0x0a, 0x0e, 0x45, 0x53, 0x68,
	0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49,
	0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f,
	0x4e, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x53, 0x48,
	0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x53,
	0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x10, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x53, 0x48, 0x4f,
	0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x20, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x53, 0x48, 0x4f, 0x50,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x57, 0x45,
	0x45, 0x4b, 0x10, 0x40, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x10, 0x80, 0x01, 0x12, 0x2b, 0x0a, 0x26, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x4d, 0x41, 0x54, 0x45,
	0x52, 0x49, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x58, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x80, 0x02,
	0x12, 0x17, 0x0a, 0x12, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x80, 0x04, 0x2a, 0x91, 0x01, 0x0a, 0x0d, 0x45, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x53, 0x48, 0x4f, 0x50, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x4f, 0x43, 0x4b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x45,
	0x53, 0x48, 0x4f, 0x50, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x55, 0x49,
	0x4c, 0x44, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x4c,
	0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x04, 0x2a, 0x56, 0x0a,
	0x0b, 0x45, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x53, 0x48, 0x4f, 0x50, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x53, 0x48, 0x4f, 0x50, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x53, 0x48,
	0x4f, 0x50, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x55,
	0x49, 0x4c, 0x44, 0x10, 0x02, 0x2a, 0x3e, 0x0a, 0x0c, 0x45, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x01, 0x2a, 0x8f, 0x01, 0x0a, 0x13, 0x45, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x45, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x45, 0x58,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x45, 0x58, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x45, 0x4c, 0x41, 0x59, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x45, 0x58, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4c, 0x4f, 0x4f, 0x4b, 0x10, 0x04,
}

var (
	file_SessionShop_proto_rawDescOnce sync.Once
	file_SessionShop_proto_rawDescData = file_SessionShop_proto_rawDesc
)

func file_SessionShop_proto_rawDescGZIP() []byte {
	file_SessionShop_proto_rawDescOnce.Do(func() {
		file_SessionShop_proto_rawDescData = protoimpl.X.CompressGZIP(file_SessionShop_proto_rawDescData)
	})
	return file_SessionShop_proto_rawDescData
}

var file_SessionShop_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_SessionShop_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_SessionShop_proto_goTypes = []interface{}{
	(ShopParam)(0),                       // 0: Cmd.ShopParam
	(EShopLimitType)(0),                  // 1: Cmd.EShopLimitType
	(EShopLockType)(0),                   // 2: Cmd.EShopLockType
	(EShopSource)(0),                     // 3: Cmd.EShopSource
	(EPresentType)(0),                    // 4: Cmd.EPresentType
	(EExchangeStatusType)(0),             // 5: Cmd.EExchangeStatusType
	(*Presentation)(nil),                 // 6: Cmd.Presentation
	(*ShopItem)(nil),                     // 7: Cmd.ShopItem
	(*BuyShopItem)(nil),                  // 8: Cmd.BuyShopItem
	(*QueryShopConfigCmd)(nil),           // 9: Cmd.QueryShopConfigCmd
	(*QueryQuickBuyConfigCmd)(nil),       // 10: Cmd.QueryQuickBuyConfigCmd
	(*ShopSoldItem)(nil),                 // 11: Cmd.ShopSoldItem
	(*QueryShopSoldCountCmd)(nil),        // 12: Cmd.QueryShopSoldCountCmd
	(*ShopDataUpdateCmd)(nil),            // 13: Cmd.ShopDataUpdateCmd
	(*UpdateShopConfigCmd)(nil),          // 14: Cmd.UpdateShopConfigCmd
	(*ExchangeShopItem)(nil),             // 15: Cmd.ExchangeShopItem
	(*UpdateExchangeShopData)(nil),       // 16: Cmd.UpdateExchangeShopData
	(*ExchangeItemInfo)(nil),             // 17: Cmd.ExchangeItemInfo
	(*ExchangeShopItemCmd)(nil),          // 18: Cmd.ExchangeShopItemCmd
	(*ResetExchangeShopDataShopCmd)(nil), // 19: Cmd.ResetExchangeShopDataShopCmd
	(*FreyExchangeShopCmd)(nil),          // 20: Cmd.FreyExchangeShopCmd
	(*OpenShopTypeShopCmd)(nil),          // 21: Cmd.OpenShopTypeShopCmd
	(EProfession)(0),                     // 22: Cmd.EProfession
	(Command)(0),                         // 23: Cmd.Command
}
var file_SessionShop_proto_depIdxs = []int32{
	4,  // 0: Cmd.Presentation.presenttype:type_name -> Cmd.EPresentType
	22, // 1: Cmd.ShopItem.profession:type_name -> Cmd.EProfession
	1,  // 2: Cmd.ShopItem.limittype:type_name -> Cmd.EShopLimitType
	3,  // 3: Cmd.ShopItem.source:type_name -> Cmd.EShopSource
	2,  // 4: Cmd.ShopItem.locktype:type_name -> Cmd.EShopLockType
	6,  // 5: Cmd.ShopItem.presentation:type_name -> Cmd.Presentation
	23, // 6: Cmd.BuyShopItem.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.BuyShopItem.param:type_name -> Cmd.ShopParam
	23, // 8: Cmd.QueryShopConfigCmd.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.QueryShopConfigCmd.param:type_name -> Cmd.ShopParam
	7,  // 10: Cmd.QueryShopConfigCmd.goods:type_name -> Cmd.ShopItem
	23, // 11: Cmd.QueryQuickBuyConfigCmd.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.QueryQuickBuyConfigCmd.param:type_name -> Cmd.ShopParam
	7,  // 13: Cmd.QueryQuickBuyConfigCmd.goods:type_name -> Cmd.ShopItem
	23, // 14: Cmd.QueryShopSoldCountCmd.cmd:type_name -> Cmd.Command
	0,  // 15: Cmd.QueryShopSoldCountCmd.param:type_name -> Cmd.ShopParam
	11, // 16: Cmd.QueryShopSoldCountCmd.items:type_name -> Cmd.ShopSoldItem
	23, // 17: Cmd.ShopDataUpdateCmd.cmd:type_name -> Cmd.Command
	0,  // 18: Cmd.ShopDataUpdateCmd.param:type_name -> Cmd.ShopParam
	23, // 19: Cmd.UpdateShopConfigCmd.cmd:type_name -> Cmd.Command
	0,  // 20: Cmd.UpdateShopConfigCmd.param:type_name -> Cmd.ShopParam
	7,  // 21: Cmd.UpdateShopConfigCmd.add_goods:type_name -> Cmd.ShopItem
	5,  // 22: Cmd.ExchangeShopItem.status:type_name -> Cmd.EExchangeStatusType
	23, // 23: Cmd.UpdateExchangeShopData.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.UpdateExchangeShopData.param:type_name -> Cmd.ShopParam
	15, // 25: Cmd.UpdateExchangeShopData.items:type_name -> Cmd.ExchangeShopItem
	23, // 26: Cmd.ExchangeShopItemCmd.cmd:type_name -> Cmd.Command
	0,  // 27: Cmd.ExchangeShopItemCmd.param:type_name -> Cmd.ShopParam
	17, // 28: Cmd.ExchangeShopItemCmd.items:type_name -> Cmd.ExchangeItemInfo
	23, // 29: Cmd.ResetExchangeShopDataShopCmd.cmd:type_name -> Cmd.Command
	0,  // 30: Cmd.ResetExchangeShopDataShopCmd.param:type_name -> Cmd.ShopParam
	15, // 31: Cmd.ResetExchangeShopDataShopCmd.items:type_name -> Cmd.ExchangeShopItem
	23, // 32: Cmd.FreyExchangeShopCmd.cmd:type_name -> Cmd.Command
	0,  // 33: Cmd.FreyExchangeShopCmd.param:type_name -> Cmd.ShopParam
	17, // 34: Cmd.FreyExchangeShopCmd.items:type_name -> Cmd.ExchangeItemInfo
	23, // 35: Cmd.OpenShopTypeShopCmd.cmd:type_name -> Cmd.Command
	0,  // 36: Cmd.OpenShopTypeShopCmd.param:type_name -> Cmd.ShopParam
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_SessionShop_proto_init() }
func file_SessionShop_proto_init() {
	if File_SessionShop_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SessionShop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Presentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryShopConfigCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQuickBuyConfigCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopSoldItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryShopSoldCountCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopDataUpdateCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShopConfigCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExchangeShopData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeShopItemCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetExchangeShopDataShopCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreyExchangeShopCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionShop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenShopTypeShopCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SessionShop_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SessionShop_proto_goTypes,
		DependencyIndexes: file_SessionShop_proto_depIdxs,
		EnumInfos:         file_SessionShop_proto_enumTypes,
		MessageInfos:      file_SessionShop_proto_msgTypes,
	}.Build()
	File_SessionShop_proto = out.File
	file_SessionShop_proto_rawDesc = nil
	file_SessionShop_proto_goTypes = nil
	file_SessionShop_proto_depIdxs = nil
}
