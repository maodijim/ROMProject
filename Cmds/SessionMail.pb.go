// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: SessionMail.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MailParam int32

const (
	MailParam_MAILPARAM_QUERYALLMAIL MailParam = 1
	MailParam_MAILPARAM_UPDATE       MailParam = 2
	MailParam_MAILPARAM_GETATTACH    MailParam = 3
)

// Enum value maps for MailParam.
var (
	MailParam_name = map[int32]string{
		1: "MAILPARAM_QUERYALLMAIL",
		2: "MAILPARAM_UPDATE",
		3: "MAILPARAM_GETATTACH",
	}
	MailParam_value = map[string]int32{
		"MAILPARAM_QUERYALLMAIL": 1,
		"MAILPARAM_UPDATE":       2,
		"MAILPARAM_GETATTACH":    3,
	}
)

func (x MailParam) Enum() *MailParam {
	p := new(MailParam)
	*p = x
	return p
}

func (x MailParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionMail_proto_enumTypes[0].Descriptor()
}

func (MailParam) Type() protoreflect.EnumType {
	return &file_SessionMail_proto_enumTypes[0]
}

func (x MailParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MailParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MailParam(num)
	return nil
}

// Deprecated: Use MailParam.Descriptor instead.
func (MailParam) EnumDescriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{0}
}

type EMailStatus int32

const (
	EMailStatus_EMAILSTATUS_MIN     EMailStatus = 0
	EMailStatus_EMAILSTATUS_NEW     EMailStatus = 1
	EMailStatus_EMAILSTATUS_ATTACH  EMailStatus = 3
	EMailStatus_EMAILSTATUS_READ    EMailStatus = 4
	EMailStatus_EMAILSTATUS_INVALID EMailStatus = 5
	EMailStatus_EMAILSTATUS_MAX     EMailStatus = 6
)

// Enum value maps for EMailStatus.
var (
	EMailStatus_name = map[int32]string{
		0: "EMAILSTATUS_MIN",
		1: "EMAILSTATUS_NEW",
		3: "EMAILSTATUS_ATTACH",
		4: "EMAILSTATUS_READ",
		5: "EMAILSTATUS_INVALID",
		6: "EMAILSTATUS_MAX",
	}
	EMailStatus_value = map[string]int32{
		"EMAILSTATUS_MIN":     0,
		"EMAILSTATUS_NEW":     1,
		"EMAILSTATUS_ATTACH":  3,
		"EMAILSTATUS_READ":    4,
		"EMAILSTATUS_INVALID": 5,
		"EMAILSTATUS_MAX":     6,
	}
)

func (x EMailStatus) Enum() *EMailStatus {
	p := new(EMailStatus)
	*p = x
	return p
}

func (x EMailStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMailStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionMail_proto_enumTypes[1].Descriptor()
}

func (EMailStatus) Type() protoreflect.EnumType {
	return &file_SessionMail_proto_enumTypes[1]
}

func (x EMailStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMailStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMailStatus(num)
	return nil
}

// Deprecated: Use EMailStatus.Descriptor instead.
func (EMailStatus) EnumDescriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{1}
}

type EMailType int32

const (
	EMailType_EMAILTYPE_MIN               EMailType = 0
	EMailType_EMAILTYPE_NORMAL            EMailType = 1
	EMailType_EMAILTYPE_SYSTEM            EMailType = 2
	EMailType_EMAILTYPE_TRADE             EMailType = 3
	EMailType_EMAILTYPE_LOTTERY_GIVE      EMailType = 4
	EMailType_EMAILTYPE_WEDDINGMSG        EMailType = 5
	EMailType_EMAILTYPE_WEDDINGINVITATION EMailType = 6
	EMailType_EMAILTYPE_USEREVENT         EMailType = 7
	EMailType_EMAILTYPE_NORMAL_NOTIME     EMailType = 8
	EMailType_EMAILTYPE_MAX               EMailType = 9
)

// Enum value maps for EMailType.
var (
	EMailType_name = map[int32]string{
		0: "EMAILTYPE_MIN",
		1: "EMAILTYPE_NORMAL",
		2: "EMAILTYPE_SYSTEM",
		3: "EMAILTYPE_TRADE",
		4: "EMAILTYPE_LOTTERY_GIVE",
		5: "EMAILTYPE_WEDDINGMSG",
		6: "EMAILTYPE_WEDDINGINVITATION",
		7: "EMAILTYPE_USEREVENT",
		8: "EMAILTYPE_NORMAL_NOTIME",
		9: "EMAILTYPE_MAX",
	}
	EMailType_value = map[string]int32{
		"EMAILTYPE_MIN":               0,
		"EMAILTYPE_NORMAL":            1,
		"EMAILTYPE_SYSTEM":            2,
		"EMAILTYPE_TRADE":             3,
		"EMAILTYPE_LOTTERY_GIVE":      4,
		"EMAILTYPE_WEDDINGMSG":        5,
		"EMAILTYPE_WEDDINGINVITATION": 6,
		"EMAILTYPE_USEREVENT":         7,
		"EMAILTYPE_NORMAL_NOTIME":     8,
		"EMAILTYPE_MAX":               9,
	}
)

func (x EMailType) Enum() *EMailType {
	p := new(EMailType)
	*p = x
	return p
}

func (x EMailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMailType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionMail_proto_enumTypes[2].Descriptor()
}

func (EMailType) Type() protoreflect.EnumType {
	return &file_SessionMail_proto_enumTypes[2]
}

func (x EMailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMailType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMailType(num)
	return nil
}

// Deprecated: Use EMailType.Descriptor instead.
func (EMailType) EnumDescriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{2}
}

type EMailAttachType int32

const (
	EMailAttachType_EMAILATTACHTYPE_MIN          EMailAttachType = 0
	EMailAttachType_EMAILATTACHTYPE_REWARD       EMailAttachType = 1
	EMailAttachType_EMAILATTACHTYPE_ITEM         EMailAttachType = 2
	EMailAttachType_EMAILATTACHTYPE_TRADE_BUY    EMailAttachType = 3
	EMailAttachType_EMAILATTACHTYPE_TRADE_RETURN EMailAttachType = 4
	EMailAttachType_EMAILATTACHTYPE_TRADE_SELL   EMailAttachType = 5
	EMailAttachType_EAMILATTACHTYPE_MAX          EMailAttachType = 6
)

// Enum value maps for EMailAttachType.
var (
	EMailAttachType_name = map[int32]string{
		0: "EMAILATTACHTYPE_MIN",
		1: "EMAILATTACHTYPE_REWARD",
		2: "EMAILATTACHTYPE_ITEM",
		3: "EMAILATTACHTYPE_TRADE_BUY",
		4: "EMAILATTACHTYPE_TRADE_RETURN",
		5: "EMAILATTACHTYPE_TRADE_SELL",
		6: "EAMILATTACHTYPE_MAX",
	}
	EMailAttachType_value = map[string]int32{
		"EMAILATTACHTYPE_MIN":          0,
		"EMAILATTACHTYPE_REWARD":       1,
		"EMAILATTACHTYPE_ITEM":         2,
		"EMAILATTACHTYPE_TRADE_BUY":    3,
		"EMAILATTACHTYPE_TRADE_RETURN": 4,
		"EMAILATTACHTYPE_TRADE_SELL":   5,
		"EAMILATTACHTYPE_MAX":          6,
	}
)

func (x EMailAttachType) Enum() *EMailAttachType {
	p := new(EMailAttachType)
	*p = x
	return p
}

func (x EMailAttachType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMailAttachType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionMail_proto_enumTypes[3].Descriptor()
}

func (EMailAttachType) Type() protoreflect.EnumType {
	return &file_SessionMail_proto_enumTypes[3]
}

func (x EMailAttachType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMailAttachType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMailAttachType(num)
	return nil
}

// Deprecated: Use EMailAttachType.Descriptor instead.
func (EMailAttachType) EnumDescriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{3}
}

type MailAttach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *EMailAttachType `protobuf:"varint,1,opt,name=type,enum=Cmd.EMailAttachType,def=0" json:"type,omitempty"`
	Id        *uint32          `protobuf:"varint,2,opt,name=id,def=0" json:"id,omitempty"`
	Items     []*ItemInfo      `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	Itemdatas []*ItemData      `protobuf:"bytes,4,rep,name=itemdatas" json:"itemdatas,omitempty"`
}

// Default values for MailAttach fields.
const (
	Default_MailAttach_Type = EMailAttachType_EMAILATTACHTYPE_MIN
	Default_MailAttach_Id   = uint32(0)
)

func (x *MailAttach) Reset() {
	*x = MailAttach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailAttach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAttach) ProtoMessage() {}

func (x *MailAttach) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAttach.ProtoReflect.Descriptor instead.
func (*MailAttach) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{0}
}

func (x *MailAttach) GetType() EMailAttachType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_MailAttach_Type
}

func (x *MailAttach) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_MailAttach_Id
}

func (x *MailAttach) GetItems() []*ItemInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MailAttach) GetItemdatas() []*ItemData {
	if x != nil {
		return x.Itemdatas
	}
	return nil
}

type BlobAttach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachs []*MailAttach `protobuf:"bytes,1,rep,name=attachs" json:"attachs,omitempty"`
}

func (x *BlobAttach) Reset() {
	*x = BlobAttach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobAttach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobAttach) ProtoMessage() {}

func (x *BlobAttach) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobAttach.ProtoReflect.Descriptor instead.
func (*BlobAttach) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{1}
}

func (x *BlobAttach) GetAttachs() []*MailAttach {
	if x != nil {
		return x.Attachs
	}
	return nil
}

type MailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *uint64              `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Sysid        *uint64              `protobuf:"varint,2,opt,name=sysid,def=0" json:"sysid,omitempty"`
	Senderid     *uint64              `protobuf:"varint,3,opt,name=senderid,def=0" json:"senderid,omitempty"`
	Receiveid    *uint64              `protobuf:"varint,4,opt,name=receiveid,def=0" json:"receiveid,omitempty"`
	Receiveaccid *uint64              `protobuf:"varint,13,opt,name=receiveaccid,def=0" json:"receiveaccid,omitempty"`
	Time         *uint32              `protobuf:"varint,12,opt,name=time,def=0" json:"time,omitempty"`
	Mailid       *uint32              `protobuf:"varint,5,opt,name=mailid,def=0" json:"mailid,omitempty"`
	Type         *EMailType           `protobuf:"varint,6,opt,name=type,enum=Cmd.EMailType,def=0" json:"type,omitempty"`
	Status       *EMailStatus         `protobuf:"varint,7,opt,name=status,enum=Cmd.EMailStatus,def=0" json:"status,omitempty"`
	Title        *string              `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	Sender       *string              `protobuf:"bytes,9,opt,name=sender" json:"sender,omitempty"`
	Msg          *string              `protobuf:"bytes,10,opt,name=msg" json:"msg,omitempty"`
	Attach       *BlobAttach          `protobuf:"bytes,11,opt,name=attach" json:"attach,omitempty"`
	Groupid      *string              `protobuf:"bytes,16,opt,name=groupid" json:"groupid,omitempty"`
	Starttime    *uint32              `protobuf:"varint,17,opt,name=starttime" json:"starttime,omitempty"`
	Endtime      *uint32              `protobuf:"varint,18,opt,name=endtime" json:"endtime,omitempty"`
	Weddingmsg   *WeddingEventMsgCCmd `protobuf:"bytes,19,opt,name=weddingmsg" json:"weddingmsg,omitempty"`
	Eventmsg     *UserEventMailCmd    `protobuf:"bytes,20,opt,name=eventmsg" json:"eventmsg,omitempty"`
}

// Default values for MailData fields.
const (
	Default_MailData_Id           = uint64(0)
	Default_MailData_Sysid        = uint64(0)
	Default_MailData_Senderid     = uint64(0)
	Default_MailData_Receiveid    = uint64(0)
	Default_MailData_Receiveaccid = uint64(0)
	Default_MailData_Time         = uint32(0)
	Default_MailData_Mailid       = uint32(0)
	Default_MailData_Type         = EMailType_EMAILTYPE_MIN
	Default_MailData_Status       = EMailStatus_EMAILSTATUS_MIN
)

func (x *MailData) Reset() {
	*x = MailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailData) ProtoMessage() {}

func (x *MailData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailData.ProtoReflect.Descriptor instead.
func (*MailData) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{2}
}

func (x *MailData) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_MailData_Id
}

func (x *MailData) GetSysid() uint64 {
	if x != nil && x.Sysid != nil {
		return *x.Sysid
	}
	return Default_MailData_Sysid
}

func (x *MailData) GetSenderid() uint64 {
	if x != nil && x.Senderid != nil {
		return *x.Senderid
	}
	return Default_MailData_Senderid
}

func (x *MailData) GetReceiveid() uint64 {
	if x != nil && x.Receiveid != nil {
		return *x.Receiveid
	}
	return Default_MailData_Receiveid
}

func (x *MailData) GetReceiveaccid() uint64 {
	if x != nil && x.Receiveaccid != nil {
		return *x.Receiveaccid
	}
	return Default_MailData_Receiveaccid
}

func (x *MailData) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_MailData_Time
}

func (x *MailData) GetMailid() uint32 {
	if x != nil && x.Mailid != nil {
		return *x.Mailid
	}
	return Default_MailData_Mailid
}

func (x *MailData) GetType() EMailType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_MailData_Type
}

func (x *MailData) GetStatus() EMailStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_MailData_Status
}

func (x *MailData) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MailData) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *MailData) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *MailData) GetAttach() *BlobAttach {
	if x != nil {
		return x.Attach
	}
	return nil
}

func (x *MailData) GetGroupid() string {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return ""
}

func (x *MailData) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return 0
}

func (x *MailData) GetEndtime() uint32 {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return 0
}

func (x *MailData) GetWeddingmsg() *WeddingEventMsgCCmd {
	if x != nil {
		return x.Weddingmsg
	}
	return nil
}

func (x *MailData) GetEventmsg() *UserEventMailCmd {
	if x != nil {
		return x.Eventmsg
	}
	return nil
}

type MailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *uint32 `protobuf:"varint,1,opt,name=language,def=0" json:"language,omitempty"`
	Title    *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Msg      *string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

// Default values for MailMsg fields.
const (
	Default_MailMsg_Language = uint32(0)
)

func (x *MailMsg) Reset() {
	*x = MailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailMsg) ProtoMessage() {}

func (x *MailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailMsg.ProtoReflect.Descriptor instead.
func (*MailMsg) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{3}
}

func (x *MailMsg) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return Default_MailMsg_Language
}

func (x *MailMsg) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MailMsg) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

type MailTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*MailMsg `protobuf:"bytes,1,rep,name=msgs" json:"msgs,omitempty"`
}

func (x *MailTemplateData) Reset() {
	*x = MailTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailTemplateData) ProtoMessage() {}

func (x *MailTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailTemplateData.ProtoReflect.Descriptor instead.
func (*MailTemplateData) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{4}
}

func (x *MailTemplateData) GetMsgs() []*MailMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type QueryAllMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=55" json:"cmd,omitempty"`
	Param *MailParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.MailParam,def=1" json:"param,omitempty"`
	Datas []*MailData `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
}

// Default values for QueryAllMail fields.
const (
	Default_QueryAllMail_Cmd   = Command_SESSION_USER_MAIL_PROTOCMD
	Default_QueryAllMail_Param = MailParam_MAILPARAM_QUERYALLMAIL
)

func (x *QueryAllMail) Reset() {
	*x = QueryAllMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllMail) ProtoMessage() {}

func (x *QueryAllMail) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllMail.ProtoReflect.Descriptor instead.
func (*QueryAllMail) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{5}
}

func (x *QueryAllMail) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryAllMail_Cmd
}

func (x *QueryAllMail) GetParam() MailParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryAllMail_Param
}

func (x *QueryAllMail) GetDatas() []*MailData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type MailUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=55" json:"cmd,omitempty"`
	Param   *MailParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.MailParam,def=2" json:"param,omitempty"`
	Updates []*MailData `protobuf:"bytes,3,rep,name=updates" json:"updates,omitempty"`
	Dels    []uint64    `protobuf:"varint,4,rep,name=dels" json:"dels,omitempty"`
}

// Default values for MailUpdate fields.
const (
	Default_MailUpdate_Cmd   = Command_SESSION_USER_MAIL_PROTOCMD
	Default_MailUpdate_Param = MailParam_MAILPARAM_UPDATE
)

func (x *MailUpdate) Reset() {
	*x = MailUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailUpdate) ProtoMessage() {}

func (x *MailUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailUpdate.ProtoReflect.Descriptor instead.
func (*MailUpdate) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{6}
}

func (x *MailUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_MailUpdate_Cmd
}

func (x *MailUpdate) GetParam() MailParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_MailUpdate_Param
}

func (x *MailUpdate) GetUpdates() []*MailData {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *MailUpdate) GetDels() []uint64 {
	if x != nil {
		return x.Dels
	}
	return nil
}

type GetMailAttach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=55" json:"cmd,omitempty"`
	Param *MailParam `protobuf:"varint,2,opt,name=param,enum=Cmd.MailParam,def=3" json:"param,omitempty"`
	Id    *uint64    `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for GetMailAttach fields.
const (
	Default_GetMailAttach_Cmd   = Command_SESSION_USER_MAIL_PROTOCMD
	Default_GetMailAttach_Param = MailParam_MAILPARAM_GETATTACH
	Default_GetMailAttach_Id    = uint64(0)
)

func (x *GetMailAttach) Reset() {
	*x = GetMailAttach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionMail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMailAttach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMailAttach) ProtoMessage() {}

func (x *GetMailAttach) ProtoReflect() protoreflect.Message {
	mi := &file_SessionMail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMailAttach.ProtoReflect.Descriptor instead.
func (*GetMailAttach) Descriptor() ([]byte, []int) {
	return file_SessionMail_proto_rawDescGZIP(), []int{7}
}

func (x *GetMailAttach) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetMailAttach_Cmd
}

func (x *GetMailAttach) GetParam() MailParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetMailAttach_Param
}

func (x *GetMailAttach) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_GetMailAttach_Id
}

var File_SessionMail_proto protoreflect.FileDescriptor

var file_SessionMail_proto_rawDesc = []byte{
	0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x43,
	0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x4d, 0x61,
	0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x61,
	0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x13, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49,
	0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x2b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x37, 0x0a, 0x0a,
	0x42, 0x6c, 0x6f, 0x62, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x07, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x73, 0x22, 0xe5, 0x04, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x73, 0x79, 0x73, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x73, 0x79, 0x73, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x61, 0x63, 0x63, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x63, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x06,
	0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x61, 0x69,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x0f, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x0a, 0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x73, 0x67, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x57, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x43, 0x43, 0x6d, 0x64, 0x52, 0x0a,
	0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x6d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x43, 0x6d, 0x64, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6d, 0x73, 0x67, 0x22, 0x50, 0x0a,
	0x07, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x34, 0x0a, 0x10, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x41, 0x4c, 0x4c, 0x4d, 0x41, 0x49, 0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x23, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x10, 0x4d, 0x41, 0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x04, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45,
	0x54, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69,
	0x64, 0x2a, 0x56, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a,
	0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x41, 0x4c, 0x4c, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41,
	0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45,
	0x54, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x03, 0x2a, 0x93, 0x01, 0x0a, 0x0b, 0x45, 0x4d,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41,
	0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45,
	0x57, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x04, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x06, 0x2a,
	0xff, 0x01, 0x0a, 0x09, 0x45, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x4f, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a,
	0x14, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x44, 0x44, 0x49,
	0x4e, 0x47, 0x4d, 0x53, 0x47, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x56, 0x49,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x49,
	0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10,
	0x07, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x08, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10,
	0x09, 0x2a, 0xda, 0x01, 0x0a, 0x0f, 0x45, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x42, 0x55,
	0x59, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x54,
	0x55, 0x52, 0x4e, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x53,
	0x45, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x41, 0x4d, 0x49, 0x4c, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x06,
}

var (
	file_SessionMail_proto_rawDescOnce sync.Once
	file_SessionMail_proto_rawDescData = file_SessionMail_proto_rawDesc
)

func file_SessionMail_proto_rawDescGZIP() []byte {
	file_SessionMail_proto_rawDescOnce.Do(func() {
		file_SessionMail_proto_rawDescData = protoimpl.X.CompressGZIP(file_SessionMail_proto_rawDescData)
	})
	return file_SessionMail_proto_rawDescData
}

var file_SessionMail_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_SessionMail_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_SessionMail_proto_goTypes = []interface{}{
	(MailParam)(0),              // 0: Cmd.MailParam
	(EMailStatus)(0),            // 1: Cmd.EMailStatus
	(EMailType)(0),              // 2: Cmd.EMailType
	(EMailAttachType)(0),        // 3: Cmd.EMailAttachType
	(*MailAttach)(nil),          // 4: Cmd.MailAttach
	(*BlobAttach)(nil),          // 5: Cmd.BlobAttach
	(*MailData)(nil),            // 6: Cmd.MailData
	(*MailMsg)(nil),             // 7: Cmd.MailMsg
	(*MailTemplateData)(nil),    // 8: Cmd.MailTemplateData
	(*QueryAllMail)(nil),        // 9: Cmd.QueryAllMail
	(*MailUpdate)(nil),          // 10: Cmd.MailUpdate
	(*GetMailAttach)(nil),       // 11: Cmd.GetMailAttach
	(*ItemInfo)(nil),            // 12: Cmd.ItemInfo
	(*ItemData)(nil),            // 13: Cmd.ItemData
	(*WeddingEventMsgCCmd)(nil), // 14: Cmd.WeddingEventMsgCCmd
	(*UserEventMailCmd)(nil),    // 15: Cmd.UserEventMailCmd
	(Command)(0),                // 16: Cmd.Command
}
var file_SessionMail_proto_depIdxs = []int32{
	3,  // 0: Cmd.MailAttach.type:type_name -> Cmd.EMailAttachType
	12, // 1: Cmd.MailAttach.items:type_name -> Cmd.ItemInfo
	13, // 2: Cmd.MailAttach.itemdatas:type_name -> Cmd.ItemData
	4,  // 3: Cmd.BlobAttach.attachs:type_name -> Cmd.MailAttach
	2,  // 4: Cmd.MailData.type:type_name -> Cmd.EMailType
	1,  // 5: Cmd.MailData.status:type_name -> Cmd.EMailStatus
	5,  // 6: Cmd.MailData.attach:type_name -> Cmd.BlobAttach
	14, // 7: Cmd.MailData.weddingmsg:type_name -> Cmd.WeddingEventMsgCCmd
	15, // 8: Cmd.MailData.eventmsg:type_name -> Cmd.UserEventMailCmd
	7,  // 9: Cmd.MailTemplateData.msgs:type_name -> Cmd.MailMsg
	16, // 10: Cmd.QueryAllMail.cmd:type_name -> Cmd.Command
	0,  // 11: Cmd.QueryAllMail.param:type_name -> Cmd.MailParam
	6,  // 12: Cmd.QueryAllMail.datas:type_name -> Cmd.MailData
	16, // 13: Cmd.MailUpdate.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.MailUpdate.param:type_name -> Cmd.MailParam
	6,  // 15: Cmd.MailUpdate.updates:type_name -> Cmd.MailData
	16, // 16: Cmd.GetMailAttach.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.GetMailAttach.param:type_name -> Cmd.MailParam
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_SessionMail_proto_init() }
func file_SessionMail_proto_init() {
	if File_SessionMail_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneItem_proto_init()
	file_WeddingCCmd_proto_init()
	file_UserEvent_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SessionMail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailAttach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobAttach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionMail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMailAttach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SessionMail_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SessionMail_proto_goTypes,
		DependencyIndexes: file_SessionMail_proto_depIdxs,
		EnumInfos:         file_SessionMail_proto_enumTypes,
		MessageInfos:      file_SessionMail_proto_msgTypes,
	}.Build()
	File_SessionMail_proto = out.File
	file_SessionMail_proto_rawDesc = nil
	file_SessionMail_proto_goTypes = nil
	file_SessionMail_proto_depIdxs = nil
}
