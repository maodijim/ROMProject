// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: SessionSociality.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SocialityParam int32

const (
	SocialityParam_SOCIALITYPARAM_QUERYDATA            SocialityParam = 1
	SocialityParam_SOCIALITYPARAM_FINDUSER             SocialityParam = 2
	SocialityParam_SOCIALITYPARAM_UPDATE               SocialityParam = 3
	SocialityParam_SOCIALITYPARAM_UPDATEDATA           SocialityParam = 4
	SocialityParam_SOCIALITYPARAM_FRAMESTATUS          SocialityParam = 5
	SocialityParam_SOCIALITYPARAM_USE_GIFT_CODE        SocialityParam = 6
	SocialityParam_SOCIALITYPARAM_OPERATE_QUERY        SocialityParam = 7
	SocialityParam_SOCIALITYPARAM_OPERATE_TAKE         SocialityParam = 8
	SocialityParam_SOCIALITYPARAM_QUERYDATA_NTF        SocialityParam = 9
	SocialityParam_SOCIALITYPARAM_OPER_ACTIVITY_NTF    SocialityParam = 10
	SocialityParam_SOCIALITYPARAM_ADDRELATION          SocialityParam = 11
	SocialityParam_SOCIALITYPARAM_REMOVERELATION       SocialityParam = 12
	SocialityParam_SOCIALITYPARAM_QUERY_RECALL_LIST    SocialityParam = 13
	SocialityParam_SOCIALITYPARAM_RECALL_FRIEND        SocialityParam = 14
	SocialityParam_SOCIALITYPARAM_ADD_RELATION_RESULT  SocialityParam = 15
	SocialityParam_SOCIALITYPARAM_QUERY_CHARGE_VIRGIN  SocialityParam = 16
	SocialityParam_SOCIALITYPARAM_QUERY_USER_INFO      SocialityParam = 17
	SocialityParam_SOCIALITYPARAM_TUTOR_FUNC_STATE_NTF SocialityParam = 18
)

// Enum value maps for SocialityParam.
var (
	SocialityParam_name = map[int32]string{
		1:  "SOCIALITYPARAM_QUERYDATA",
		2:  "SOCIALITYPARAM_FINDUSER",
		3:  "SOCIALITYPARAM_UPDATE",
		4:  "SOCIALITYPARAM_UPDATEDATA",
		5:  "SOCIALITYPARAM_FRAMESTATUS",
		6:  "SOCIALITYPARAM_USE_GIFT_CODE",
		7:  "SOCIALITYPARAM_OPERATE_QUERY",
		8:  "SOCIALITYPARAM_OPERATE_TAKE",
		9:  "SOCIALITYPARAM_QUERYDATA_NTF",
		10: "SOCIALITYPARAM_OPER_ACTIVITY_NTF",
		11: "SOCIALITYPARAM_ADDRELATION",
		12: "SOCIALITYPARAM_REMOVERELATION",
		13: "SOCIALITYPARAM_QUERY_RECALL_LIST",
		14: "SOCIALITYPARAM_RECALL_FRIEND",
		15: "SOCIALITYPARAM_ADD_RELATION_RESULT",
		16: "SOCIALITYPARAM_QUERY_CHARGE_VIRGIN",
		17: "SOCIALITYPARAM_QUERY_USER_INFO",
		18: "SOCIALITYPARAM_TUTOR_FUNC_STATE_NTF",
	}
	SocialityParam_value = map[string]int32{
		"SOCIALITYPARAM_QUERYDATA":            1,
		"SOCIALITYPARAM_FINDUSER":             2,
		"SOCIALITYPARAM_UPDATE":               3,
		"SOCIALITYPARAM_UPDATEDATA":           4,
		"SOCIALITYPARAM_FRAMESTATUS":          5,
		"SOCIALITYPARAM_USE_GIFT_CODE":        6,
		"SOCIALITYPARAM_OPERATE_QUERY":        7,
		"SOCIALITYPARAM_OPERATE_TAKE":         8,
		"SOCIALITYPARAM_QUERYDATA_NTF":        9,
		"SOCIALITYPARAM_OPER_ACTIVITY_NTF":    10,
		"SOCIALITYPARAM_ADDRELATION":          11,
		"SOCIALITYPARAM_REMOVERELATION":       12,
		"SOCIALITYPARAM_QUERY_RECALL_LIST":    13,
		"SOCIALITYPARAM_RECALL_FRIEND":        14,
		"SOCIALITYPARAM_ADD_RELATION_RESULT":  15,
		"SOCIALITYPARAM_QUERY_CHARGE_VIRGIN":  16,
		"SOCIALITYPARAM_QUERY_USER_INFO":      17,
		"SOCIALITYPARAM_TUTOR_FUNC_STATE_NTF": 18,
	}
)

func (x SocialityParam) Enum() *SocialityParam {
	p := new(SocialityParam)
	*p = x
	return p
}

func (x SocialityParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocialityParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[0].Descriptor()
}

func (SocialityParam) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[0]
}

func (x SocialityParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SocialityParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SocialityParam(num)
	return nil
}

// Deprecated: Use SocialityParam.Descriptor instead.
func (SocialityParam) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{0}
}

type ESocialRelation int32

const (
	ESocialRelation_ESOCIALRELATION_MIN             ESocialRelation = 1
	ESocialRelation_ESOCIALRELATION_FRIEND          ESocialRelation = 2
	ESocialRelation_ESOCIALRELATION_MERRY           ESocialRelation = 4
	ESocialRelation_ESOCIALRELATION_CHAT            ESocialRelation = 8
	ESocialRelation_ESOCIALRELATION_TEAM            ESocialRelation = 16
	ESocialRelation_ESOCIALRELATION_APPLY           ESocialRelation = 32
	ESocialRelation_ESOCIALRELATION_BLACK           ESocialRelation = 64
	ESocialRelation_ESOCIALRELATION_BLACK_FOREVER   ESocialRelation = 128
	ESocialRelation_ESOCIALRELATION_TUTOR           ESocialRelation = 256
	ESocialRelation_ESOCIALRELATION_TUTOR_APPLY     ESocialRelation = 512
	ESocialRelation_ESOCIALRELATION_STUDENT         ESocialRelation = 1024
	ESocialRelation_ESOCIALRELATION_STUDENT_APPLY   ESocialRelation = 2048
	ESocialRelation_ESOCIALRELATION_STUDENT_RECENT  ESocialRelation = 4096
	ESocialRelation_ESOCIALRELATION_TUTOR_PUNISH    ESocialRelation = 8192
	ESocialRelation_ESOCIALRELATION_TUTOR_CLASSMATE ESocialRelation = 16384
	ESocialRelation_ESOCIALRELATION_RECALL          ESocialRelation = 32768
	ESocialRelation_ESOCIALRELATION_BERECALL        ESocialRelation = 65536
	ESocialRelation_ESOCIALRELATION_MAX             ESocialRelation = 65537
)

// Enum value maps for ESocialRelation.
var (
	ESocialRelation_name = map[int32]string{
		1:     "ESOCIALRELATION_MIN",
		2:     "ESOCIALRELATION_FRIEND",
		4:     "ESOCIALRELATION_MERRY",
		8:     "ESOCIALRELATION_CHAT",
		16:    "ESOCIALRELATION_TEAM",
		32:    "ESOCIALRELATION_APPLY",
		64:    "ESOCIALRELATION_BLACK",
		128:   "ESOCIALRELATION_BLACK_FOREVER",
		256:   "ESOCIALRELATION_TUTOR",
		512:   "ESOCIALRELATION_TUTOR_APPLY",
		1024:  "ESOCIALRELATION_STUDENT",
		2048:  "ESOCIALRELATION_STUDENT_APPLY",
		4096:  "ESOCIALRELATION_STUDENT_RECENT",
		8192:  "ESOCIALRELATION_TUTOR_PUNISH",
		16384: "ESOCIALRELATION_TUTOR_CLASSMATE",
		32768: "ESOCIALRELATION_RECALL",
		65536: "ESOCIALRELATION_BERECALL",
		65537: "ESOCIALRELATION_MAX",
	}
	ESocialRelation_value = map[string]int32{
		"ESOCIALRELATION_MIN":             1,
		"ESOCIALRELATION_FRIEND":          2,
		"ESOCIALRELATION_MERRY":           4,
		"ESOCIALRELATION_CHAT":            8,
		"ESOCIALRELATION_TEAM":            16,
		"ESOCIALRELATION_APPLY":           32,
		"ESOCIALRELATION_BLACK":           64,
		"ESOCIALRELATION_BLACK_FOREVER":   128,
		"ESOCIALRELATION_TUTOR":           256,
		"ESOCIALRELATION_TUTOR_APPLY":     512,
		"ESOCIALRELATION_STUDENT":         1024,
		"ESOCIALRELATION_STUDENT_APPLY":   2048,
		"ESOCIALRELATION_STUDENT_RECENT":  4096,
		"ESOCIALRELATION_TUTOR_PUNISH":    8192,
		"ESOCIALRELATION_TUTOR_CLASSMATE": 16384,
		"ESOCIALRELATION_RECALL":          32768,
		"ESOCIALRELATION_BERECALL":        65536,
		"ESOCIALRELATION_MAX":             65537,
	}
)

func (x ESocialRelation) Enum() *ESocialRelation {
	p := new(ESocialRelation)
	*p = x
	return p
}

func (x ESocialRelation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESocialRelation) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[1].Descriptor()
}

func (ESocialRelation) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[1]
}

func (x ESocialRelation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESocialRelation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESocialRelation(num)
	return nil
}

// Deprecated: Use ESocialRelation.Descriptor instead.
func (ESocialRelation) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{1}
}

type ESocialData int32

const (
	ESocialData_ESOCIALDATA_MIN            ESocialData = 1
	ESocialData_ESOCIALDATA_LEVEL          ESocialData = 2
	ESocialData_ESOCIALDATA_OFFLINETIME    ESocialData = 3
	ESocialData_ESOCIALDATA_RELATION       ESocialData = 4
	ESocialData_ESOCIALDATA_PROFESSION     ESocialData = 5
	ESocialData_ESOCIALDATA_PORTRAIT       ESocialData = 6
	ESocialData_ESOCIALDATA_FRAME          ESocialData = 7
	ESocialData_ESOCIALDATA_HAIR           ESocialData = 8
	ESocialData_ESOCIALDATA_HAIRCOLOR      ESocialData = 9
	ESocialData_ESOCIALDATA_BODY           ESocialData = 10
	ESocialData_ESOCIALDATA_ADVENTURELV    ESocialData = 11
	ESocialData_ESOCIALDATA_ADVENTUREEXP   ESocialData = 12
	ESocialData_ESOCIALDATA_APPELLATION    ESocialData = 13
	ESocialData_ESOCIALDATA_GENDER         ESocialData = 14
	ESocialData_ESOCIALDATA_GUILDNAME      ESocialData = 15
	ESocialData_ESOCIALDATA_GUILDPORTRAIT  ESocialData = 16
	ESocialData_ESOCIALDATA_BLINK          ESocialData = 18
	ESocialData_ESOCIALDATA_ZONEID         ESocialData = 19
	ESocialData_ESOCIALDATA_NAME           ESocialData = 20
	ESocialData_ESOCIALDATA_CREATETIME     ESocialData = 21
	ESocialData_ESOCIALDATA_HEAD           ESocialData = 22
	ESocialData_ESOCIALDATA_FACE           ESocialData = 23
	ESocialData_ESOCIALDATA_MOUTH          ESocialData = 24
	ESocialData_ESOCIALDATA_TUTOR_PROFIC   ESocialData = 25
	ESocialData_ESOCIALDATA_EYE            ESocialData = 26
	ESocialData_ESOCIALDATA_RECALL         ESocialData = 27
	ESocialData_ESOCIALDATA_CANRECALL      ESocialData = 28
	ESocialData_ESOCIALDATA_WAITSIGN       ESocialData = 29
	ESocialData_ESOCIALDATA_TEAMNAME       ESocialData = 30
	ESocialData_ESOCIALDATA_HOME_ROOMID    ESocialData = 31
	ESocialData_ESOCIALDATA_PORTRAIT_FRAME ESocialData = 32
	ESocialData_ESOCIALDATA_BATTLEPASS_LV  ESocialData = 33
	ESocialData_ESOCIALDATA_BATTLEPASS_EXP ESocialData = 34
	ESocialData_ESOCIALDATA_AFK            ESocialData = 35
	ESocialData_ESOCIALDATA_MAX            ESocialData = 36
)

// Enum value maps for ESocialData.
var (
	ESocialData_name = map[int32]string{
		1:  "ESOCIALDATA_MIN",
		2:  "ESOCIALDATA_LEVEL",
		3:  "ESOCIALDATA_OFFLINETIME",
		4:  "ESOCIALDATA_RELATION",
		5:  "ESOCIALDATA_PROFESSION",
		6:  "ESOCIALDATA_PORTRAIT",
		7:  "ESOCIALDATA_FRAME",
		8:  "ESOCIALDATA_HAIR",
		9:  "ESOCIALDATA_HAIRCOLOR",
		10: "ESOCIALDATA_BODY",
		11: "ESOCIALDATA_ADVENTURELV",
		12: "ESOCIALDATA_ADVENTUREEXP",
		13: "ESOCIALDATA_APPELLATION",
		14: "ESOCIALDATA_GENDER",
		15: "ESOCIALDATA_GUILDNAME",
		16: "ESOCIALDATA_GUILDPORTRAIT",
		18: "ESOCIALDATA_BLINK",
		19: "ESOCIALDATA_ZONEID",
		20: "ESOCIALDATA_NAME",
		21: "ESOCIALDATA_CREATETIME",
		22: "ESOCIALDATA_HEAD",
		23: "ESOCIALDATA_FACE",
		24: "ESOCIALDATA_MOUTH",
		25: "ESOCIALDATA_TUTOR_PROFIC",
		26: "ESOCIALDATA_EYE",
		27: "ESOCIALDATA_RECALL",
		28: "ESOCIALDATA_CANRECALL",
		29: "ESOCIALDATA_WAITSIGN",
		30: "ESOCIALDATA_TEAMNAME",
		31: "ESOCIALDATA_HOME_ROOMID",
		32: "ESOCIALDATA_PORTRAIT_FRAME",
		33: "ESOCIALDATA_BATTLEPASS_LV",
		34: "ESOCIALDATA_BATTLEPASS_EXP",
		35: "ESOCIALDATA_AFK",
		36: "ESOCIALDATA_MAX",
	}
	ESocialData_value = map[string]int32{
		"ESOCIALDATA_MIN":            1,
		"ESOCIALDATA_LEVEL":          2,
		"ESOCIALDATA_OFFLINETIME":    3,
		"ESOCIALDATA_RELATION":       4,
		"ESOCIALDATA_PROFESSION":     5,
		"ESOCIALDATA_PORTRAIT":       6,
		"ESOCIALDATA_FRAME":          7,
		"ESOCIALDATA_HAIR":           8,
		"ESOCIALDATA_HAIRCOLOR":      9,
		"ESOCIALDATA_BODY":           10,
		"ESOCIALDATA_ADVENTURELV":    11,
		"ESOCIALDATA_ADVENTUREEXP":   12,
		"ESOCIALDATA_APPELLATION":    13,
		"ESOCIALDATA_GENDER":         14,
		"ESOCIALDATA_GUILDNAME":      15,
		"ESOCIALDATA_GUILDPORTRAIT":  16,
		"ESOCIALDATA_BLINK":          18,
		"ESOCIALDATA_ZONEID":         19,
		"ESOCIALDATA_NAME":           20,
		"ESOCIALDATA_CREATETIME":     21,
		"ESOCIALDATA_HEAD":           22,
		"ESOCIALDATA_FACE":           23,
		"ESOCIALDATA_MOUTH":          24,
		"ESOCIALDATA_TUTOR_PROFIC":   25,
		"ESOCIALDATA_EYE":            26,
		"ESOCIALDATA_RECALL":         27,
		"ESOCIALDATA_CANRECALL":      28,
		"ESOCIALDATA_WAITSIGN":       29,
		"ESOCIALDATA_TEAMNAME":       30,
		"ESOCIALDATA_HOME_ROOMID":    31,
		"ESOCIALDATA_PORTRAIT_FRAME": 32,
		"ESOCIALDATA_BATTLEPASS_LV":  33,
		"ESOCIALDATA_BATTLEPASS_EXP": 34,
		"ESOCIALDATA_AFK":            35,
		"ESOCIALDATA_MAX":            36,
	}
)

func (x ESocialData) Enum() *ESocialData {
	p := new(ESocialData)
	*p = x
	return p
}

func (x ESocialData) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESocialData) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[2].Descriptor()
}

func (ESocialData) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[2]
}

func (x ESocialData) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESocialData) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESocialData(num)
	return nil
}

// Deprecated: Use ESocialData.Descriptor instead.
func (ESocialData) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{2}
}

type EOperateType int32

const (
	EOperateType_EOperateType_Summer            EOperateType = 1
	EOperateType_EOperateType_Autumn            EOperateType = 2
	EOperateType_EOperateType_Charge            EOperateType = 3
	EOperateType_EOperateType_CodeBW            EOperateType = 4
	EOperateType_EOperateType_CodeMX            EOperateType = 5
	EOperateType_EOperateType_RedBag            EOperateType = 6
	EOperateType_EOperateType_Phone             EOperateType = 7
	EOperateType_EOperateType_MonthCard         EOperateType = 8
	EOperateType_EOperateType_OpenServer        EOperateType = 9
	EOperateType_EOperateType_WeiJingOpenServer EOperateType = 10
)

// Enum value maps for EOperateType.
var (
	EOperateType_name = map[int32]string{
		1:  "EOperateType_Summer",
		2:  "EOperateType_Autumn",
		3:  "EOperateType_Charge",
		4:  "EOperateType_CodeBW",
		5:  "EOperateType_CodeMX",
		6:  "EOperateType_RedBag",
		7:  "EOperateType_Phone",
		8:  "EOperateType_MonthCard",
		9:  "EOperateType_OpenServer",
		10: "EOperateType_WeiJingOpenServer",
	}
	EOperateType_value = map[string]int32{
		"EOperateType_Summer":            1,
		"EOperateType_Autumn":            2,
		"EOperateType_Charge":            3,
		"EOperateType_CodeBW":            4,
		"EOperateType_CodeMX":            5,
		"EOperateType_RedBag":            6,
		"EOperateType_Phone":             7,
		"EOperateType_MonthCard":         8,
		"EOperateType_OpenServer":        9,
		"EOperateType_WeiJingOpenServer": 10,
	}
)

func (x EOperateType) Enum() *EOperateType {
	p := new(EOperateType)
	*p = x
	return p
}

func (x EOperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[3].Descriptor()
}

func (EOperateType) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[3]
}

func (x EOperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EOperateType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EOperateType(num)
	return nil
}

// Deprecated: Use EOperateType.Descriptor instead.
func (EOperateType) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{3}
}

type EOperateState int32

const (
	EOperateState_EOperateState_None    EOperateState = 1
	EOperateState_EOperateState_Toke    EOperateState = 2
	EOperateState_EOperateState_CanTake EOperateState = 3
	EOperateState_EOperateState_Expire  EOperateState = 4
)

// Enum value maps for EOperateState.
var (
	EOperateState_name = map[int32]string{
		1: "EOperateState_None",
		2: "EOperateState_Toke",
		3: "EOperateState_CanTake",
		4: "EOperateState_Expire",
	}
	EOperateState_value = map[string]int32{
		"EOperateState_None":    1,
		"EOperateState_Toke":    2,
		"EOperateState_CanTake": 3,
		"EOperateState_Expire":  4,
	}
)

func (x EOperateState) Enum() *EOperateState {
	p := new(EOperateState)
	*p = x
	return p
}

func (x EOperateState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOperateState) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[4].Descriptor()
}

func (EOperateState) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[4]
}

func (x EOperateState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EOperateState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EOperateState(num)
	return nil
}

// Deprecated: Use EOperateState.Descriptor instead.
func (EOperateState) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{4}
}

type OperActMonthCardType int32

const (
	OperActMonthCardType_OPERACTMONTHCARDTYPE_ALL  OperActMonthCardType = 0
	OperActMonthCardType_OPERACTMONTHCARDTYPE_HAS  OperActMonthCardType = 1
	OperActMonthCardType_OPERACTMONTHCARDTYPE_NONE OperActMonthCardType = 2
)

// Enum value maps for OperActMonthCardType.
var (
	OperActMonthCardType_name = map[int32]string{
		0: "OPERACTMONTHCARDTYPE_ALL",
		1: "OPERACTMONTHCARDTYPE_HAS",
		2: "OPERACTMONTHCARDTYPE_NONE",
	}
	OperActMonthCardType_value = map[string]int32{
		"OPERACTMONTHCARDTYPE_ALL":  0,
		"OPERACTMONTHCARDTYPE_HAS":  1,
		"OPERACTMONTHCARDTYPE_NONE": 2,
	}
)

func (x OperActMonthCardType) Enum() *OperActMonthCardType {
	p := new(OperActMonthCardType)
	*p = x
	return p
}

func (x OperActMonthCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperActMonthCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_SessionSociality_proto_enumTypes[5].Descriptor()
}

func (OperActMonthCardType) Type() protoreflect.EnumType {
	return &file_SessionSociality_proto_enumTypes[5]
}

func (x OperActMonthCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OperActMonthCardType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OperActMonthCardType(num)
	return nil
}

// Deprecated: Use OperActMonthCardType.Descriptor instead.
func (OperActMonthCardType) EnumDescriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{5}
}

type SocialData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid          *uint64      `protobuf:"varint,1,opt,name=guid,def=0" json:"guid,omitempty"`
	Accid         *uint64      `protobuf:"varint,2,opt,name=accid,def=0" json:"accid,omitempty"`
	Level         *uint32      `protobuf:"varint,3,opt,name=level,def=0" json:"level,omitempty"`
	Offlinetime   *uint32      `protobuf:"varint,4,opt,name=offlinetime,def=0" json:"offlinetime,omitempty"`
	Relation      *uint32      `protobuf:"varint,5,opt,name=relation,def=0" json:"relation,omitempty"`
	Portrait      *uint32      `protobuf:"varint,6,opt,name=portrait,def=0" json:"portrait,omitempty"`
	Frame         *uint32      `protobuf:"varint,7,opt,name=frame,def=0" json:"frame,omitempty"`
	Hair          *uint32      `protobuf:"varint,8,opt,name=hair,def=0" json:"hair,omitempty"`
	Haircolor     *uint32      `protobuf:"varint,9,opt,name=haircolor,def=0" json:"haircolor,omitempty"`
	Body          *uint32      `protobuf:"varint,10,opt,name=body,def=0" json:"body,omitempty"`
	Head          *uint32      `protobuf:"varint,11,opt,name=head,def=0" json:"head,omitempty"`
	Face          *uint32      `protobuf:"varint,12,opt,name=face,def=0" json:"face,omitempty"`
	Mouth         *uint32      `protobuf:"varint,13,opt,name=mouth,def=0" json:"mouth,omitempty"`
	Eye           *uint32      `protobuf:"varint,14,opt,name=eye,def=0" json:"eye,omitempty"`
	Profic        *uint32      `protobuf:"varint,15,opt,name=profic,def=0" json:"profic,omitempty"`
	Adventurelv   *uint32      `protobuf:"varint,16,opt,name=adventurelv,def=0" json:"adventurelv,omitempty"`
	Adventureexp  *uint32      `protobuf:"varint,17,opt,name=adventureexp,def=0" json:"adventureexp,omitempty"`
	Appellation   *uint32      `protobuf:"varint,18,opt,name=appellation,def=0" json:"appellation,omitempty"`
	Mapid         *uint32      `protobuf:"varint,19,opt,name=mapid,def=0" json:"mapid,omitempty"`
	Zoneid        *uint32      `protobuf:"varint,20,opt,name=zoneid,def=0" json:"zoneid,omitempty"`
	Roomid        *uint32      `protobuf:"varint,32,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Profession    *EProfession `protobuf:"varint,21,opt,name=profession,enum=Cmd.EProfession,def=0" json:"profession,omitempty"`
	Gender        *EGender     `protobuf:"varint,22,opt,name=gender,enum=Cmd.EGender,def=0" json:"gender,omitempty"`
	Blink         *bool        `protobuf:"varint,23,opt,name=blink,def=0" json:"blink,omitempty"`
	Recall        *bool        `protobuf:"varint,24,opt,name=recall,def=0" json:"recall,omitempty"`
	Canrecall     *bool        `protobuf:"varint,25,opt,name=canrecall,def=0" json:"canrecall,omitempty"`
	Waitsign      *bool        `protobuf:"varint,30,opt,name=waitsign,def=0" json:"waitsign,omitempty"`
	Name          *string      `protobuf:"bytes,26,opt,name=name" json:"name,omitempty"`
	Guildname     *string      `protobuf:"bytes,27,opt,name=guildname" json:"guildname,omitempty"`
	Guildportrait *string      `protobuf:"bytes,28,opt,name=guildportrait" json:"guildportrait,omitempty"`
	Createtime    *string      `protobuf:"bytes,29,opt,name=createtime" json:"createtime,omitempty"`
	Teamname      *string      `protobuf:"bytes,31,opt,name=teamname" json:"teamname,omitempty"`
	PortraitFrame *uint32      `protobuf:"varint,33,opt,name=portrait_frame,json=portraitFrame,def=0" json:"portrait_frame,omitempty"`
	BattlepassLv  *uint32      `protobuf:"varint,34,opt,name=battlepass_lv,json=battlepassLv,def=0" json:"battlepass_lv,omitempty"`
	BattlepassExp *uint32      `protobuf:"varint,35,opt,name=battlepass_exp,json=battlepassExp,def=0" json:"battlepass_exp,omitempty"`
	Afk           *bool        `protobuf:"varint,36,opt,name=afk" json:"afk,omitempty"`
}

// Default values for SocialData fields.
const (
	Default_SocialData_Guid          = uint64(0)
	Default_SocialData_Accid         = uint64(0)
	Default_SocialData_Level         = uint32(0)
	Default_SocialData_Offlinetime   = uint32(0)
	Default_SocialData_Relation      = uint32(0)
	Default_SocialData_Portrait      = uint32(0)
	Default_SocialData_Frame         = uint32(0)
	Default_SocialData_Hair          = uint32(0)
	Default_SocialData_Haircolor     = uint32(0)
	Default_SocialData_Body          = uint32(0)
	Default_SocialData_Head          = uint32(0)
	Default_SocialData_Face          = uint32(0)
	Default_SocialData_Mouth         = uint32(0)
	Default_SocialData_Eye           = uint32(0)
	Default_SocialData_Profic        = uint32(0)
	Default_SocialData_Adventurelv   = uint32(0)
	Default_SocialData_Adventureexp  = uint32(0)
	Default_SocialData_Appellation   = uint32(0)
	Default_SocialData_Mapid         = uint32(0)
	Default_SocialData_Zoneid        = uint32(0)
	Default_SocialData_Roomid        = uint32(0)
	Default_SocialData_Profession    = EProfession_EPROFESSION_MIN
	Default_SocialData_Gender        = EGender_EGENDER_MIN
	Default_SocialData_Blink         = bool(false)
	Default_SocialData_Recall        = bool(false)
	Default_SocialData_Canrecall     = bool(false)
	Default_SocialData_Waitsign      = bool(false)
	Default_SocialData_PortraitFrame = uint32(0)
	Default_SocialData_BattlepassLv  = uint32(0)
	Default_SocialData_BattlepassExp = uint32(0)
)

func (x *SocialData) Reset() {
	*x = SocialData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialData) ProtoMessage() {}

func (x *SocialData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialData.ProtoReflect.Descriptor instead.
func (*SocialData) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{0}
}

func (x *SocialData) GetGuid() uint64 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return Default_SocialData_Guid
}

func (x *SocialData) GetAccid() uint64 {
	if x != nil && x.Accid != nil {
		return *x.Accid
	}
	return Default_SocialData_Accid
}

func (x *SocialData) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_SocialData_Level
}

func (x *SocialData) GetOfflinetime() uint32 {
	if x != nil && x.Offlinetime != nil {
		return *x.Offlinetime
	}
	return Default_SocialData_Offlinetime
}

func (x *SocialData) GetRelation() uint32 {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return Default_SocialData_Relation
}

func (x *SocialData) GetPortrait() uint32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return Default_SocialData_Portrait
}

func (x *SocialData) GetFrame() uint32 {
	if x != nil && x.Frame != nil {
		return *x.Frame
	}
	return Default_SocialData_Frame
}

func (x *SocialData) GetHair() uint32 {
	if x != nil && x.Hair != nil {
		return *x.Hair
	}
	return Default_SocialData_Hair
}

func (x *SocialData) GetHaircolor() uint32 {
	if x != nil && x.Haircolor != nil {
		return *x.Haircolor
	}
	return Default_SocialData_Haircolor
}

func (x *SocialData) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return Default_SocialData_Body
}

func (x *SocialData) GetHead() uint32 {
	if x != nil && x.Head != nil {
		return *x.Head
	}
	return Default_SocialData_Head
}

func (x *SocialData) GetFace() uint32 {
	if x != nil && x.Face != nil {
		return *x.Face
	}
	return Default_SocialData_Face
}

func (x *SocialData) GetMouth() uint32 {
	if x != nil && x.Mouth != nil {
		return *x.Mouth
	}
	return Default_SocialData_Mouth
}

func (x *SocialData) GetEye() uint32 {
	if x != nil && x.Eye != nil {
		return *x.Eye
	}
	return Default_SocialData_Eye
}

func (x *SocialData) GetProfic() uint32 {
	if x != nil && x.Profic != nil {
		return *x.Profic
	}
	return Default_SocialData_Profic
}

func (x *SocialData) GetAdventurelv() uint32 {
	if x != nil && x.Adventurelv != nil {
		return *x.Adventurelv
	}
	return Default_SocialData_Adventurelv
}

func (x *SocialData) GetAdventureexp() uint32 {
	if x != nil && x.Adventureexp != nil {
		return *x.Adventureexp
	}
	return Default_SocialData_Adventureexp
}

func (x *SocialData) GetAppellation() uint32 {
	if x != nil && x.Appellation != nil {
		return *x.Appellation
	}
	return Default_SocialData_Appellation
}

func (x *SocialData) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return Default_SocialData_Mapid
}

func (x *SocialData) GetZoneid() uint32 {
	if x != nil && x.Zoneid != nil {
		return *x.Zoneid
	}
	return Default_SocialData_Zoneid
}

func (x *SocialData) GetRoomid() uint32 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_SocialData_Roomid
}

func (x *SocialData) GetProfession() EProfession {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return Default_SocialData_Profession
}

func (x *SocialData) GetGender() EGender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Default_SocialData_Gender
}

func (x *SocialData) GetBlink() bool {
	if x != nil && x.Blink != nil {
		return *x.Blink
	}
	return Default_SocialData_Blink
}

func (x *SocialData) GetRecall() bool {
	if x != nil && x.Recall != nil {
		return *x.Recall
	}
	return Default_SocialData_Recall
}

func (x *SocialData) GetCanrecall() bool {
	if x != nil && x.Canrecall != nil {
		return *x.Canrecall
	}
	return Default_SocialData_Canrecall
}

func (x *SocialData) GetWaitsign() bool {
	if x != nil && x.Waitsign != nil {
		return *x.Waitsign
	}
	return Default_SocialData_Waitsign
}

func (x *SocialData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SocialData) GetGuildname() string {
	if x != nil && x.Guildname != nil {
		return *x.Guildname
	}
	return ""
}

func (x *SocialData) GetGuildportrait() string {
	if x != nil && x.Guildportrait != nil {
		return *x.Guildportrait
	}
	return ""
}

func (x *SocialData) GetCreatetime() string {
	if x != nil && x.Createtime != nil {
		return *x.Createtime
	}
	return ""
}

func (x *SocialData) GetTeamname() string {
	if x != nil && x.Teamname != nil {
		return *x.Teamname
	}
	return ""
}

func (x *SocialData) GetPortraitFrame() uint32 {
	if x != nil && x.PortraitFrame != nil {
		return *x.PortraitFrame
	}
	return Default_SocialData_PortraitFrame
}

func (x *SocialData) GetBattlepassLv() uint32 {
	if x != nil && x.BattlepassLv != nil {
		return *x.BattlepassLv
	}
	return Default_SocialData_BattlepassLv
}

func (x *SocialData) GetBattlepassExp() uint32 {
	if x != nil && x.BattlepassExp != nil {
		return *x.BattlepassExp
	}
	return Default_SocialData_BattlepassExp
}

func (x *SocialData) GetAfk() bool {
	if x != nil && x.Afk != nil {
		return *x.Afk
	}
	return false
}

type QuerySocialData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=1" json:"param,omitempty"`
	Datas []*SocialData   `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
	Over  *bool           `protobuf:"varint,5,opt,name=over" json:"over,omitempty"`
}

// Default values for QuerySocialData fields.
const (
	Default_QuerySocialData_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_QuerySocialData_Param = SocialityParam_SOCIALITYPARAM_QUERYDATA
)

func (x *QuerySocialData) Reset() {
	*x = QuerySocialData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySocialData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySocialData) ProtoMessage() {}

func (x *QuerySocialData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySocialData.ProtoReflect.Descriptor instead.
func (*QuerySocialData) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{1}
}

func (x *QuerySocialData) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QuerySocialData_Cmd
}

func (x *QuerySocialData) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QuerySocialData_Param
}

func (x *QuerySocialData) GetDatas() []*SocialData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *QuerySocialData) GetOver() bool {
	if x != nil && x.Over != nil {
		return *x.Over
	}
	return false
}

type FindUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param   *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=2" json:"param,omitempty"`
	Keyword *string         `protobuf:"bytes,3,opt,name=keyword" json:"keyword,omitempty"`
	Datas   []*SocialData   `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
}

// Default values for FindUser fields.
const (
	Default_FindUser_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_FindUser_Param = SocialityParam_SOCIALITYPARAM_FINDUSER
)

func (x *FindUser) Reset() {
	*x = FindUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUser) ProtoMessage() {}

func (x *FindUser) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUser.ProtoReflect.Descriptor instead.
func (*FindUser) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{2}
}

func (x *FindUser) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FindUser_Cmd
}

func (x *FindUser) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FindUser_Param
}

func (x *FindUser) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *FindUser) GetDatas() []*SocialData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type SocialUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param   *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=3" json:"param,omitempty"`
	Updates []*SocialData   `protobuf:"bytes,4,rep,name=updates" json:"updates,omitempty"`
	Dels    []uint64        `protobuf:"varint,5,rep,name=dels" json:"dels,omitempty"`
}

// Default values for SocialUpdate fields.
const (
	Default_SocialUpdate_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_SocialUpdate_Param = SocialityParam_SOCIALITYPARAM_UPDATE
)

func (x *SocialUpdate) Reset() {
	*x = SocialUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUpdate) ProtoMessage() {}

func (x *SocialUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUpdate.ProtoReflect.Descriptor instead.
func (*SocialUpdate) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{3}
}

func (x *SocialUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SocialUpdate_Cmd
}

func (x *SocialUpdate) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SocialUpdate_Param
}

func (x *SocialUpdate) GetUpdates() []*SocialData {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *SocialUpdate) GetDels() []uint64 {
	if x != nil {
		return x.Dels
	}
	return nil
}

type SocialDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *ESocialData `protobuf:"varint,1,opt,name=type,enum=Cmd.ESocialData,def=1" json:"type,omitempty"`
	Value *uint32      `protobuf:"varint,2,opt,name=value,def=0" json:"value,omitempty"`
	Data  *string      `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

// Default values for SocialDataItem fields.
const (
	Default_SocialDataItem_Type  = ESocialData_ESOCIALDATA_MIN
	Default_SocialDataItem_Value = uint32(0)
)

func (x *SocialDataItem) Reset() {
	*x = SocialDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialDataItem) ProtoMessage() {}

func (x *SocialDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialDataItem.ProtoReflect.Descriptor instead.
func (*SocialDataItem) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{4}
}

func (x *SocialDataItem) GetType() ESocialData {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_SocialDataItem_Type
}

func (x *SocialDataItem) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_SocialDataItem_Value
}

func (x *SocialDataItem) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type SocialDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=4" json:"param,omitempty"`
	Guid  *uint64           `protobuf:"varint,3,opt,name=guid,def=0" json:"guid,omitempty"`
	Items []*SocialDataItem `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
}

// Default values for SocialDataUpdate fields.
const (
	Default_SocialDataUpdate_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_SocialDataUpdate_Param = SocialityParam_SOCIALITYPARAM_UPDATEDATA
	Default_SocialDataUpdate_Guid  = uint64(0)
)

func (x *SocialDataUpdate) Reset() {
	*x = SocialDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialDataUpdate) ProtoMessage() {}

func (x *SocialDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialDataUpdate.ProtoReflect.Descriptor instead.
func (*SocialDataUpdate) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{5}
}

func (x *SocialDataUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SocialDataUpdate_Cmd
}

func (x *SocialDataUpdate) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SocialDataUpdate_Param
}

func (x *SocialDataUpdate) GetGuid() uint64 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return Default_SocialDataUpdate_Guid
}

func (x *SocialDataUpdate) GetItems() []*SocialDataItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FrameStatusSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=5" json:"param,omitempty"`
	Open  *bool           `protobuf:"varint,3,opt,name=open,def=0" json:"open,omitempty"`
}

// Default values for FrameStatusSocialCmd fields.
const (
	Default_FrameStatusSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_FrameStatusSocialCmd_Param = SocialityParam_SOCIALITYPARAM_FRAMESTATUS
	Default_FrameStatusSocialCmd_Open  = bool(false)
)

func (x *FrameStatusSocialCmd) Reset() {
	*x = FrameStatusSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameStatusSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameStatusSocialCmd) ProtoMessage() {}

func (x *FrameStatusSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameStatusSocialCmd.ProtoReflect.Descriptor instead.
func (*FrameStatusSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{6}
}

func (x *FrameStatusSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FrameStatusSocialCmd_Cmd
}

func (x *FrameStatusSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FrameStatusSocialCmd_Param
}

func (x *FrameStatusSocialCmd) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return Default_FrameStatusSocialCmd_Open
}

type UseGiftCodeSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=6" json:"param,omitempty"`
	Code  *string         `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	Ret   *bool           `protobuf:"varint,4,opt,name=ret" json:"ret,omitempty"`
}

// Default values for UseGiftCodeSocialCmd fields.
const (
	Default_UseGiftCodeSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_UseGiftCodeSocialCmd_Param = SocialityParam_SOCIALITYPARAM_USE_GIFT_CODE
)

func (x *UseGiftCodeSocialCmd) Reset() {
	*x = UseGiftCodeSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseGiftCodeSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseGiftCodeSocialCmd) ProtoMessage() {}

func (x *UseGiftCodeSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseGiftCodeSocialCmd.ProtoReflect.Descriptor instead.
func (*UseGiftCodeSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{7}
}

func (x *UseGiftCodeSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UseGiftCodeSocialCmd_Cmd
}

func (x *UseGiftCodeSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UseGiftCodeSocialCmd_Param
}

func (x *UseGiftCodeSocialCmd) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *UseGiftCodeSocialCmd) GetRet() bool {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return false
}

type OperateQuerySocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param  *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=7" json:"param,omitempty"`
	Type   *EOperateType   `protobuf:"varint,3,opt,name=type,enum=Cmd.EOperateType" json:"type,omitempty"`
	State  *EOperateState  `protobuf:"varint,4,opt,name=state,enum=Cmd.EOperateState" json:"state,omitempty"`
	Param1 *uint32         `protobuf:"varint,5,opt,name=param1" json:"param1,omitempty"`
	Param2 *uint32         `protobuf:"varint,6,opt,name=param2" json:"param2,omitempty"`
	Param3 *uint32         `protobuf:"varint,7,opt,name=param3" json:"param3,omitempty"`
	Param4 []uint32        `protobuf:"varint,8,rep,name=param4" json:"param4,omitempty"`
}

// Default values for OperateQuerySocialCmd fields.
const (
	Default_OperateQuerySocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_OperateQuerySocialCmd_Param = SocialityParam_SOCIALITYPARAM_OPERATE_QUERY
)

func (x *OperateQuerySocialCmd) Reset() {
	*x = OperateQuerySocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateQuerySocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateQuerySocialCmd) ProtoMessage() {}

func (x *OperateQuerySocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateQuerySocialCmd.ProtoReflect.Descriptor instead.
func (*OperateQuerySocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{8}
}

func (x *OperateQuerySocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_OperateQuerySocialCmd_Cmd
}

func (x *OperateQuerySocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_OperateQuerySocialCmd_Param
}

func (x *OperateQuerySocialCmd) GetType() EOperateType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EOperateType_EOperateType_Summer
}

func (x *OperateQuerySocialCmd) GetState() EOperateState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EOperateState_EOperateState_None
}

func (x *OperateQuerySocialCmd) GetParam1() uint32 {
	if x != nil && x.Param1 != nil {
		return *x.Param1
	}
	return 0
}

func (x *OperateQuerySocialCmd) GetParam2() uint32 {
	if x != nil && x.Param2 != nil {
		return *x.Param2
	}
	return 0
}

func (x *OperateQuerySocialCmd) GetParam3() uint32 {
	if x != nil && x.Param3 != nil {
		return *x.Param3
	}
	return 0
}

func (x *OperateQuerySocialCmd) GetParam4() []uint32 {
	if x != nil {
		return x.Param4
	}
	return nil
}

type OperateTakeSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param  *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=8" json:"param,omitempty"`
	Type   *EOperateType   `protobuf:"varint,3,opt,name=type,enum=Cmd.EOperateType" json:"type,omitempty"`
	State  *EOperateState  `protobuf:"varint,4,opt,name=state,enum=Cmd.EOperateState" json:"state,omitempty"`
	Subkey *uint32         `protobuf:"varint,5,opt,name=subkey" json:"subkey,omitempty"`
}

// Default values for OperateTakeSocialCmd fields.
const (
	Default_OperateTakeSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_OperateTakeSocialCmd_Param = SocialityParam_SOCIALITYPARAM_OPERATE_TAKE
)

func (x *OperateTakeSocialCmd) Reset() {
	*x = OperateTakeSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateTakeSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateTakeSocialCmd) ProtoMessage() {}

func (x *OperateTakeSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateTakeSocialCmd.ProtoReflect.Descriptor instead.
func (*OperateTakeSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{9}
}

func (x *OperateTakeSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_OperateTakeSocialCmd_Cmd
}

func (x *OperateTakeSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_OperateTakeSocialCmd_Param
}

func (x *OperateTakeSocialCmd) GetType() EOperateType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EOperateType_EOperateType_Summer
}

func (x *OperateTakeSocialCmd) GetState() EOperateState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EOperateState_EOperateState_None
}

func (x *OperateTakeSocialCmd) GetSubkey() uint32 {
	if x != nil && x.Subkey != nil {
		return *x.Subkey
	}
	return 0
}

type QueryDataNtfSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param     *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=9" json:"param,omitempty"`
	Relations []*SocialData   `protobuf:"bytes,3,rep,name=relations" json:"relations,omitempty"`
}

// Default values for QueryDataNtfSocialCmd fields.
const (
	Default_QueryDataNtfSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_QueryDataNtfSocialCmd_Param = SocialityParam_SOCIALITYPARAM_QUERYDATA_NTF
)

func (x *QueryDataNtfSocialCmd) Reset() {
	*x = QueryDataNtfSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataNtfSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataNtfSocialCmd) ProtoMessage() {}

func (x *QueryDataNtfSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataNtfSocialCmd.ProtoReflect.Descriptor instead.
func (*QueryDataNtfSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{10}
}

func (x *QueryDataNtfSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryDataNtfSocialCmd_Cmd
}

func (x *QueryDataNtfSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryDataNtfSocialCmd_Param
}

func (x *QueryDataNtfSocialCmd) GetRelations() []*SocialData {
	if x != nil {
		return x.Relations
	}
	return nil
}

type OperActivityUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *uint32 `protobuf:"varint,1,opt,name=language,def=0" json:"language,omitempty"`
	Url      *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

// Default values for OperActivityUrl fields.
const (
	Default_OperActivityUrl_Language = uint32(0)
)

func (x *OperActivityUrl) Reset() {
	*x = OperActivityUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperActivityUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperActivityUrl) ProtoMessage() {}

func (x *OperActivityUrl) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperActivityUrl.ProtoReflect.Descriptor instead.
func (*OperActivityUrl) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{11}
}

func (x *OperActivityUrl) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return Default_OperActivityUrl_Language
}

func (x *OperActivityUrl) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type OperActivityLang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *uint32 `protobuf:"varint,1,opt,name=language,def=0" json:"language,omitempty"`
	Iconurl  *string `protobuf:"bytes,2,opt,name=iconurl" json:"iconurl,omitempty"`
	Url      *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	PicUrl   *string `protobuf:"bytes,4,opt,name=pic_url,json=picUrl" json:"pic_url,omitempty"`
	Name     *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
}

// Default values for OperActivityLang fields.
const (
	Default_OperActivityLang_Language = uint32(0)
)

func (x *OperActivityLang) Reset() {
	*x = OperActivityLang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperActivityLang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperActivityLang) ProtoMessage() {}

func (x *OperActivityLang) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperActivityLang.ProtoReflect.Descriptor instead.
func (*OperActivityLang) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{12}
}

func (x *OperActivityLang) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return Default_OperActivityLang_Language
}

func (x *OperActivityLang) GetIconurl() string {
	if x != nil && x.Iconurl != nil {
		return *x.Iconurl
	}
	return ""
}

func (x *OperActivityLang) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *OperActivityLang) GetPicUrl() string {
	if x != nil && x.PicUrl != nil {
		return *x.PicUrl
	}
	return ""
}

func (x *OperActivityLang) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type OperActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iconurls  []*OperActivityUrl    `protobuf:"bytes,1,rep,name=iconurls" json:"iconurls,omitempty"`
	Urls      []*OperActivityUrl    `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
	Lang      []*OperActivityLang   `protobuf:"bytes,3,rep,name=lang" json:"lang,omitempty"`
	Monthcard *OperActMonthCardType `protobuf:"varint,4,opt,name=monthcard,enum=Cmd.OperActMonthCardType,def=0" json:"monthcard,omitempty"`
}

// Default values for OperActivityData fields.
const (
	Default_OperActivityData_Monthcard = OperActMonthCardType_OPERACTMONTHCARDTYPE_ALL
)

func (x *OperActivityData) Reset() {
	*x = OperActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperActivityData) ProtoMessage() {}

func (x *OperActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperActivityData.ProtoReflect.Descriptor instead.
func (*OperActivityData) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{13}
}

func (x *OperActivityData) GetIconurls() []*OperActivityUrl {
	if x != nil {
		return x.Iconurls
	}
	return nil
}

func (x *OperActivityData) GetUrls() []*OperActivityUrl {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *OperActivityData) GetLang() []*OperActivityLang {
	if x != nil {
		return x.Lang
	}
	return nil
}

func (x *OperActivityData) GetMonthcard() OperActMonthCardType {
	if x != nil && x.Monthcard != nil {
		return *x.Monthcard
	}
	return Default_OperActivityData_Monthcard
}

type OperSubActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Picurls   []*OperActivityUrl    `protobuf:"bytes,1,rep,name=picurls" json:"picurls,omitempty"`
	Urls      []*OperActivityUrl    `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
	Lang      []*OperActivityLang   `protobuf:"bytes,3,rep,name=lang" json:"lang,omitempty"`
	Monthcard *OperActMonthCardType `protobuf:"varint,4,opt,name=monthcard,enum=Cmd.OperActMonthCardType,def=0" json:"monthcard,omitempty"`
}

// Default values for OperSubActivityData fields.
const (
	Default_OperSubActivityData_Monthcard = OperActMonthCardType_OPERACTMONTHCARDTYPE_ALL
)

func (x *OperSubActivityData) Reset() {
	*x = OperSubActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperSubActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperSubActivityData) ProtoMessage() {}

func (x *OperSubActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperSubActivityData.ProtoReflect.Descriptor instead.
func (*OperSubActivityData) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{14}
}

func (x *OperSubActivityData) GetPicurls() []*OperActivityUrl {
	if x != nil {
		return x.Picurls
	}
	return nil
}

func (x *OperSubActivityData) GetUrls() []*OperActivityUrl {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *OperSubActivityData) GetLang() []*OperActivityLang {
	if x != nil {
		return x.Lang
	}
	return nil
}

func (x *OperSubActivityData) GetMonthcard() OperActMonthCardType {
	if x != nil && x.Monthcard != nil {
		return *x.Monthcard
	}
	return Default_OperSubActivityData_Monthcard
}

type OperSubActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *uint64              `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Name      *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Begintime *uint32              `protobuf:"varint,4,opt,name=begintime,def=0" json:"begintime,omitempty"`
	Endtime   *uint32              `protobuf:"varint,5,opt,name=endtime,def=0" json:"endtime,omitempty"`
	Pathid    *uint32              `protobuf:"varint,6,opt,name=pathid,def=0" json:"pathid,omitempty"`
	Pathtype  *uint32              `protobuf:"varint,7,opt,name=pathtype,def=0" json:"pathtype,omitempty"`
	Pathevent *string              `protobuf:"bytes,8,opt,name=pathevent" json:"pathevent,omitempty"`
	Url       *string              `protobuf:"bytes,9,opt,name=url" json:"url,omitempty"`
	PicUrl    *string              `protobuf:"bytes,10,opt,name=pic_url,json=picUrl" json:"pic_url,omitempty"`
	Groupid   *uint64              `protobuf:"varint,11,opt,name=groupid,def=0" json:"groupid,omitempty"`
	Data      *OperSubActivityData `protobuf:"bytes,12,opt,name=data" json:"data,omitempty"`
	Serverid  *string              `protobuf:"bytes,13,opt,name=serverid" json:"serverid,omitempty"`
}

// Default values for OperSubActivity fields.
const (
	Default_OperSubActivity_Id        = uint64(0)
	Default_OperSubActivity_Begintime = uint32(0)
	Default_OperSubActivity_Endtime   = uint32(0)
	Default_OperSubActivity_Pathid    = uint32(0)
	Default_OperSubActivity_Pathtype  = uint32(0)
	Default_OperSubActivity_Groupid   = uint64(0)
)

func (x *OperSubActivity) Reset() {
	*x = OperSubActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperSubActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperSubActivity) ProtoMessage() {}

func (x *OperSubActivity) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperSubActivity.ProtoReflect.Descriptor instead.
func (*OperSubActivity) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{15}
}

func (x *OperSubActivity) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_OperSubActivity_Id
}

func (x *OperSubActivity) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OperSubActivity) GetBegintime() uint32 {
	if x != nil && x.Begintime != nil {
		return *x.Begintime
	}
	return Default_OperSubActivity_Begintime
}

func (x *OperSubActivity) GetEndtime() uint32 {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return Default_OperSubActivity_Endtime
}

func (x *OperSubActivity) GetPathid() uint32 {
	if x != nil && x.Pathid != nil {
		return *x.Pathid
	}
	return Default_OperSubActivity_Pathid
}

func (x *OperSubActivity) GetPathtype() uint32 {
	if x != nil && x.Pathtype != nil {
		return *x.Pathtype
	}
	return Default_OperSubActivity_Pathtype
}

func (x *OperSubActivity) GetPathevent() string {
	if x != nil && x.Pathevent != nil {
		return *x.Pathevent
	}
	return ""
}

func (x *OperSubActivity) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *OperSubActivity) GetPicUrl() string {
	if x != nil && x.PicUrl != nil {
		return *x.PicUrl
	}
	return ""
}

func (x *OperSubActivity) GetGroupid() uint64 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return Default_OperSubActivity_Groupid
}

func (x *OperSubActivity) GetData() *OperSubActivityData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OperSubActivity) GetServerid() string {
	if x != nil && x.Serverid != nil {
		return *x.Serverid
	}
	return ""
}

type OperActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32            `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Name        *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Iconurl     *string            `protobuf:"bytes,3,opt,name=iconurl" json:"iconurl,omitempty"`
	Begintime   *uint32            `protobuf:"varint,4,opt,name=begintime,def=0" json:"begintime,omitempty"`
	Endtime     *uint32            `protobuf:"varint,5,opt,name=endtime,def=0" json:"endtime,omitempty"`
	Url         *string            `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	Countdown   *bool              `protobuf:"varint,7,opt,name=countdown,def=0" json:"countdown,omitempty"`
	SubActivity []*OperSubActivity `protobuf:"bytes,8,rep,name=sub_activity,json=subActivity" json:"sub_activity,omitempty"`
	Data        *OperActivityData  `protobuf:"bytes,9,opt,name=data" json:"data,omitempty"`
	Serverid    *string            `protobuf:"bytes,10,opt,name=serverid" json:"serverid,omitempty"`
}

// Default values for OperActivity fields.
const (
	Default_OperActivity_Id        = uint32(0)
	Default_OperActivity_Begintime = uint32(0)
	Default_OperActivity_Endtime   = uint32(0)
	Default_OperActivity_Countdown = bool(false)
)

func (x *OperActivity) Reset() {
	*x = OperActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperActivity) ProtoMessage() {}

func (x *OperActivity) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperActivity.ProtoReflect.Descriptor instead.
func (*OperActivity) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{16}
}

func (x *OperActivity) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_OperActivity_Id
}

func (x *OperActivity) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OperActivity) GetIconurl() string {
	if x != nil && x.Iconurl != nil {
		return *x.Iconurl
	}
	return ""
}

func (x *OperActivity) GetBegintime() uint32 {
	if x != nil && x.Begintime != nil {
		return *x.Begintime
	}
	return Default_OperActivity_Begintime
}

func (x *OperActivity) GetEndtime() uint32 {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return Default_OperActivity_Endtime
}

func (x *OperActivity) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *OperActivity) GetCountdown() bool {
	if x != nil && x.Countdown != nil {
		return *x.Countdown
	}
	return Default_OperActivity_Countdown
}

func (x *OperActivity) GetSubActivity() []*OperSubActivity {
	if x != nil {
		return x.SubActivity
	}
	return nil
}

func (x *OperActivity) GetData() *OperActivityData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OperActivity) GetServerid() string {
	if x != nil && x.Serverid != nil {
		return *x.Serverid
	}
	return ""
}

type OperActivityNtfSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param    *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=10" json:"param,omitempty"`
	Activity []*OperActivity `protobuf:"bytes,3,rep,name=activity" json:"activity,omitempty"`
}

// Default values for OperActivityNtfSocialCmd fields.
const (
	Default_OperActivityNtfSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_OperActivityNtfSocialCmd_Param = SocialityParam_SOCIALITYPARAM_OPER_ACTIVITY_NTF
)

func (x *OperActivityNtfSocialCmd) Reset() {
	*x = OperActivityNtfSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperActivityNtfSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperActivityNtfSocialCmd) ProtoMessage() {}

func (x *OperActivityNtfSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperActivityNtfSocialCmd.ProtoReflect.Descriptor instead.
func (*OperActivityNtfSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{17}
}

func (x *OperActivityNtfSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_OperActivityNtfSocialCmd_Cmd
}

func (x *OperActivityNtfSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_OperActivityNtfSocialCmd_Param
}

func (x *OperActivityNtfSocialCmd) GetActivity() []*OperActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type AddRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param    *SocialityParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=11" json:"param,omitempty"`
	Charid   []uint64         `protobuf:"varint,3,rep,name=charid" json:"charid,omitempty"`
	Relation *ESocialRelation `protobuf:"varint,4,opt,name=relation,enum=Cmd.ESocialRelation,def=1" json:"relation,omitempty"`
}

// Default values for AddRelation fields.
const (
	Default_AddRelation_Cmd      = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_AddRelation_Param    = SocialityParam_SOCIALITYPARAM_ADDRELATION
	Default_AddRelation_Relation = ESocialRelation_ESOCIALRELATION_MIN
)

func (x *AddRelation) Reset() {
	*x = AddRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRelation) ProtoMessage() {}

func (x *AddRelation) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRelation.ProtoReflect.Descriptor instead.
func (*AddRelation) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{18}
}

func (x *AddRelation) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AddRelation_Cmd
}

func (x *AddRelation) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AddRelation_Param
}

func (x *AddRelation) GetCharid() []uint64 {
	if x != nil {
		return x.Charid
	}
	return nil
}

func (x *AddRelation) GetRelation() ESocialRelation {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return Default_AddRelation_Relation
}

type RemoveRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param    *SocialityParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=12" json:"param,omitempty"`
	Charid   *uint64          `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Relation *ESocialRelation `protobuf:"varint,4,opt,name=relation,enum=Cmd.ESocialRelation,def=1" json:"relation,omitempty"`
}

// Default values for RemoveRelation fields.
const (
	Default_RemoveRelation_Cmd      = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_RemoveRelation_Param    = SocialityParam_SOCIALITYPARAM_REMOVERELATION
	Default_RemoveRelation_Charid   = uint64(0)
	Default_RemoveRelation_Relation = ESocialRelation_ESOCIALRELATION_MIN
)

func (x *RemoveRelation) Reset() {
	*x = RemoveRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRelation) ProtoMessage() {}

func (x *RemoveRelation) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRelation.ProtoReflect.Descriptor instead.
func (*RemoveRelation) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveRelation) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RemoveRelation_Cmd
}

func (x *RemoveRelation) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RemoveRelation_Param
}

func (x *RemoveRelation) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_RemoveRelation_Charid
}

func (x *RemoveRelation) GetRelation() ESocialRelation {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return Default_RemoveRelation_Relation
}

type Recall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid *uint64 `protobuf:"varint,1,opt,name=charid,def=0" json:"charid,omitempty"`
}

// Default values for Recall fields.
const (
	Default_Recall_Charid = uint64(0)
)

func (x *Recall) Reset() {
	*x = Recall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recall) ProtoMessage() {}

func (x *Recall) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recall.ProtoReflect.Descriptor instead.
func (*Recall) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{20}
}

func (x *Recall) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_Recall_Charid
}

type QueryRecallListSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=13" json:"param,omitempty"`
	Items []*Recall       `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

// Default values for QueryRecallListSocialCmd fields.
const (
	Default_QueryRecallListSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_QueryRecallListSocialCmd_Param = SocialityParam_SOCIALITYPARAM_QUERY_RECALL_LIST
)

func (x *QueryRecallListSocialCmd) Reset() {
	*x = QueryRecallListSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecallListSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecallListSocialCmd) ProtoMessage() {}

func (x *QueryRecallListSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecallListSocialCmd.ProtoReflect.Descriptor instead.
func (*QueryRecallListSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{21}
}

func (x *QueryRecallListSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryRecallListSocialCmd_Cmd
}

func (x *QueryRecallListSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryRecallListSocialCmd_Param
}

func (x *QueryRecallListSocialCmd) GetItems() []*Recall {
	if x != nil {
		return x.Items
	}
	return nil
}

type RecallFriendSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param  *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=14" json:"param,omitempty"`
	Charid *uint64         `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
}

// Default values for RecallFriendSocialCmd fields.
const (
	Default_RecallFriendSocialCmd_Cmd    = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_RecallFriendSocialCmd_Param  = SocialityParam_SOCIALITYPARAM_RECALL_FRIEND
	Default_RecallFriendSocialCmd_Charid = uint64(0)
)

func (x *RecallFriendSocialCmd) Reset() {
	*x = RecallFriendSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallFriendSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallFriendSocialCmd) ProtoMessage() {}

func (x *RecallFriendSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallFriendSocialCmd.ProtoReflect.Descriptor instead.
func (*RecallFriendSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{22}
}

func (x *RecallFriendSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RecallFriendSocialCmd_Cmd
}

func (x *RecallFriendSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RecallFriendSocialCmd_Param
}

func (x *RecallFriendSocialCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_RecallFriendSocialCmd_Charid
}

type AddRelationResultSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param    *SocialityParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=15" json:"param,omitempty"`
	Charid   *uint64          `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Relation *ESocialRelation `protobuf:"varint,4,opt,name=relation,enum=Cmd.ESocialRelation,def=1" json:"relation,omitempty"`
	Success  *bool            `protobuf:"varint,5,opt,name=success,def=0" json:"success,omitempty"`
}

// Default values for AddRelationResultSocialCmd fields.
const (
	Default_AddRelationResultSocialCmd_Cmd      = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_AddRelationResultSocialCmd_Param    = SocialityParam_SOCIALITYPARAM_ADD_RELATION_RESULT
	Default_AddRelationResultSocialCmd_Charid   = uint64(0)
	Default_AddRelationResultSocialCmd_Relation = ESocialRelation_ESOCIALRELATION_MIN
	Default_AddRelationResultSocialCmd_Success  = bool(false)
)

func (x *AddRelationResultSocialCmd) Reset() {
	*x = AddRelationResultSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRelationResultSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRelationResultSocialCmd) ProtoMessage() {}

func (x *AddRelationResultSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRelationResultSocialCmd.ProtoReflect.Descriptor instead.
func (*AddRelationResultSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{23}
}

func (x *AddRelationResultSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AddRelationResultSocialCmd_Cmd
}

func (x *AddRelationResultSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AddRelationResultSocialCmd_Param
}

func (x *AddRelationResultSocialCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_AddRelationResultSocialCmd_Charid
}

func (x *AddRelationResultSocialCmd) GetRelation() ESocialRelation {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return Default_AddRelationResultSocialCmd_Relation
}

func (x *AddRelationResultSocialCmd) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return Default_AddRelationResultSocialCmd_Success
}

type QueryChargeVirginCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=16" json:"param,omitempty"`
	Datas []uint64        `protobuf:"varint,3,rep,name=datas" json:"datas,omitempty"`
	Del   *uint64         `protobuf:"varint,4,opt,name=del,def=0" json:"del,omitempty"`
}

// Default values for QueryChargeVirginCmd fields.
const (
	Default_QueryChargeVirginCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_QueryChargeVirginCmd_Param = SocialityParam_SOCIALITYPARAM_QUERY_CHARGE_VIRGIN
	Default_QueryChargeVirginCmd_Del   = uint64(0)
)

func (x *QueryChargeVirginCmd) Reset() {
	*x = QueryChargeVirginCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChargeVirginCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChargeVirginCmd) ProtoMessage() {}

func (x *QueryChargeVirginCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChargeVirginCmd.ProtoReflect.Descriptor instead.
func (*QueryChargeVirginCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{24}
}

func (x *QueryChargeVirginCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryChargeVirginCmd_Cmd
}

func (x *QueryChargeVirginCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryChargeVirginCmd_Param
}

func (x *QueryChargeVirginCmd) GetDatas() []uint64 {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *QueryChargeVirginCmd) GetDel() uint64 {
	if x != nil && x.Del != nil {
		return *x.Del
	}
	return Default_QueryChargeVirginCmd_Del
}

type QueryUserInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param  *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=17" json:"param,omitempty"`
	Charid *uint64         `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Data   *SocialData     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

// Default values for QueryUserInfoCmd fields.
const (
	Default_QueryUserInfoCmd_Cmd    = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_QueryUserInfoCmd_Param  = SocialityParam_SOCIALITYPARAM_QUERY_USER_INFO
	Default_QueryUserInfoCmd_Charid = uint64(0)
)

func (x *QueryUserInfoCmd) Reset() {
	*x = QueryUserInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserInfoCmd) ProtoMessage() {}

func (x *QueryUserInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserInfoCmd.ProtoReflect.Descriptor instead.
func (*QueryUserInfoCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{25}
}

func (x *QueryUserInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryUserInfoCmd_Cmd
}

func (x *QueryUserInfoCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryUserInfoCmd_Param
}

func (x *QueryUserInfoCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_QueryUserInfoCmd_Charid
}

func (x *QueryUserInfoCmd) GetData() *SocialData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TutorFuncStateNtfSocialCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=56" json:"cmd,omitempty"`
	Param *SocialityParam `protobuf:"varint,2,opt,name=param,enum=Cmd.SocialityParam,def=18" json:"param,omitempty"`
	Open  *bool           `protobuf:"varint,3,opt,name=open,def=0" json:"open,omitempty"`
}

// Default values for TutorFuncStateNtfSocialCmd fields.
const (
	Default_TutorFuncStateNtfSocialCmd_Cmd   = Command_SESSION_USER_SOCIALITY_PROTOCMD
	Default_TutorFuncStateNtfSocialCmd_Param = SocialityParam_SOCIALITYPARAM_TUTOR_FUNC_STATE_NTF
	Default_TutorFuncStateNtfSocialCmd_Open  = bool(false)
)

func (x *TutorFuncStateNtfSocialCmd) Reset() {
	*x = TutorFuncStateNtfSocialCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SessionSociality_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorFuncStateNtfSocialCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorFuncStateNtfSocialCmd) ProtoMessage() {}

func (x *TutorFuncStateNtfSocialCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SessionSociality_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorFuncStateNtfSocialCmd.ProtoReflect.Descriptor instead.
func (*TutorFuncStateNtfSocialCmd) Descriptor() ([]byte, []int) {
	return file_SessionSociality_proto_rawDescGZIP(), []int{26}
}

func (x *TutorFuncStateNtfSocialCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TutorFuncStateNtfSocialCmd_Cmd
}

func (x *TutorFuncStateNtfSocialCmd) GetParam() SocialityParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TutorFuncStateNtfSocialCmd_Param
}

func (x *TutorFuncStateNtfSocialCmd) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return Default_TutorFuncStateNtfSocialCmd_Open
}

var File_SessionSociality_proto protoreflect.FileDescriptor

var file_SessionSociality_proto_rawDesc = []byte{
	0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78,
	0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x08, 0x0a,
	0x0a, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x61, 0x63, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x61, 0x63, 0x63, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x09, 0x68, 0x61, 0x69, 0x72, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x68,
	0x61, 0x69, 0x72, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x15, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a,
	0x05, 0x6d, 0x6f, 0x75, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x6d, 0x6f, 0x75, 0x74, 0x68, 0x12, 0x13, 0x0a, 0x03, 0x65, 0x79, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x79, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0b, 0x61, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x6c, 0x76, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b,
	0x61, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x6c, 0x76, 0x12, 0x25, 0x0a, 0x0c, 0x61,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x65, 0x78, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x65,
	0x78, 0x70, 0x12, 0x23, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0x45, 0x50,
	0x52, 0x4f, 0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x3a, 0x0b, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x05,
	0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x06, 0x72, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x72,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x21, 0x0a,
	0x08, 0x77, 0x61, 0x69, 0x74, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x73, 0x69, 0x67, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0e, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x0d, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x6c, 0x76, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x70, 0x61, 0x73, 0x73, 0x4c, 0x76, 0x12, 0x28, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x70, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x70, 0x61, 0x73, 0x73, 0x45, 0x78, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x66, 0x6b, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61,
	0x66, 0x6b, 0x22, 0xd2, 0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xd0, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x49, 0x4e, 0x44, 0x55, 0x53,
	0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x15, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x29,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x74, 0x0a,
	0x0e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x3a,
	0x0f, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49, 0x4e,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x15, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x1a, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x22, 0xc6, 0x01,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x5f,
	0x47, 0x49, 0x46, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x22, 0x88, 0x02, 0x0a, 0x14,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x74, 0x66, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x4e, 0x54, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x8a, 0x01,
	0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x61,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x10, 0x4f,
	0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c,
	0x73, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x18, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x43, 0x54, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x43, 0x41, 0x52, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x09,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x13, 0x4f, 0x70,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x07, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c,
	0x73, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x18, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x43, 0x54, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x43, 0x41, 0x52, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x09,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x70, 0x61, 0x74, 0x68, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x08, 0x70, 0x61, 0x74, 0x68, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x74, 0x68, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x74, 0x68, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x22, 0xc4, 0x02, 0x0a,
	0x0c, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4e, 0x74, 0x66, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x4b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x20, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x4e, 0x54, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2d,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xf4, 0x01,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x1a, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x45, 0x0a,
	0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x13, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x4d,
	0x4f, 0x56, 0x45, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x45, 0x0a,
	0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x13, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x19,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x18, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x20, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d,
	0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54,
	0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x52,
	0x49, 0x45, 0x4e, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64,
	0x12, 0x45, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x13, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x56, 0x69, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x6d,
	0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54,
	0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x5f, 0x56, 0x49, 0x52, 0x47, 0x49, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x13, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x64, 0x65, 0x6c, 0x22, 0xde, 0x01, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d,
	0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1e, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54,
	0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x01,
	0x0a, 0x1a, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4e, 0x74, 0x66, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4e, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x23, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x2a, 0xfa, 0x04, 0x0a, 0x0e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x49, 0x4e, 0x44,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x41, 0x54, 0x41, 0x10, 0x04,
	0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x05,
	0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54,
	0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x41, 0x4b, 0x45, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49,
	0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x09, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x0a, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0b, 0x12, 0x21, 0x0a,
	0x1d, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0c,
	0x12, 0x24, 0x0a, 0x20, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x0d, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x0e, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x0f,
	0x12, 0x26, 0x0a, 0x22, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f,
	0x56, 0x49, 0x52, 0x47, 0x49, 0x4e, 0x10, 0x10, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x11, 0x12, 0x27, 0x0a, 0x23,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54,
	0x55, 0x54, 0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x54, 0x46, 0x10, 0x12, 0x2a, 0xb7, 0x04, 0x0a, 0x0f, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4d, 0x45, 0x52, 0x52, 0x59, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41,
	0x54, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x10, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x20, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x10, 0x40, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x46, 0x4f, 0x52,
	0x45, 0x56, 0x45, 0x52, 0x10, 0x80, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52,
	0x10, 0x80, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x10, 0x80, 0x04, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54,
	0x10, 0x80, 0x08, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41,
	0x50, 0x50, 0x4c, 0x59, 0x10, 0x80, 0x10, 0x12, 0x23, 0x0a, 0x1e, 0x45, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x80, 0x20, 0x12, 0x21, 0x0a, 0x1c,
	0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x55, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x80, 0x40, 0x12,
	0x25, 0x0a, 0x1f, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x4d, 0x41,
	0x54, 0x45, 0x10, 0x80, 0x80, 0x01, 0x12, 0x1c, 0x0a, 0x16, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c,
	0x10, 0x80, 0x80, 0x02, 0x12, 0x1e, 0x0a, 0x18, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x45, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c,
	0x10, 0x80, 0x80, 0x04, 0x12, 0x19, 0x0a, 0x13, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x81, 0x80, 0x04, 0x2a,
	0x92, 0x07, 0x0a, 0x0b, 0x45, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49,
	0x4e, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x52, 0x41, 0x49, 0x54, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x07, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48,
	0x41, 0x49, 0x52, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x41, 0x49, 0x52, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x09,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x42, 0x4f, 0x44, 0x59, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x4c,
	0x56, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x45, 0x58, 0x50, 0x10,
	0x0c, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x41, 0x50, 0x50, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0d, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x47, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x10, 0x0e, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x0f, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x52, 0x41, 0x49, 0x54, 0x10, 0x10,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x5a, 0x4f, 0x4e, 0x45, 0x49, 0x44, 0x10, 0x13, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x14, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x15, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x10, 0x17, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x4f, 0x55,
	0x54, 0x48, 0x10, 0x18, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x43,
	0x10, 0x19, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x45, 0x59, 0x45, 0x10, 0x1a, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x1b, 0x12,
	0x19, 0x0a, 0x15, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43,
	0x41, 0x4e, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x1c, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0x1d, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x1e, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x49, 0x44, 0x10, 0x1f, 0x12, 0x1e, 0x0a, 0x1a, 0x45,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x52,
	0x41, 0x49, 0x54, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x20, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x56, 0x10, 0x21, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x50, 0x41, 0x53, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x10, 0x22, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x46, 0x4b, 0x10, 0x23, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d,
	0x41, 0x58, 0x10, 0x24, 0x2a, 0x99, 0x02, 0x0a, 0x0c, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41,
	0x75, 0x74, 0x75, 0x6d, 0x6e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x57, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x58,
	0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x52, 0x65, 0x64, 0x42, 0x61, 0x67, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x10, 0x08, 0x12,
	0x1b, 0x0a, 0x17, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e,
	0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x57, 0x65, 0x69,
	0x4a, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x0a,
	0x2a, 0x74, 0x0a, 0x0d, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x54, 0x6f, 0x6b, 0x65, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x43, 0x61, 0x6e, 0x54, 0x61, 0x6b, 0x65, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x10, 0x04, 0x2a, 0x71, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x43, 0x54, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x43, 0x41,
	0x52, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x43, 0x54, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x43, 0x41, 0x52, 0x44,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x43, 0x54, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x43, 0x41, 0x52, 0x44, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02,
}

var (
	file_SessionSociality_proto_rawDescOnce sync.Once
	file_SessionSociality_proto_rawDescData = file_SessionSociality_proto_rawDesc
)

func file_SessionSociality_proto_rawDescGZIP() []byte {
	file_SessionSociality_proto_rawDescOnce.Do(func() {
		file_SessionSociality_proto_rawDescData = protoimpl.X.CompressGZIP(file_SessionSociality_proto_rawDescData)
	})
	return file_SessionSociality_proto_rawDescData
}

var file_SessionSociality_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_SessionSociality_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_SessionSociality_proto_goTypes = []interface{}{
	(SocialityParam)(0),                // 0: Cmd.SocialityParam
	(ESocialRelation)(0),               // 1: Cmd.ESocialRelation
	(ESocialData)(0),                   // 2: Cmd.ESocialData
	(EOperateType)(0),                  // 3: Cmd.EOperateType
	(EOperateState)(0),                 // 4: Cmd.EOperateState
	(OperActMonthCardType)(0),          // 5: Cmd.OperActMonthCardType
	(*SocialData)(nil),                 // 6: Cmd.SocialData
	(*QuerySocialData)(nil),            // 7: Cmd.QuerySocialData
	(*FindUser)(nil),                   // 8: Cmd.FindUser
	(*SocialUpdate)(nil),               // 9: Cmd.SocialUpdate
	(*SocialDataItem)(nil),             // 10: Cmd.SocialDataItem
	(*SocialDataUpdate)(nil),           // 11: Cmd.SocialDataUpdate
	(*FrameStatusSocialCmd)(nil),       // 12: Cmd.FrameStatusSocialCmd
	(*UseGiftCodeSocialCmd)(nil),       // 13: Cmd.UseGiftCodeSocialCmd
	(*OperateQuerySocialCmd)(nil),      // 14: Cmd.OperateQuerySocialCmd
	(*OperateTakeSocialCmd)(nil),       // 15: Cmd.OperateTakeSocialCmd
	(*QueryDataNtfSocialCmd)(nil),      // 16: Cmd.QueryDataNtfSocialCmd
	(*OperActivityUrl)(nil),            // 17: Cmd.OperActivityUrl
	(*OperActivityLang)(nil),           // 18: Cmd.OperActivityLang
	(*OperActivityData)(nil),           // 19: Cmd.OperActivityData
	(*OperSubActivityData)(nil),        // 20: Cmd.OperSubActivityData
	(*OperSubActivity)(nil),            // 21: Cmd.OperSubActivity
	(*OperActivity)(nil),               // 22: Cmd.OperActivity
	(*OperActivityNtfSocialCmd)(nil),   // 23: Cmd.OperActivityNtfSocialCmd
	(*AddRelation)(nil),                // 24: Cmd.AddRelation
	(*RemoveRelation)(nil),             // 25: Cmd.RemoveRelation
	(*Recall)(nil),                     // 26: Cmd.Recall
	(*QueryRecallListSocialCmd)(nil),   // 27: Cmd.QueryRecallListSocialCmd
	(*RecallFriendSocialCmd)(nil),      // 28: Cmd.RecallFriendSocialCmd
	(*AddRelationResultSocialCmd)(nil), // 29: Cmd.AddRelationResultSocialCmd
	(*QueryChargeVirginCmd)(nil),       // 30: Cmd.QueryChargeVirginCmd
	(*QueryUserInfoCmd)(nil),           // 31: Cmd.QueryUserInfoCmd
	(*TutorFuncStateNtfSocialCmd)(nil), // 32: Cmd.TutorFuncStateNtfSocialCmd
	(EProfession)(0),                   // 33: Cmd.EProfession
	(EGender)(0),                       // 34: Cmd.EGender
	(Command)(0),                       // 35: Cmd.Command
}
var file_SessionSociality_proto_depIdxs = []int32{
	33, // 0: Cmd.SocialData.profession:type_name -> Cmd.EProfession
	34, // 1: Cmd.SocialData.gender:type_name -> Cmd.EGender
	35, // 2: Cmd.QuerySocialData.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.QuerySocialData.param:type_name -> Cmd.SocialityParam
	6,  // 4: Cmd.QuerySocialData.datas:type_name -> Cmd.SocialData
	35, // 5: Cmd.FindUser.cmd:type_name -> Cmd.Command
	0,  // 6: Cmd.FindUser.param:type_name -> Cmd.SocialityParam
	6,  // 7: Cmd.FindUser.datas:type_name -> Cmd.SocialData
	35, // 8: Cmd.SocialUpdate.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.SocialUpdate.param:type_name -> Cmd.SocialityParam
	6,  // 10: Cmd.SocialUpdate.updates:type_name -> Cmd.SocialData
	2,  // 11: Cmd.SocialDataItem.type:type_name -> Cmd.ESocialData
	35, // 12: Cmd.SocialDataUpdate.cmd:type_name -> Cmd.Command
	0,  // 13: Cmd.SocialDataUpdate.param:type_name -> Cmd.SocialityParam
	10, // 14: Cmd.SocialDataUpdate.items:type_name -> Cmd.SocialDataItem
	35, // 15: Cmd.FrameStatusSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 16: Cmd.FrameStatusSocialCmd.param:type_name -> Cmd.SocialityParam
	35, // 17: Cmd.UseGiftCodeSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 18: Cmd.UseGiftCodeSocialCmd.param:type_name -> Cmd.SocialityParam
	35, // 19: Cmd.OperateQuerySocialCmd.cmd:type_name -> Cmd.Command
	0,  // 20: Cmd.OperateQuerySocialCmd.param:type_name -> Cmd.SocialityParam
	3,  // 21: Cmd.OperateQuerySocialCmd.type:type_name -> Cmd.EOperateType
	4,  // 22: Cmd.OperateQuerySocialCmd.state:type_name -> Cmd.EOperateState
	35, // 23: Cmd.OperateTakeSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.OperateTakeSocialCmd.param:type_name -> Cmd.SocialityParam
	3,  // 25: Cmd.OperateTakeSocialCmd.type:type_name -> Cmd.EOperateType
	4,  // 26: Cmd.OperateTakeSocialCmd.state:type_name -> Cmd.EOperateState
	35, // 27: Cmd.QueryDataNtfSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 28: Cmd.QueryDataNtfSocialCmd.param:type_name -> Cmd.SocialityParam
	6,  // 29: Cmd.QueryDataNtfSocialCmd.relations:type_name -> Cmd.SocialData
	17, // 30: Cmd.OperActivityData.iconurls:type_name -> Cmd.OperActivityUrl
	17, // 31: Cmd.OperActivityData.urls:type_name -> Cmd.OperActivityUrl
	18, // 32: Cmd.OperActivityData.lang:type_name -> Cmd.OperActivityLang
	5,  // 33: Cmd.OperActivityData.monthcard:type_name -> Cmd.OperActMonthCardType
	17, // 34: Cmd.OperSubActivityData.picurls:type_name -> Cmd.OperActivityUrl
	17, // 35: Cmd.OperSubActivityData.urls:type_name -> Cmd.OperActivityUrl
	18, // 36: Cmd.OperSubActivityData.lang:type_name -> Cmd.OperActivityLang
	5,  // 37: Cmd.OperSubActivityData.monthcard:type_name -> Cmd.OperActMonthCardType
	20, // 38: Cmd.OperSubActivity.data:type_name -> Cmd.OperSubActivityData
	21, // 39: Cmd.OperActivity.sub_activity:type_name -> Cmd.OperSubActivity
	19, // 40: Cmd.OperActivity.data:type_name -> Cmd.OperActivityData
	35, // 41: Cmd.OperActivityNtfSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 42: Cmd.OperActivityNtfSocialCmd.param:type_name -> Cmd.SocialityParam
	22, // 43: Cmd.OperActivityNtfSocialCmd.activity:type_name -> Cmd.OperActivity
	35, // 44: Cmd.AddRelation.cmd:type_name -> Cmd.Command
	0,  // 45: Cmd.AddRelation.param:type_name -> Cmd.SocialityParam
	1,  // 46: Cmd.AddRelation.relation:type_name -> Cmd.ESocialRelation
	35, // 47: Cmd.RemoveRelation.cmd:type_name -> Cmd.Command
	0,  // 48: Cmd.RemoveRelation.param:type_name -> Cmd.SocialityParam
	1,  // 49: Cmd.RemoveRelation.relation:type_name -> Cmd.ESocialRelation
	35, // 50: Cmd.QueryRecallListSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 51: Cmd.QueryRecallListSocialCmd.param:type_name -> Cmd.SocialityParam
	26, // 52: Cmd.QueryRecallListSocialCmd.items:type_name -> Cmd.Recall
	35, // 53: Cmd.RecallFriendSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 54: Cmd.RecallFriendSocialCmd.param:type_name -> Cmd.SocialityParam
	35, // 55: Cmd.AddRelationResultSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 56: Cmd.AddRelationResultSocialCmd.param:type_name -> Cmd.SocialityParam
	1,  // 57: Cmd.AddRelationResultSocialCmd.relation:type_name -> Cmd.ESocialRelation
	35, // 58: Cmd.QueryChargeVirginCmd.cmd:type_name -> Cmd.Command
	0,  // 59: Cmd.QueryChargeVirginCmd.param:type_name -> Cmd.SocialityParam
	35, // 60: Cmd.QueryUserInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 61: Cmd.QueryUserInfoCmd.param:type_name -> Cmd.SocialityParam
	6,  // 62: Cmd.QueryUserInfoCmd.data:type_name -> Cmd.SocialData
	35, // 63: Cmd.TutorFuncStateNtfSocialCmd.cmd:type_name -> Cmd.Command
	0,  // 64: Cmd.TutorFuncStateNtfSocialCmd.param:type_name -> Cmd.SocialityParam
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_SessionSociality_proto_init() }
func file_SessionSociality_proto_init() {
	if File_SessionSociality_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SessionSociality_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySocialData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameStatusSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseGiftCodeSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateQuerySocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateTakeSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataNtfSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperActivityUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperActivityLang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperSubActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperSubActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperActivityNtfSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecallListSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecallFriendSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRelationResultSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryChargeVirginCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SessionSociality_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorFuncStateNtfSocialCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SessionSociality_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SessionSociality_proto_goTypes,
		DependencyIndexes: file_SessionSociality_proto_depIdxs,
		EnumInfos:         file_SessionSociality_proto_enumTypes,
		MessageInfos:      file_SessionSociality_proto_msgTypes,
	}.Build()
	File_SessionSociality_proto = out.File
	file_SessionSociality_proto_rawDesc = nil
	file_SessionSociality_proto_goTypes = nil
	file_SessionSociality_proto_depIdxs = nil
}
