// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: SceneBeing.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BeingParam int32

const (
	BeingParam_BEINGPARAM_SKILL_QUERY              BeingParam = 1
	BeingParam_BEINGPARAM_SKILL_UPDATE             BeingParam = 2
	BeingParam_BEINGPARAM_SKILL_LEVELUP            BeingParam = 3
	BeingParam_BEINGPARAM_BEING_INFO_QUERY         BeingParam = 4
	BeingParam_BEINGPARAM_BEING_INFO_UPDATE        BeingParam = 5
	BeingParam_BEINGPARAM_BEING_OFF                BeingParam = 6
	BeingParam_BEINGPARAM_BEING_SWITCH_STATE       BeingParam = 7
	BeingParam_BEINGPARAM_BEING_CHANGE_BODY        BeingParam = 8
	BeingParam_BEINGPARAM_BEING_QUERY_DATA_PARTIAL BeingParam = 9
)

// Enum value maps for BeingParam.
var (
	BeingParam_name = map[int32]string{
		1: "BEINGPARAM_SKILL_QUERY",
		2: "BEINGPARAM_SKILL_UPDATE",
		3: "BEINGPARAM_SKILL_LEVELUP",
		4: "BEINGPARAM_BEING_INFO_QUERY",
		5: "BEINGPARAM_BEING_INFO_UPDATE",
		6: "BEINGPARAM_BEING_OFF",
		7: "BEINGPARAM_BEING_SWITCH_STATE",
		8: "BEINGPARAM_BEING_CHANGE_BODY",
		9: "BEINGPARAM_BEING_QUERY_DATA_PARTIAL",
	}
	BeingParam_value = map[string]int32{
		"BEINGPARAM_SKILL_QUERY":              1,
		"BEINGPARAM_SKILL_UPDATE":             2,
		"BEINGPARAM_SKILL_LEVELUP":            3,
		"BEINGPARAM_BEING_INFO_QUERY":         4,
		"BEINGPARAM_BEING_INFO_UPDATE":        5,
		"BEINGPARAM_BEING_OFF":                6,
		"BEINGPARAM_BEING_SWITCH_STATE":       7,
		"BEINGPARAM_BEING_CHANGE_BODY":        8,
		"BEINGPARAM_BEING_QUERY_DATA_PARTIAL": 9,
	}
)

func (x BeingParam) Enum() *BeingParam {
	p := new(BeingParam)
	*p = x
	return p
}

func (x BeingParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeingParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneBeing_proto_enumTypes[0].Descriptor()
}

func (BeingParam) Type() protoreflect.EnumType {
	return &file_SceneBeing_proto_enumTypes[0]
}

func (x BeingParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BeingParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BeingParam(num)
	return nil
}

// Deprecated: Use BeingParam.Descriptor instead.
func (BeingParam) EnumDescriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{0}
}

type EBeingDataType int32

const (
	EBeingDataType_EBEINGDATA_MIN      EBeingDataType = 0
	EBeingDataType_EBEINGDATA_LV       EBeingDataType = 1
	EBeingDataType_EBEINGDATA_EXP      EBeingDataType = 2
	EBeingDataType_EBEINGDATA_BATTLE   EBeingDataType = 3
	EBeingDataType_EBEINGDATA_GUID     EBeingDataType = 4
	EBeingDataType_EBEINGDATA_LIVE     EBeingDataType = 5
	EBeingDataType_EBEINGDATA_SUMMON   EBeingDataType = 6
	EBeingDataType_EBEINGDATA_BODY     EBeingDataType = 7
	EBeingDataType_EBEINGDATA_BODYLIST EBeingDataType = 8
	EBeingDataType_EBEINGDATA_MAX      EBeingDataType = 9
)

// Enum value maps for EBeingDataType.
var (
	EBeingDataType_name = map[int32]string{
		0: "EBEINGDATA_MIN",
		1: "EBEINGDATA_LV",
		2: "EBEINGDATA_EXP",
		3: "EBEINGDATA_BATTLE",
		4: "EBEINGDATA_GUID",
		5: "EBEINGDATA_LIVE",
		6: "EBEINGDATA_SUMMON",
		7: "EBEINGDATA_BODY",
		8: "EBEINGDATA_BODYLIST",
		9: "EBEINGDATA_MAX",
	}
	EBeingDataType_value = map[string]int32{
		"EBEINGDATA_MIN":      0,
		"EBEINGDATA_LV":       1,
		"EBEINGDATA_EXP":      2,
		"EBEINGDATA_BATTLE":   3,
		"EBEINGDATA_GUID":     4,
		"EBEINGDATA_LIVE":     5,
		"EBEINGDATA_SUMMON":   6,
		"EBEINGDATA_BODY":     7,
		"EBEINGDATA_BODYLIST": 8,
		"EBEINGDATA_MAX":      9,
	}
)

func (x EBeingDataType) Enum() *EBeingDataType {
	p := new(EBeingDataType)
	*p = x
	return p
}

func (x EBeingDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBeingDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneBeing_proto_enumTypes[1].Descriptor()
}

func (EBeingDataType) Type() protoreflect.EnumType {
	return &file_SceneBeing_proto_enumTypes[1]
}

func (x EBeingDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBeingDataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBeingDataType(num)
	return nil
}

// Deprecated: Use EBeingDataType.Descriptor instead.
func (EBeingDataType) EnumDescriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{1}
}

type UserBeingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        *uint32      `protobuf:"varint,13,opt,name=version,def=0" json:"version,omitempty"`
	Id             *uint32      `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Lv             *uint32      `protobuf:"varint,2,opt,name=lv,def=0" json:"lv,omitempty"`
	Hp             *uint32      `protobuf:"varint,3,opt,name=hp,def=0" json:"hp,omitempty"`
	Live           *bool        `protobuf:"varint,4,opt,name=live,def=0" json:"live,omitempty"`
	Exp            *uint64      `protobuf:"varint,5,opt,name=exp,def=0" json:"exp,omitempty"`
	Usedskillpoint *uint32      `protobuf:"varint,6,opt,name=usedskillpoint,def=0" json:"usedskillpoint,omitempty"`
	Battle         *bool        `protobuf:"varint,7,opt,name=battle,def=0" json:"battle,omitempty"`
	Buff           []byte       `protobuf:"bytes,8,opt,name=buff" json:"buff,omitempty"`
	Skills         []*SkillItem `protobuf:"bytes,9,rep,name=skills" json:"skills,omitempty"`
	Buffids        []uint32     `protobuf:"varint,10,rep,name=buffids" json:"buffids,omitempty"`
	Body           *uint32      `protobuf:"varint,11,opt,name=body,def=0" json:"body,omitempty"`
	Bodylist       []uint32     `protobuf:"varint,12,rep,name=bodylist" json:"bodylist,omitempty"`
	Inscene        *bool        `protobuf:"varint,14,opt,name=inscene,def=0" json:"inscene,omitempty"`
	Beaten         *bool        `protobuf:"varint,15,opt,name=beaten,def=0" json:"beaten,omitempty"`
	Smtime         *uint32      `protobuf:"varint,16,opt,name=smtime,def=0" json:"smtime,omitempty"`
	Hppercent      *uint32      `protobuf:"varint,17,opt,name=hppercent,def=0" json:"hppercent,omitempty"`
	Eatskills      []uint32     `protobuf:"varint,18,rep,name=eatskills" json:"eatskills,omitempty"`
}

// Default values for UserBeingData fields.
const (
	Default_UserBeingData_Version        = uint32(0)
	Default_UserBeingData_Id             = uint32(0)
	Default_UserBeingData_Lv             = uint32(0)
	Default_UserBeingData_Hp             = uint32(0)
	Default_UserBeingData_Live           = bool(false)
	Default_UserBeingData_Exp            = uint64(0)
	Default_UserBeingData_Usedskillpoint = uint32(0)
	Default_UserBeingData_Battle         = bool(false)
	Default_UserBeingData_Body           = uint32(0)
	Default_UserBeingData_Inscene        = bool(false)
	Default_UserBeingData_Beaten         = bool(false)
	Default_UserBeingData_Smtime         = uint32(0)
	Default_UserBeingData_Hppercent      = uint32(0)
)

func (x *UserBeingData) Reset() {
	*x = UserBeingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBeingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBeingData) ProtoMessage() {}

func (x *UserBeingData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBeingData.ProtoReflect.Descriptor instead.
func (*UserBeingData) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{0}
}

func (x *UserBeingData) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_UserBeingData_Version
}

func (x *UserBeingData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_UserBeingData_Id
}

func (x *UserBeingData) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_UserBeingData_Lv
}

func (x *UserBeingData) GetHp() uint32 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return Default_UserBeingData_Hp
}

func (x *UserBeingData) GetLive() bool {
	if x != nil && x.Live != nil {
		return *x.Live
	}
	return Default_UserBeingData_Live
}

func (x *UserBeingData) GetExp() uint64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return Default_UserBeingData_Exp
}

func (x *UserBeingData) GetUsedskillpoint() uint32 {
	if x != nil && x.Usedskillpoint != nil {
		return *x.Usedskillpoint
	}
	return Default_UserBeingData_Usedskillpoint
}

func (x *UserBeingData) GetBattle() bool {
	if x != nil && x.Battle != nil {
		return *x.Battle
	}
	return Default_UserBeingData_Battle
}

func (x *UserBeingData) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

func (x *UserBeingData) GetSkills() []*SkillItem {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *UserBeingData) GetBuffids() []uint32 {
	if x != nil {
		return x.Buffids
	}
	return nil
}

func (x *UserBeingData) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return Default_UserBeingData_Body
}

func (x *UserBeingData) GetBodylist() []uint32 {
	if x != nil {
		return x.Bodylist
	}
	return nil
}

func (x *UserBeingData) GetInscene() bool {
	if x != nil && x.Inscene != nil {
		return *x.Inscene
	}
	return Default_UserBeingData_Inscene
}

func (x *UserBeingData) GetBeaten() bool {
	if x != nil && x.Beaten != nil {
		return *x.Beaten
	}
	return Default_UserBeingData_Beaten
}

func (x *UserBeingData) GetSmtime() uint32 {
	if x != nil && x.Smtime != nil {
		return *x.Smtime
	}
	return Default_UserBeingData_Smtime
}

func (x *UserBeingData) GetHppercent() uint32 {
	if x != nil && x.Hppercent != nil {
		return *x.Hppercent
	}
	return Default_UserBeingData_Hppercent
}

func (x *UserBeingData) GetEatskills() []uint32 {
	if x != nil {
		return x.Eatskills
	}
	return nil
}

type BeingSkillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *uint32          `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Leftpoint *uint32          `protobuf:"varint,2,opt,name=leftpoint,def=0" json:"leftpoint,omitempty"`
	Usedpoint *uint32          `protobuf:"varint,3,opt,name=usedpoint,def=0" json:"usedpoint,omitempty"`
	Items     []*SkillItem     `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
	Specinfo  []*SpecSkillInfo `protobuf:"bytes,5,rep,name=specinfo" json:"specinfo,omitempty"`
}

// Default values for BeingSkillData fields.
const (
	Default_BeingSkillData_Id        = uint32(0)
	Default_BeingSkillData_Leftpoint = uint32(0)
	Default_BeingSkillData_Usedpoint = uint32(0)
)

func (x *BeingSkillData) Reset() {
	*x = BeingSkillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSkillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSkillData) ProtoMessage() {}

func (x *BeingSkillData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSkillData.ProtoReflect.Descriptor instead.
func (*BeingSkillData) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{1}
}

func (x *BeingSkillData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_BeingSkillData_Id
}

func (x *BeingSkillData) GetLeftpoint() uint32 {
	if x != nil && x.Leftpoint != nil {
		return *x.Leftpoint
	}
	return Default_BeingSkillData_Leftpoint
}

func (x *BeingSkillData) GetUsedpoint() uint32 {
	if x != nil && x.Usedpoint != nil {
		return *x.Usedpoint
	}
	return Default_BeingSkillData_Usedpoint
}

func (x *BeingSkillData) GetItems() []*SkillItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BeingSkillData) GetSpecinfo() []*SpecSkillInfo {
	if x != nil {
		return x.Specinfo
	}
	return nil
}

type BeingSkillQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param *BeingParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=1" json:"param,omitempty"`
	Data  []*BeingSkillData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

// Default values for BeingSkillQuery fields.
const (
	Default_BeingSkillQuery_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingSkillQuery_Param = BeingParam_BEINGPARAM_SKILL_QUERY
)

func (x *BeingSkillQuery) Reset() {
	*x = BeingSkillQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSkillQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSkillQuery) ProtoMessage() {}

func (x *BeingSkillQuery) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSkillQuery.ProtoReflect.Descriptor instead.
func (*BeingSkillQuery) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{2}
}

func (x *BeingSkillQuery) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingSkillQuery_Cmd
}

func (x *BeingSkillQuery) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingSkillQuery_Param
}

func (x *BeingSkillQuery) GetData() []*BeingSkillData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BeingSkillUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param  *BeingParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=2" json:"param,omitempty"`
	Update []*BeingSkillData `protobuf:"bytes,3,rep,name=update" json:"update,omitempty"`
	Del    []*BeingSkillData `protobuf:"bytes,4,rep,name=del" json:"del,omitempty"`
}

// Default values for BeingSkillUpdate fields.
const (
	Default_BeingSkillUpdate_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingSkillUpdate_Param = BeingParam_BEINGPARAM_SKILL_UPDATE
)

func (x *BeingSkillUpdate) Reset() {
	*x = BeingSkillUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSkillUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSkillUpdate) ProtoMessage() {}

func (x *BeingSkillUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSkillUpdate.ProtoReflect.Descriptor instead.
func (*BeingSkillUpdate) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{3}
}

func (x *BeingSkillUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingSkillUpdate_Cmd
}

func (x *BeingSkillUpdate) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingSkillUpdate_Param
}

func (x *BeingSkillUpdate) GetUpdate() []*BeingSkillData {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *BeingSkillUpdate) GetDel() []*BeingSkillData {
	if x != nil {
		return x.Del
	}
	return nil
}

type BeingSkillLevelUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param    *BeingParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=3" json:"param,omitempty"`
	Beingid  *uint32     `protobuf:"varint,3,opt,name=beingid,def=0" json:"beingid,omitempty"`
	Skillids []uint32    `protobuf:"varint,4,rep,name=skillids" json:"skillids,omitempty"`
}

// Default values for BeingSkillLevelUp fields.
const (
	Default_BeingSkillLevelUp_Cmd     = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingSkillLevelUp_Param   = BeingParam_BEINGPARAM_SKILL_LEVELUP
	Default_BeingSkillLevelUp_Beingid = uint32(0)
)

func (x *BeingSkillLevelUp) Reset() {
	*x = BeingSkillLevelUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSkillLevelUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSkillLevelUp) ProtoMessage() {}

func (x *BeingSkillLevelUp) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSkillLevelUp.ProtoReflect.Descriptor instead.
func (*BeingSkillLevelUp) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{4}
}

func (x *BeingSkillLevelUp) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingSkillLevelUp_Cmd
}

func (x *BeingSkillLevelUp) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingSkillLevelUp_Param
}

func (x *BeingSkillLevelUp) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return Default_BeingSkillLevelUp_Beingid
}

func (x *BeingSkillLevelUp) GetSkillids() []uint32 {
	if x != nil {
		return x.Skillids
	}
	return nil
}

type BeingMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype  *EBeingDataType `protobuf:"varint,1,opt,name=etype,enum=Cmd.EBeingDataType,def=0" json:"etype,omitempty"`
	Value  *uint64         `protobuf:"varint,2,opt,name=value,def=0" json:"value,omitempty"`
	Values []uint32        `protobuf:"varint,3,rep,name=values" json:"values,omitempty"`
	Data   *string         `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

// Default values for BeingMemberData fields.
const (
	Default_BeingMemberData_Etype = EBeingDataType_EBEINGDATA_MIN
	Default_BeingMemberData_Value = uint64(0)
)

func (x *BeingMemberData) Reset() {
	*x = BeingMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingMemberData) ProtoMessage() {}

func (x *BeingMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingMemberData.ProtoReflect.Descriptor instead.
func (*BeingMemberData) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{5}
}

func (x *BeingMemberData) GetEtype() EBeingDataType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_BeingMemberData_Etype
}

func (x *BeingMemberData) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_BeingMemberData_Value
}

func (x *BeingMemberData) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *BeingMemberData) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type BeingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid     *uint64  `protobuf:"varint,1,opt,name=guid,def=0" json:"guid,omitempty"`
	Beingid  *uint32  `protobuf:"varint,2,opt,name=beingid,def=0" json:"beingid,omitempty"`
	Exp      *uint64  `protobuf:"varint,3,opt,name=exp,def=0" json:"exp,omitempty"`
	Lv       *uint32  `protobuf:"varint,4,opt,name=lv,def=0" json:"lv,omitempty"`
	Battle   *bool    `protobuf:"varint,5,opt,name=battle,def=0" json:"battle,omitempty"`
	Summon   *bool    `protobuf:"varint,6,opt,name=summon,def=0" json:"summon,omitempty"`
	Live     *bool    `protobuf:"varint,7,opt,name=live,def=0" json:"live,omitempty"`
	Body     *uint32  `protobuf:"varint,8,opt,name=body,def=0" json:"body,omitempty"`
	Bodylist []uint32 `protobuf:"varint,9,rep,name=bodylist" json:"bodylist,omitempty"`
}

// Default values for BeingInfo fields.
const (
	Default_BeingInfo_Guid    = uint64(0)
	Default_BeingInfo_Beingid = uint32(0)
	Default_BeingInfo_Exp     = uint64(0)
	Default_BeingInfo_Lv      = uint32(0)
	Default_BeingInfo_Battle  = bool(false)
	Default_BeingInfo_Summon  = bool(false)
	Default_BeingInfo_Live    = bool(false)
	Default_BeingInfo_Body    = uint32(0)
)

func (x *BeingInfo) Reset() {
	*x = BeingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingInfo) ProtoMessage() {}

func (x *BeingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingInfo.ProtoReflect.Descriptor instead.
func (*BeingInfo) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{6}
}

func (x *BeingInfo) GetGuid() uint64 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return Default_BeingInfo_Guid
}

func (x *BeingInfo) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return Default_BeingInfo_Beingid
}

func (x *BeingInfo) GetExp() uint64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return Default_BeingInfo_Exp
}

func (x *BeingInfo) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_BeingInfo_Lv
}

func (x *BeingInfo) GetBattle() bool {
	if x != nil && x.Battle != nil {
		return *x.Battle
	}
	return Default_BeingInfo_Battle
}

func (x *BeingInfo) GetSummon() bool {
	if x != nil && x.Summon != nil {
		return *x.Summon
	}
	return Default_BeingInfo_Summon
}

func (x *BeingInfo) GetLive() bool {
	if x != nil && x.Live != nil {
		return *x.Live
	}
	return Default_BeingInfo_Live
}

func (x *BeingInfo) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return Default_BeingInfo_Body
}

func (x *BeingInfo) GetBodylist() []uint32 {
	if x != nil {
		return x.Bodylist
	}
	return nil
}

type BeingInfoQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param     *BeingParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=4" json:"param,omitempty"`
	Beinginfo []*BeingInfo `protobuf:"bytes,3,rep,name=beinginfo" json:"beinginfo,omitempty"`
}

// Default values for BeingInfoQuery fields.
const (
	Default_BeingInfoQuery_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingInfoQuery_Param = BeingParam_BEINGPARAM_BEING_INFO_QUERY
)

func (x *BeingInfoQuery) Reset() {
	*x = BeingInfoQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingInfoQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingInfoQuery) ProtoMessage() {}

func (x *BeingInfoQuery) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingInfoQuery.ProtoReflect.Descriptor instead.
func (*BeingInfoQuery) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{7}
}

func (x *BeingInfoQuery) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingInfoQuery_Cmd
}

func (x *BeingInfoQuery) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingInfoQuery_Param
}

func (x *BeingInfoQuery) GetBeinginfo() []*BeingInfo {
	if x != nil {
		return x.Beinginfo
	}
	return nil
}

type BeingInfoUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param   *BeingParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=5" json:"param,omitempty"`
	Beingid *uint32            `protobuf:"varint,3,req,name=beingid" json:"beingid,omitempty"`
	Datas   []*BeingMemberData `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
}

// Default values for BeingInfoUpdate fields.
const (
	Default_BeingInfoUpdate_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingInfoUpdate_Param = BeingParam_BEINGPARAM_BEING_INFO_UPDATE
)

func (x *BeingInfoUpdate) Reset() {
	*x = BeingInfoUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingInfoUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingInfoUpdate) ProtoMessage() {}

func (x *BeingInfoUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingInfoUpdate.ProtoReflect.Descriptor instead.
func (*BeingInfoUpdate) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{8}
}

func (x *BeingInfoUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingInfoUpdate_Cmd
}

func (x *BeingInfoUpdate) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingInfoUpdate_Param
}

func (x *BeingInfoUpdate) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return 0
}

func (x *BeingInfoUpdate) GetDatas() []*BeingMemberData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type BeingSwitchState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param   *BeingParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=7" json:"param,omitempty"`
	Beingid *uint32     `protobuf:"varint,3,req,name=beingid" json:"beingid,omitempty"`
	Battle  *bool       `protobuf:"varint,4,req,name=battle" json:"battle,omitempty"`
}

// Default values for BeingSwitchState fields.
const (
	Default_BeingSwitchState_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingSwitchState_Param = BeingParam_BEINGPARAM_BEING_SWITCH_STATE
)

func (x *BeingSwitchState) Reset() {
	*x = BeingSwitchState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSwitchState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSwitchState) ProtoMessage() {}

func (x *BeingSwitchState) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSwitchState.ProtoReflect.Descriptor instead.
func (*BeingSwitchState) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{9}
}

func (x *BeingSwitchState) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingSwitchState_Cmd
}

func (x *BeingSwitchState) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingSwitchState_Param
}

func (x *BeingSwitchState) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return 0
}

func (x *BeingSwitchState) GetBattle() bool {
	if x != nil && x.Battle != nil {
		return *x.Battle
	}
	return false
}

type BeingOffCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param   *BeingParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=6" json:"param,omitempty"`
	Beingid *uint32     `protobuf:"varint,3,req,name=beingid" json:"beingid,omitempty"`
}

// Default values for BeingOffCmd fields.
const (
	Default_BeingOffCmd_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingOffCmd_Param = BeingParam_BEINGPARAM_BEING_OFF
)

func (x *BeingOffCmd) Reset() {
	*x = BeingOffCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingOffCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingOffCmd) ProtoMessage() {}

func (x *BeingOffCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingOffCmd.ProtoReflect.Descriptor instead.
func (*BeingOffCmd) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{10}
}

func (x *BeingOffCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingOffCmd_Cmd
}

func (x *BeingOffCmd) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingOffCmd_Param
}

func (x *BeingOffCmd) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return 0
}

type ChangeBodyBeingCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param   *BeingParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=8" json:"param,omitempty"`
	Beingid *uint32     `protobuf:"varint,3,req,name=beingid" json:"beingid,omitempty"`
	Body    *uint32     `protobuf:"varint,4,req,name=body" json:"body,omitempty"`
}

// Default values for ChangeBodyBeingCmd fields.
const (
	Default_ChangeBodyBeingCmd_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_ChangeBodyBeingCmd_Param = BeingParam_BEINGPARAM_BEING_CHANGE_BODY
)

func (x *ChangeBodyBeingCmd) Reset() {
	*x = ChangeBodyBeingCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBodyBeingCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBodyBeingCmd) ProtoMessage() {}

func (x *ChangeBodyBeingCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBodyBeingCmd.ProtoReflect.Descriptor instead.
func (*ChangeBodyBeingCmd) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeBodyBeingCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeBodyBeingCmd_Cmd
}

func (x *ChangeBodyBeingCmd) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeBodyBeingCmd_Param
}

func (x *ChangeBodyBeingCmd) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return 0
}

func (x *ChangeBodyBeingCmd) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return 0
}

type BeingQueryDataPartial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=32" json:"cmd,omitempty"`
	Param   *BeingParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BeingParam,def=9" json:"param,omitempty"`
	Beingid *uint32     `protobuf:"varint,3,req,name=beingid" json:"beingid,omitempty"`
	Exp     *uint64     `protobuf:"varint,4,opt,name=exp,def=0" json:"exp,omitempty"`
}

// Default values for BeingQueryDataPartial fields.
const (
	Default_BeingQueryDataPartial_Cmd   = Command_SCENE_USER_BEING_PROTOCMD
	Default_BeingQueryDataPartial_Param = BeingParam_BEINGPARAM_BEING_QUERY_DATA_PARTIAL
	Default_BeingQueryDataPartial_Exp   = uint64(0)
)

func (x *BeingQueryDataPartial) Reset() {
	*x = BeingQueryDataPartial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneBeing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingQueryDataPartial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingQueryDataPartial) ProtoMessage() {}

func (x *BeingQueryDataPartial) ProtoReflect() protoreflect.Message {
	mi := &file_SceneBeing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingQueryDataPartial.ProtoReflect.Descriptor instead.
func (*BeingQueryDataPartial) Descriptor() ([]byte, []int) {
	return file_SceneBeing_proto_rawDescGZIP(), []int{12}
}

func (x *BeingQueryDataPartial) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BeingQueryDataPartial_Cmd
}

func (x *BeingQueryDataPartial) GetParam() BeingParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BeingQueryDataPartial_Param
}

func (x *BeingQueryDataPartial) GetBeingid() uint32 {
	if x != nil && x.Beingid != nil {
		return *x.Beingid
	}
	return 0
}

func (x *BeingQueryDataPartial) GetExp() uint64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return Default_BeingQueryDataPartial_Exp
}

var File_SceneBeing_proto protoreflect.FileDescriptor

var file_SceneBeing_proto_rawDesc = []byte{
	0x0a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x04, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x11, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x11, 0x0a, 0x02, 0x68, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x68, 0x70, 0x12, 0x19, 0x0a,
	0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x13, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x29, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x64, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x69, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x69, 0x64, 0x73, 0x12, 0x15, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x62, 0x65, 0x61, 0x74, 0x65, 0x6e,
	0x12, 0x19, 0x0a, 0x06, 0x73, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x06, 0x73, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x68,
	0x70, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x09, 0x68, 0x70, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x61, 0x74, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x61, 0x74, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x42,
	0x65, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe1, 0x01, 0x0a, 0x10, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x17, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2b, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x03,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x42, 0x65, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03,
	0x64, 0x65, 0x6c, 0x22, 0xc8, 0x01, 0x0a, 0x11, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x55, 0x50, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x73, 0x22, 0x91,
	0x01, 0x0a, 0x0f, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0e, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xf3, 0x01, 0x0a, 0x09, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x15, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x62, 0x65, 0x69,
	0x6e, 0x67, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x11, 0x0a, 0x02, 0x6c, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x1d, 0x0a, 0x06,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x06, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x15, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6f, 0x64, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08,
	0x62, 0x6f, 0x64, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x09, 0x62, 0x65,
	0x69, 0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62,
	0x65, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x10, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42,
	0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x1d, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42,
	0x45, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e,
	0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x42,
	0x65, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x46, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c,
	0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x65, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x23, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x2a, 0xae, 0x02, 0x0a, 0x0a, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1a, 0x0a, 0x16, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53,
	0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x45, 0x49,
	0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x55, 0x50, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x42, 0x45, 0x49, 0x4e, 0x47,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x45, 0x49, 0x4e,
	0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x45,
	0x49, 0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x4f,
	0x46, 0x46, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x45, 0x49, 0x4e, 0x47,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x42, 0x45, 0x49,
	0x4e, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c,
	0x10, 0x09, 0x2a, 0xe5, 0x01, 0x0a, 0x0e, 0x45, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x42, 0x45,
	0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x56, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x50, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42,
	0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x42, 0x45, 0x49, 0x4e,
	0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10,
	0x05, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x53, 0x55, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x42, 0x45, 0x49,
	0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x4f, 0x44, 0x59,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x42, 0x45, 0x49, 0x4e, 0x47,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x09,
}

var (
	file_SceneBeing_proto_rawDescOnce sync.Once
	file_SceneBeing_proto_rawDescData = file_SceneBeing_proto_rawDesc
)

func file_SceneBeing_proto_rawDescGZIP() []byte {
	file_SceneBeing_proto_rawDescOnce.Do(func() {
		file_SceneBeing_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneBeing_proto_rawDescData)
	})
	return file_SceneBeing_proto_rawDescData
}

var file_SceneBeing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_SceneBeing_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_SceneBeing_proto_goTypes = []interface{}{
	(BeingParam)(0),               // 0: Cmd.BeingParam
	(EBeingDataType)(0),           // 1: Cmd.EBeingDataType
	(*UserBeingData)(nil),         // 2: Cmd.UserBeingData
	(*BeingSkillData)(nil),        // 3: Cmd.BeingSkillData
	(*BeingSkillQuery)(nil),       // 4: Cmd.BeingSkillQuery
	(*BeingSkillUpdate)(nil),      // 5: Cmd.BeingSkillUpdate
	(*BeingSkillLevelUp)(nil),     // 6: Cmd.BeingSkillLevelUp
	(*BeingMemberData)(nil),       // 7: Cmd.BeingMemberData
	(*BeingInfo)(nil),             // 8: Cmd.BeingInfo
	(*BeingInfoQuery)(nil),        // 9: Cmd.BeingInfoQuery
	(*BeingInfoUpdate)(nil),       // 10: Cmd.BeingInfoUpdate
	(*BeingSwitchState)(nil),      // 11: Cmd.BeingSwitchState
	(*BeingOffCmd)(nil),           // 12: Cmd.BeingOffCmd
	(*ChangeBodyBeingCmd)(nil),    // 13: Cmd.ChangeBodyBeingCmd
	(*BeingQueryDataPartial)(nil), // 14: Cmd.BeingQueryDataPartial
	(*SkillItem)(nil),             // 15: Cmd.SkillItem
	(*SpecSkillInfo)(nil),         // 16: Cmd.SpecSkillInfo
	(Command)(0),                  // 17: Cmd.Command
}
var file_SceneBeing_proto_depIdxs = []int32{
	15, // 0: Cmd.UserBeingData.skills:type_name -> Cmd.SkillItem
	15, // 1: Cmd.BeingSkillData.items:type_name -> Cmd.SkillItem
	16, // 2: Cmd.BeingSkillData.specinfo:type_name -> Cmd.SpecSkillInfo
	17, // 3: Cmd.BeingSkillQuery.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.BeingSkillQuery.param:type_name -> Cmd.BeingParam
	3,  // 5: Cmd.BeingSkillQuery.data:type_name -> Cmd.BeingSkillData
	17, // 6: Cmd.BeingSkillUpdate.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.BeingSkillUpdate.param:type_name -> Cmd.BeingParam
	3,  // 8: Cmd.BeingSkillUpdate.update:type_name -> Cmd.BeingSkillData
	3,  // 9: Cmd.BeingSkillUpdate.del:type_name -> Cmd.BeingSkillData
	17, // 10: Cmd.BeingSkillLevelUp.cmd:type_name -> Cmd.Command
	0,  // 11: Cmd.BeingSkillLevelUp.param:type_name -> Cmd.BeingParam
	1,  // 12: Cmd.BeingMemberData.etype:type_name -> Cmd.EBeingDataType
	17, // 13: Cmd.BeingInfoQuery.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.BeingInfoQuery.param:type_name -> Cmd.BeingParam
	8,  // 15: Cmd.BeingInfoQuery.beinginfo:type_name -> Cmd.BeingInfo
	17, // 16: Cmd.BeingInfoUpdate.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.BeingInfoUpdate.param:type_name -> Cmd.BeingParam
	7,  // 18: Cmd.BeingInfoUpdate.datas:type_name -> Cmd.BeingMemberData
	17, // 19: Cmd.BeingSwitchState.cmd:type_name -> Cmd.Command
	0,  // 20: Cmd.BeingSwitchState.param:type_name -> Cmd.BeingParam
	17, // 21: Cmd.BeingOffCmd.cmd:type_name -> Cmd.Command
	0,  // 22: Cmd.BeingOffCmd.param:type_name -> Cmd.BeingParam
	17, // 23: Cmd.ChangeBodyBeingCmd.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.ChangeBodyBeingCmd.param:type_name -> Cmd.BeingParam
	17, // 25: Cmd.BeingQueryDataPartial.cmd:type_name -> Cmd.Command
	0,  // 26: Cmd.BeingQueryDataPartial.param:type_name -> Cmd.BeingParam
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_SceneBeing_proto_init() }
func file_SceneBeing_proto_init() {
	if File_SceneBeing_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneSkill_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneBeing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBeingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingSkillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingSkillQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingSkillUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingSkillLevelUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingInfoQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingInfoUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingSwitchState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingOffCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBodyBeingCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneBeing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeingQueryDataPartial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneBeing_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneBeing_proto_goTypes,
		DependencyIndexes: file_SceneBeing_proto_depIdxs,
		EnumInfos:         file_SceneBeing_proto_enumTypes,
		MessageInfos:      file_SceneBeing_proto_msgTypes,
	}.Build()
	File_SceneBeing_proto = out.File
	file_SceneBeing_proto_rawDesc = nil
	file_SceneBeing_proto_goTypes = nil
	file_SceneBeing_proto_depIdxs = nil
}
