// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: NoviceNotebook.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoviceNotebookParam int32

const (
	NoviceNotebookParam_NOVICE_NOTEBOOK_INFO          NoviceNotebookParam = 1
	NoviceNotebookParam_NOVICE_NOTEBOOK_COVER_OPEN    NoviceNotebookParam = 2
	NoviceNotebookParam_NOVICE_NOTEBOOK_READ_PAGE     NoviceNotebookParam = 3
	NoviceNotebookParam_NOVICE_NOTEBOOK_RECEIVE_AWARD NoviceNotebookParam = 4
	NoviceNotebookParam_NOVICE_NOTEBOOK_LAST_POS      NoviceNotebookParam = 5
)

// Enum value maps for NoviceNotebookParam.
var (
	NoviceNotebookParam_name = map[int32]string{
		1: "NOVICE_NOTEBOOK_INFO",
		2: "NOVICE_NOTEBOOK_COVER_OPEN",
		3: "NOVICE_NOTEBOOK_READ_PAGE",
		4: "NOVICE_NOTEBOOK_RECEIVE_AWARD",
		5: "NOVICE_NOTEBOOK_LAST_POS",
	}
	NoviceNotebookParam_value = map[string]int32{
		"NOVICE_NOTEBOOK_INFO":          1,
		"NOVICE_NOTEBOOK_COVER_OPEN":    2,
		"NOVICE_NOTEBOOK_READ_PAGE":     3,
		"NOVICE_NOTEBOOK_RECEIVE_AWARD": 4,
		"NOVICE_NOTEBOOK_LAST_POS":      5,
	}
)

func (x NoviceNotebookParam) Enum() *NoviceNotebookParam {
	p := new(NoviceNotebookParam)
	*p = x
	return p
}

func (x NoviceNotebookParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoviceNotebookParam) Descriptor() protoreflect.EnumDescriptor {
	return file_NoviceNotebook_proto_enumTypes[0].Descriptor()
}

func (NoviceNotebookParam) Type() protoreflect.EnumType {
	return &file_NoviceNotebook_proto_enumTypes[0]
}

func (x NoviceNotebookParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NoviceNotebookParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NoviceNotebookParam(num)
	return nil
}

// Deprecated: Use NoviceNotebookParam.Descriptor instead.
func (NoviceNotebookParam) EnumDescriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{0}
}

type NoviceNotebookChapterTagState int32

const (
	NoviceNotebookChapterTagState_NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_OPEN    NoviceNotebookChapterTagState = 1
	NoviceNotebookChapterTagState_NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_CLOSE   NoviceNotebookChapterTagState = 2
	NoviceNotebookChapterTagState_NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_DISABLE NoviceNotebookChapterTagState = 3
)

// Enum value maps for NoviceNotebookChapterTagState.
var (
	NoviceNotebookChapterTagState_name = map[int32]string{
		1: "NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_OPEN",
		2: "NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_CLOSE",
		3: "NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_DISABLE",
	}
	NoviceNotebookChapterTagState_value = map[string]int32{
		"NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_OPEN":    1,
		"NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_CLOSE":   2,
		"NOVICE_NOTEBOOK_CHAPTER_TAG_STATE_DISABLE": 3,
	}
)

func (x NoviceNotebookChapterTagState) Enum() *NoviceNotebookChapterTagState {
	p := new(NoviceNotebookChapterTagState)
	*p = x
	return p
}

func (x NoviceNotebookChapterTagState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoviceNotebookChapterTagState) Descriptor() protoreflect.EnumDescriptor {
	return file_NoviceNotebook_proto_enumTypes[1].Descriptor()
}

func (NoviceNotebookChapterTagState) Type() protoreflect.EnumType {
	return &file_NoviceNotebook_proto_enumTypes[1]
}

func (x NoviceNotebookChapterTagState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NoviceNotebookChapterTagState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NoviceNotebookChapterTagState(num)
	return nil
}

// Deprecated: Use NoviceNotebookChapterTagState.Descriptor instead.
func (NoviceNotebookChapterTagState) EnumDescriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{1}
}

type NoviceNotebookRewardState int32

const (
	NoviceNotebookRewardState_NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_NOT_AVAILABLE NoviceNotebookRewardState = 1
	NoviceNotebookRewardState_NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_AVAILABLE     NoviceNotebookRewardState = 2
	NoviceNotebookRewardState_NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_RECEIVED      NoviceNotebookRewardState = 3
)

// Enum value maps for NoviceNotebookRewardState.
var (
	NoviceNotebookRewardState_name = map[int32]string{
		1: "NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_NOT_AVAILABLE",
		2: "NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_AVAILABLE",
		3: "NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_RECEIVED",
	}
	NoviceNotebookRewardState_value = map[string]int32{
		"NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_NOT_AVAILABLE": 1,
		"NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_AVAILABLE":     2,
		"NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_RECEIVED":      3,
	}
)

func (x NoviceNotebookRewardState) Enum() *NoviceNotebookRewardState {
	p := new(NoviceNotebookRewardState)
	*p = x
	return p
}

func (x NoviceNotebookRewardState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoviceNotebookRewardState) Descriptor() protoreflect.EnumDescriptor {
	return file_NoviceNotebook_proto_enumTypes[2].Descriptor()
}

func (NoviceNotebookRewardState) Type() protoreflect.EnumType {
	return &file_NoviceNotebook_proto_enumTypes[2]
}

func (x NoviceNotebookRewardState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NoviceNotebookRewardState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NoviceNotebookRewardState(num)
	return nil
}

// Deprecated: Use NoviceNotebookRewardState.Descriptor instead.
func (NoviceNotebookRewardState) EnumDescriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{2}
}

type NoviceNotebookPageQuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId *uint32 `protobuf:"varint,1,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	Times  *uint32 `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
}

func (x *NoviceNotebookPageQuest) Reset() {
	*x = NoviceNotebookPageQuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookPageQuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookPageQuest) ProtoMessage() {}

func (x *NoviceNotebookPageQuest) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookPageQuest.ProtoReflect.Descriptor instead.
func (*NoviceNotebookPageQuest) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{0}
}

func (x *NoviceNotebookPageQuest) GetPageId() uint32 {
	if x != nil && x.PageId != nil {
		return *x.PageId
	}
	return 0
}

func (x *NoviceNotebookPageQuest) GetTimes() uint32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type NoviceNotebookChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId            *uint32                    `protobuf:"varint,1,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
	CompletePageProgress *uint32                    `protobuf:"varint,2,opt,name=complete_page_progress,json=completePageProgress" json:"complete_page_progress,omitempty"`
	UnreadedPageIds      []uint32                   `protobuf:"varint,3,rep,name=unreaded_page_ids,json=unreadedPageIds" json:"unreaded_page_ids,omitempty"`
	PageQuests           []*NoviceNotebookPageQuest `protobuf:"bytes,4,rep,name=page_quests,json=pageQuests" json:"page_quests,omitempty"`
}

func (x *NoviceNotebookChapter) Reset() {
	*x = NoviceNotebookChapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookChapter) ProtoMessage() {}

func (x *NoviceNotebookChapter) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookChapter.ProtoReflect.Descriptor instead.
func (*NoviceNotebookChapter) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{1}
}

func (x *NoviceNotebookChapter) GetChapterId() uint32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

func (x *NoviceNotebookChapter) GetCompletePageProgress() uint32 {
	if x != nil && x.CompletePageProgress != nil {
		return *x.CompletePageProgress
	}
	return 0
}

func (x *NoviceNotebookChapter) GetUnreadedPageIds() []uint32 {
	if x != nil {
		return x.UnreadedPageIds
	}
	return nil
}

func (x *NoviceNotebookChapter) GetPageQuests() []*NoviceNotebookPageQuest {
	if x != nil {
		return x.PageQuests
	}
	return nil
}

type NoviceNotebookChapterLastPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId *uint32 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
	PageId    *uint32 `protobuf:"varint,2,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
}

func (x *NoviceNotebookChapterLastPos) Reset() {
	*x = NoviceNotebookChapterLastPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookChapterLastPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookChapterLastPos) ProtoMessage() {}

func (x *NoviceNotebookChapterLastPos) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookChapterLastPos.ProtoReflect.Descriptor instead.
func (*NoviceNotebookChapterLastPos) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{2}
}

func (x *NoviceNotebookChapterLastPos) GetChapterId() uint32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

func (x *NoviceNotebookChapterLastPos) GetPageId() uint32 {
	if x != nil && x.PageId != nil {
		return *x.PageId
	}
	return 0
}

type NoviceNotebookLastPosCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command                      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=231" json:"cmd,omitempty"`
	Param            *NoviceNotebookParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.NoviceNotebookParam,def=5" json:"param,omitempty"`
	GlobalActivityId *uint32                       `protobuf:"varint,3,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
	LastPos          *NoviceNotebookChapterLastPos `protobuf:"bytes,4,opt,name=last_pos,json=lastPos" json:"last_pos,omitempty"`
}

// Default values for NoviceNotebookLastPosCmd fields.
const (
	Default_NoviceNotebookLastPosCmd_Cmd   = Command_NOVICE_NOTEBOOK
	Default_NoviceNotebookLastPosCmd_Param = NoviceNotebookParam_NOVICE_NOTEBOOK_LAST_POS
)

func (x *NoviceNotebookLastPosCmd) Reset() {
	*x = NoviceNotebookLastPosCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookLastPosCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookLastPosCmd) ProtoMessage() {}

func (x *NoviceNotebookLastPosCmd) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookLastPosCmd.ProtoReflect.Descriptor instead.
func (*NoviceNotebookLastPosCmd) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{3}
}

func (x *NoviceNotebookLastPosCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceNotebookLastPosCmd_Cmd
}

func (x *NoviceNotebookLastPosCmd) GetParam() NoviceNotebookParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceNotebookLastPosCmd_Param
}

func (x *NoviceNotebookLastPosCmd) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

func (x *NoviceNotebookLastPosCmd) GetLastPos() *NoviceNotebookChapterLastPos {
	if x != nil {
		return x.LastPos
	}
	return nil
}

type NoviceNotebookCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command                      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=231" json:"cmd,omitempty"`
	Param            *NoviceNotebookParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.NoviceNotebookParam,def=1" json:"param,omitempty"`
	GlobalActivityId *uint32                       `protobuf:"varint,3,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
	IsCoverUnlock    *bool                         `protobuf:"varint,4,opt,name=is_cover_unlock,json=isCoverUnlock" json:"is_cover_unlock,omitempty"`
	Chapters         []*NoviceNotebookChapter      `protobuf:"bytes,5,rep,name=chapters" json:"chapters,omitempty"`
	RewardState      *NoviceNotebookRewardState    `protobuf:"varint,6,opt,name=reward_state,json=rewardState,enum=Cmd.NoviceNotebookRewardState" json:"reward_state,omitempty"`
	LastPos          *NoviceNotebookChapterLastPos `protobuf:"bytes,7,opt,name=last_pos,json=lastPos" json:"last_pos,omitempty"`
}

// Default values for NoviceNotebookCmd fields.
const (
	Default_NoviceNotebookCmd_Cmd   = Command_NOVICE_NOTEBOOK
	Default_NoviceNotebookCmd_Param = NoviceNotebookParam_NOVICE_NOTEBOOK_INFO
)

func (x *NoviceNotebookCmd) Reset() {
	*x = NoviceNotebookCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookCmd) ProtoMessage() {}

func (x *NoviceNotebookCmd) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookCmd.ProtoReflect.Descriptor instead.
func (*NoviceNotebookCmd) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{4}
}

func (x *NoviceNotebookCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceNotebookCmd_Cmd
}

func (x *NoviceNotebookCmd) GetParam() NoviceNotebookParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceNotebookCmd_Param
}

func (x *NoviceNotebookCmd) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

func (x *NoviceNotebookCmd) GetIsCoverUnlock() bool {
	if x != nil && x.IsCoverUnlock != nil {
		return *x.IsCoverUnlock
	}
	return false
}

func (x *NoviceNotebookCmd) GetChapters() []*NoviceNotebookChapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *NoviceNotebookCmd) GetRewardState() NoviceNotebookRewardState {
	if x != nil && x.RewardState != nil {
		return *x.RewardState
	}
	return NoviceNotebookRewardState_NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_NOT_AVAILABLE
}

func (x *NoviceNotebookCmd) GetLastPos() *NoviceNotebookChapterLastPos {
	if x != nil {
		return x.LastPos
	}
	return nil
}

type NoviceNotebookCoverOpenCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command             `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=231" json:"cmd,omitempty"`
	Param            *NoviceNotebookParam `protobuf:"varint,2,opt,name=param,enum=Cmd.NoviceNotebookParam,def=2" json:"param,omitempty"`
	GlobalActivityId *uint32              `protobuf:"varint,3,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
}

// Default values for NoviceNotebookCoverOpenCmd fields.
const (
	Default_NoviceNotebookCoverOpenCmd_Cmd   = Command_NOVICE_NOTEBOOK
	Default_NoviceNotebookCoverOpenCmd_Param = NoviceNotebookParam_NOVICE_NOTEBOOK_COVER_OPEN
)

func (x *NoviceNotebookCoverOpenCmd) Reset() {
	*x = NoviceNotebookCoverOpenCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookCoverOpenCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookCoverOpenCmd) ProtoMessage() {}

func (x *NoviceNotebookCoverOpenCmd) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookCoverOpenCmd.ProtoReflect.Descriptor instead.
func (*NoviceNotebookCoverOpenCmd) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{5}
}

func (x *NoviceNotebookCoverOpenCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceNotebookCoverOpenCmd_Cmd
}

func (x *NoviceNotebookCoverOpenCmd) GetParam() NoviceNotebookParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceNotebookCoverOpenCmd_Param
}

func (x *NoviceNotebookCoverOpenCmd) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

type NoviceNotebookReadPageCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command             `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=231" json:"cmd,omitempty"`
	Param            *NoviceNotebookParam `protobuf:"varint,2,opt,name=param,enum=Cmd.NoviceNotebookParam,def=3" json:"param,omitempty"`
	GlobalActivityId *uint32              `protobuf:"varint,3,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
	ChapterId        *uint32              `protobuf:"varint,4,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
	PageId           *uint32              `protobuf:"varint,5,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
}

// Default values for NoviceNotebookReadPageCmd fields.
const (
	Default_NoviceNotebookReadPageCmd_Cmd   = Command_NOVICE_NOTEBOOK
	Default_NoviceNotebookReadPageCmd_Param = NoviceNotebookParam_NOVICE_NOTEBOOK_READ_PAGE
)

func (x *NoviceNotebookReadPageCmd) Reset() {
	*x = NoviceNotebookReadPageCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookReadPageCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookReadPageCmd) ProtoMessage() {}

func (x *NoviceNotebookReadPageCmd) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookReadPageCmd.ProtoReflect.Descriptor instead.
func (*NoviceNotebookReadPageCmd) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{6}
}

func (x *NoviceNotebookReadPageCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceNotebookReadPageCmd_Cmd
}

func (x *NoviceNotebookReadPageCmd) GetParam() NoviceNotebookParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceNotebookReadPageCmd_Param
}

func (x *NoviceNotebookReadPageCmd) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

func (x *NoviceNotebookReadPageCmd) GetChapterId() uint32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

func (x *NoviceNotebookReadPageCmd) GetPageId() uint32 {
	if x != nil && x.PageId != nil {
		return *x.PageId
	}
	return 0
}

type NoviceNotebookReceiveAwardCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command             `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=231" json:"cmd,omitempty"`
	Param            *NoviceNotebookParam `protobuf:"varint,2,opt,name=param,enum=Cmd.NoviceNotebookParam,def=4" json:"param,omitempty"`
	GlobalActivityId *uint32              `protobuf:"varint,3,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
}

// Default values for NoviceNotebookReceiveAwardCmd fields.
const (
	Default_NoviceNotebookReceiveAwardCmd_Cmd   = Command_NOVICE_NOTEBOOK
	Default_NoviceNotebookReceiveAwardCmd_Param = NoviceNotebookParam_NOVICE_NOTEBOOK_RECEIVE_AWARD
)

func (x *NoviceNotebookReceiveAwardCmd) Reset() {
	*x = NoviceNotebookReceiveAwardCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceNotebookReceiveAwardCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceNotebookReceiveAwardCmd) ProtoMessage() {}

func (x *NoviceNotebookReceiveAwardCmd) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceNotebookReceiveAwardCmd.ProtoReflect.Descriptor instead.
func (*NoviceNotebookReceiveAwardCmd) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{7}
}

func (x *NoviceNotebookReceiveAwardCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceNotebookReceiveAwardCmd_Cmd
}

func (x *NoviceNotebookReceiveAwardCmd) GetParam() NoviceNotebookParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceNotebookReceiveAwardCmd_Param
}

func (x *NoviceNotebookReceiveAwardCmd) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

type BlobNoviceNotebookPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId *uint32 `protobuf:"varint,1,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	Times  *uint32 `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
}

func (x *BlobNoviceNotebookPage) Reset() {
	*x = BlobNoviceNotebookPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobNoviceNotebookPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobNoviceNotebookPage) ProtoMessage() {}

func (x *BlobNoviceNotebookPage) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobNoviceNotebookPage.ProtoReflect.Descriptor instead.
func (*BlobNoviceNotebookPage) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{8}
}

func (x *BlobNoviceNotebookPage) GetPageId() uint32 {
	if x != nil && x.PageId != nil {
		return *x.PageId
	}
	return 0
}

func (x *BlobNoviceNotebookPage) GetTimes() uint32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type BlobNoviceNotebookChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId     *uint32                   `protobuf:"varint,1,opt,name=chapter_id,json=chapterId" json:"chapter_id,omitempty"`
	CompletePages []uint32                  `protobuf:"varint,2,rep,name=complete_pages,json=completePages" json:"complete_pages,omitempty"`
	ReadedPageIds []uint32                  `protobuf:"varint,3,rep,name=readed_page_ids,json=readedPageIds" json:"readed_page_ids,omitempty"`
	Pages         []*BlobNoviceNotebookPage `protobuf:"bytes,4,rep,name=pages" json:"pages,omitempty"`
	IsReaded      *bool                     `protobuf:"varint,5,opt,name=is_readed,json=isReaded" json:"is_readed,omitempty"`
}

func (x *BlobNoviceNotebookChapter) Reset() {
	*x = BlobNoviceNotebookChapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobNoviceNotebookChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobNoviceNotebookChapter) ProtoMessage() {}

func (x *BlobNoviceNotebookChapter) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobNoviceNotebookChapter.ProtoReflect.Descriptor instead.
func (*BlobNoviceNotebookChapter) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{9}
}

func (x *BlobNoviceNotebookChapter) GetChapterId() uint32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

func (x *BlobNoviceNotebookChapter) GetCompletePages() []uint32 {
	if x != nil {
		return x.CompletePages
	}
	return nil
}

func (x *BlobNoviceNotebookChapter) GetReadedPageIds() []uint32 {
	if x != nil {
		return x.ReadedPageIds
	}
	return nil
}

func (x *BlobNoviceNotebookChapter) GetPages() []*BlobNoviceNotebookPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *BlobNoviceNotebookChapter) GetIsReaded() bool {
	if x != nil && x.IsReaded != nil {
		return *x.IsReaded
	}
	return false
}

type BlobNoviceNotebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalActivityId *uint32                       `protobuf:"varint,1,opt,name=global_activity_id,json=globalActivityId" json:"global_activity_id,omitempty"`
	IsCoverUnlock    *bool                         `protobuf:"varint,2,opt,name=is_cover_unlock,json=isCoverUnlock" json:"is_cover_unlock,omitempty"`
	Chapters         []*BlobNoviceNotebookChapter  `protobuf:"bytes,5,rep,name=chapters" json:"chapters,omitempty"`
	RewardState      *NoviceNotebookRewardState    `protobuf:"varint,6,opt,name=reward_state,json=rewardState,enum=Cmd.NoviceNotebookRewardState" json:"reward_state,omitempty"`
	LastPos          *NoviceNotebookChapterLastPos `protobuf:"bytes,7,opt,name=last_pos,json=lastPos" json:"last_pos,omitempty"`
}

func (x *BlobNoviceNotebook) Reset() {
	*x = BlobNoviceNotebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobNoviceNotebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobNoviceNotebook) ProtoMessage() {}

func (x *BlobNoviceNotebook) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobNoviceNotebook.ProtoReflect.Descriptor instead.
func (*BlobNoviceNotebook) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{10}
}

func (x *BlobNoviceNotebook) GetGlobalActivityId() uint32 {
	if x != nil && x.GlobalActivityId != nil {
		return *x.GlobalActivityId
	}
	return 0
}

func (x *BlobNoviceNotebook) GetIsCoverUnlock() bool {
	if x != nil && x.IsCoverUnlock != nil {
		return *x.IsCoverUnlock
	}
	return false
}

func (x *BlobNoviceNotebook) GetChapters() []*BlobNoviceNotebookChapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *BlobNoviceNotebook) GetRewardState() NoviceNotebookRewardState {
	if x != nil && x.RewardState != nil {
		return *x.RewardState
	}
	return NoviceNotebookRewardState_NOVICE_NOTEBOOK_CHAPTER_REWARD_STATE_NOT_AVAILABLE
}

func (x *BlobNoviceNotebook) GetLastPos() *NoviceNotebookChapterLastPos {
	if x != nil {
		return x.LastPos
	}
	return nil
}

type BlobNoviceNotebookData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*BlobNoviceNotebook `protobuf:"bytes,1,rep,name=books" json:"books,omitempty"`
}

func (x *BlobNoviceNotebookData) Reset() {
	*x = BlobNoviceNotebookData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NoviceNotebook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobNoviceNotebookData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobNoviceNotebookData) ProtoMessage() {}

func (x *BlobNoviceNotebookData) ProtoReflect() protoreflect.Message {
	mi := &file_NoviceNotebook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobNoviceNotebookData.ProtoReflect.Descriptor instead.
func (*BlobNoviceNotebookData) Descriptor() ([]byte, []int) {
	return file_NoviceNotebook_proto_rawDescGZIP(), []int{11}
}

func (x *BlobNoviceNotebookData) GetBooks() []*BlobNoviceNotebook {
	if x != nil {
		return x.Books
	}
	return nil
}

var File_NoviceNotebook_proto protoreflect.FileDescriptor

var file_NoviceNotebook_proto_rawDesc = []byte{
	0x0a, 0x14, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x65, 0x64, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x1c, 0x4e,
	0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x18, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x43, 0x6d, 0x64,
	0x12, 0x2f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0f, 0x4e, 0x4f, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x4e, 0x4f, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4c, 0x41, 0x53, 0x54,
	0x5f, 0x50, 0x4f, 0x53, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x52, 0x07,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x22, 0x99, 0x03, 0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6d, 0x64, 0x12, 0x2f, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0f, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e,
	0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x1a, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6d, 0x64, 0x12, 0x2f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0f, 0x4e,
	0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x4e, 0x4f,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x4f,
	0x56, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xfd, 0x01,
	0x0a, 0x19, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x2f, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0f, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f,
	0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x47, 0x45,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xcd, 0x01,
	0x0a, 0x1d, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6d, 0x64, 0x12,
	0x2f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0f, 0x4e, 0x4f, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x4d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x4e, 0x4f, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49,
	0x56, 0x45, 0x5f, 0x41, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a,
	0x16, 0x42, 0x6c, 0x6f, 0x62, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x19, 0x42, 0x6c, 0x6f, 0x62, 0x4e,
	0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x4e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x65, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x62, 0x4e, 0x6f, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x3a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x4e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x22, 0x47, 0x0a, 0x16,
	0x42, 0x6c, 0x6f, 0x62, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x05,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2a, 0xaf, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x14, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x50, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56,
	0x45, 0x5f, 0x41, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x4f, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4c, 0x41, 0x53,
	0x54, 0x5f, 0x50, 0x4f, 0x53, 0x10, 0x05, 0x2a, 0xa7, 0x01, 0x0a, 0x1d, 0x4e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x4e, 0x4f, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x48, 0x41,
	0x50, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52,
	0x5f, 0x54, 0x41, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x03, 0x2a, 0xba, 0x01, 0x0a, 0x19, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x36, 0x0a, 0x32, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x32, 0x0a, 0x2e, 0x4e, 0x4f, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x50, 0x54,
	0x45, 0x52, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x31, 0x0a, 0x2d, 0x4e,
	0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43,
	0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x03,
}

var (
	file_NoviceNotebook_proto_rawDescOnce sync.Once
	file_NoviceNotebook_proto_rawDescData = file_NoviceNotebook_proto_rawDesc
)

func file_NoviceNotebook_proto_rawDescGZIP() []byte {
	file_NoviceNotebook_proto_rawDescOnce.Do(func() {
		file_NoviceNotebook_proto_rawDescData = protoimpl.X.CompressGZIP(file_NoviceNotebook_proto_rawDescData)
	})
	return file_NoviceNotebook_proto_rawDescData
}

var file_NoviceNotebook_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_NoviceNotebook_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_NoviceNotebook_proto_goTypes = []interface{}{
	(NoviceNotebookParam)(0),              // 0: Cmd.NoviceNotebookParam
	(NoviceNotebookChapterTagState)(0),    // 1: Cmd.NoviceNotebookChapterTagState
	(NoviceNotebookRewardState)(0),        // 2: Cmd.NoviceNotebookRewardState
	(*NoviceNotebookPageQuest)(nil),       // 3: Cmd.NoviceNotebookPageQuest
	(*NoviceNotebookChapter)(nil),         // 4: Cmd.NoviceNotebookChapter
	(*NoviceNotebookChapterLastPos)(nil),  // 5: Cmd.NoviceNotebookChapterLastPos
	(*NoviceNotebookLastPosCmd)(nil),      // 6: Cmd.NoviceNotebookLastPosCmd
	(*NoviceNotebookCmd)(nil),             // 7: Cmd.NoviceNotebookCmd
	(*NoviceNotebookCoverOpenCmd)(nil),    // 8: Cmd.NoviceNotebookCoverOpenCmd
	(*NoviceNotebookReadPageCmd)(nil),     // 9: Cmd.NoviceNotebookReadPageCmd
	(*NoviceNotebookReceiveAwardCmd)(nil), // 10: Cmd.NoviceNotebookReceiveAwardCmd
	(*BlobNoviceNotebookPage)(nil),        // 11: Cmd.BlobNoviceNotebookPage
	(*BlobNoviceNotebookChapter)(nil),     // 12: Cmd.BlobNoviceNotebookChapter
	(*BlobNoviceNotebook)(nil),            // 13: Cmd.BlobNoviceNotebook
	(*BlobNoviceNotebookData)(nil),        // 14: Cmd.BlobNoviceNotebookData
	(Command)(0),                          // 15: Cmd.Command
}
var file_NoviceNotebook_proto_depIdxs = []int32{
	3,  // 0: Cmd.NoviceNotebookChapter.page_quests:type_name -> Cmd.NoviceNotebookPageQuest
	15, // 1: Cmd.NoviceNotebookLastPosCmd.cmd:type_name -> Cmd.Command
	0,  // 2: Cmd.NoviceNotebookLastPosCmd.param:type_name -> Cmd.NoviceNotebookParam
	5,  // 3: Cmd.NoviceNotebookLastPosCmd.last_pos:type_name -> Cmd.NoviceNotebookChapterLastPos
	15, // 4: Cmd.NoviceNotebookCmd.cmd:type_name -> Cmd.Command
	0,  // 5: Cmd.NoviceNotebookCmd.param:type_name -> Cmd.NoviceNotebookParam
	4,  // 6: Cmd.NoviceNotebookCmd.chapters:type_name -> Cmd.NoviceNotebookChapter
	2,  // 7: Cmd.NoviceNotebookCmd.reward_state:type_name -> Cmd.NoviceNotebookRewardState
	5,  // 8: Cmd.NoviceNotebookCmd.last_pos:type_name -> Cmd.NoviceNotebookChapterLastPos
	15, // 9: Cmd.NoviceNotebookCoverOpenCmd.cmd:type_name -> Cmd.Command
	0,  // 10: Cmd.NoviceNotebookCoverOpenCmd.param:type_name -> Cmd.NoviceNotebookParam
	15, // 11: Cmd.NoviceNotebookReadPageCmd.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.NoviceNotebookReadPageCmd.param:type_name -> Cmd.NoviceNotebookParam
	15, // 13: Cmd.NoviceNotebookReceiveAwardCmd.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.NoviceNotebookReceiveAwardCmd.param:type_name -> Cmd.NoviceNotebookParam
	11, // 15: Cmd.BlobNoviceNotebookChapter.pages:type_name -> Cmd.BlobNoviceNotebookPage
	12, // 16: Cmd.BlobNoviceNotebook.chapters:type_name -> Cmd.BlobNoviceNotebookChapter
	2,  // 17: Cmd.BlobNoviceNotebook.reward_state:type_name -> Cmd.NoviceNotebookRewardState
	5,  // 18: Cmd.BlobNoviceNotebook.last_pos:type_name -> Cmd.NoviceNotebookChapterLastPos
	13, // 19: Cmd.BlobNoviceNotebookData.books:type_name -> Cmd.BlobNoviceNotebook
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_NoviceNotebook_proto_init() }
func file_NoviceNotebook_proto_init() {
	if File_NoviceNotebook_proto != nil {
		return
	}
	file_xCmd_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_NoviceNotebook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookPageQuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookChapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookChapterLastPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookLastPosCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookCoverOpenCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookReadPageCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceNotebookReceiveAwardCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobNoviceNotebookPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobNoviceNotebookChapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobNoviceNotebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NoviceNotebook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobNoviceNotebookData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_NoviceNotebook_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NoviceNotebook_proto_goTypes,
		DependencyIndexes: file_NoviceNotebook_proto_depIdxs,
		EnumInfos:         file_NoviceNotebook_proto_enumTypes,
		MessageInfos:      file_NoviceNotebook_proto_msgTypes,
	}.Build()
	File_NoviceNotebook_proto = out.File
	file_NoviceNotebook_proto_rawDesc = nil
	file_NoviceNotebook_proto_goTypes = nil
	file_NoviceNotebook_proto_depIdxs = nil
}
