// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: ScenePet.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PetParam int32

const (
	PetParam_PETPARAM_PETLIST                  PetParam = 1
	PetParam_PETPARAM_FIRE_CAT                 PetParam = 2
	PetParam_PETPARAM_HIRE_CAT                 PetParam = 3
	PetParam_PETPARAM_HATCH_EGG                PetParam = 4
	PetParam_PETPARAM_RESTORE_EGG              PetParam = 5
	PetParam_PETPARAM_CATCH_VALUE_SYNC         PetParam = 6
	PetParam_PETPARAM_CATCH_RESULT             PetParam = 7
	PetParam_PETPARAM_CATCH_PET                PetParam = 8
	PetParam_PETPARAM_PETINFO                  PetParam = 9
	PetParam_PETPARAM_PETINFO_UPDATE           PetParam = 10
	PetParam_PETPARAM_OFF_PET                  PetParam = 11
	PetParam_PETPARAM_CATCH_GIFT               PetParam = 12
	PetParam_PETPARAM_GET_GIFT                 PetParam = 13
	PetParam_PETPARAM_EQUIP_OPER               PetParam = 14
	PetParam_PETPARAM_EQUIP_UPDATE             PetParam = 15
	PetParam_PETPARAM_ADVENTURE_QUERYLIST      PetParam = 16
	PetParam_PETPARAM_ADVENTURE_RESULTNTF      PetParam = 17
	PetParam_PETPARAM_ADVENTURE_START          PetParam = 18
	PetParam_PETPARAM_ADVENTURE_GETREWARD      PetParam = 19
	PetParam_PETPARAM_ADVENTURE_QUERYBATTLEPET PetParam = 20
	PetParam_PETPARAM_INVITE_HAND              PetParam = 21
	PetParam_PETPARAM_GIVE_GIFT                PetParam = 22
	PetParam_PETPARAM_UNLOCK_NTF               PetParam = 23
	PetParam_PETPARAM_RESET_SKILL              PetParam = 24
	PetParam_PETPARAM_QUERY_GOTITEM            PetParam = 25
	PetParam_PETPARAM_CHANGE_NAME              PetParam = 26
	PetParam_PETPARAM_SWITCH_SKILL             PetParam = 27
	PetParam_PETPARAM_WORK_STARTWORK           PetParam = 29
	PetParam_PETPARAM_WORK_STOPWORK            PetParam = 30
	PetParam_PETPARAM_WORK_QUERYWORKDATA       PetParam = 32
	PetParam_PETPARAM_WORK_GETREWARD           PetParam = 33
	PetParam_PETPARAM_WORK_SPACEUPDATE         PetParam = 34
	PetParam_PETPARAM_WORK_EXTRAUPDATE         PetParam = 35
	PetParam_PETPARAM_COMPOSE                  PetParam = 36
	PetParam_PETPARAM_EQUIP_LIST               PetParam = 37
	PetParam_PETPARAM_EQUIP_LIST_UPDATE        PetParam = 38
	PetParam_PETPARAM_CHANGE_WEAR              PetParam = 39
	PetParam_PETPARAM_UPDATE_WEAR              PetParam = 40
	PetParam_PETPARAM_REPLACE_CAT              PetParam = 41
	PetParam_PETPARAM_WORK_MAXSPACEUPDATE      PetParam = 42
	PetParam_PETPARAM_CAT_EQUIP                PetParam = 43
	PetParam_PETPARAM_CAT_EQUIPINFO            PetParam = 44
	PetParam_PETPARAM_CAT_SKILLOPTION          PetParam = 45
	PetParam_PETPARAM_BOKI_STATE_QUERY         PetParam = 46
	PetParam_PETPARAM_BOKI_DATA_UPDATE         PetParam = 47
	PetParam_PETPARAM_BOKI_EQUIP_LEVEL_UP      PetParam = 48
	PetParam_PETPARAM_BOKI_EQUIP_UPDATE        PetParam = 49
	PetParam_PETPARAM_BOKI_SKILL_LEVEUP        PetParam = 50
	PetParam_PETPARAM_BOKI_SKILL_UPDATE        PetParam = 51
	PetParam_PETPARAM_BOKI_SKILL_IN_USE_UPDATE PetParam = 52
	PetParam_PETPARAM_BOKI_SKILL_IN_USE_SET    PetParam = 53
)

// Enum value maps for PetParam.
var (
	PetParam_name = map[int32]string{
		1:  "PETPARAM_PETLIST",
		2:  "PETPARAM_FIRE_CAT",
		3:  "PETPARAM_HIRE_CAT",
		4:  "PETPARAM_HATCH_EGG",
		5:  "PETPARAM_RESTORE_EGG",
		6:  "PETPARAM_CATCH_VALUE_SYNC",
		7:  "PETPARAM_CATCH_RESULT",
		8:  "PETPARAM_CATCH_PET",
		9:  "PETPARAM_PETINFO",
		10: "PETPARAM_PETINFO_UPDATE",
		11: "PETPARAM_OFF_PET",
		12: "PETPARAM_CATCH_GIFT",
		13: "PETPARAM_GET_GIFT",
		14: "PETPARAM_EQUIP_OPER",
		15: "PETPARAM_EQUIP_UPDATE",
		16: "PETPARAM_ADVENTURE_QUERYLIST",
		17: "PETPARAM_ADVENTURE_RESULTNTF",
		18: "PETPARAM_ADVENTURE_START",
		19: "PETPARAM_ADVENTURE_GETREWARD",
		20: "PETPARAM_ADVENTURE_QUERYBATTLEPET",
		21: "PETPARAM_INVITE_HAND",
		22: "PETPARAM_GIVE_GIFT",
		23: "PETPARAM_UNLOCK_NTF",
		24: "PETPARAM_RESET_SKILL",
		25: "PETPARAM_QUERY_GOTITEM",
		26: "PETPARAM_CHANGE_NAME",
		27: "PETPARAM_SWITCH_SKILL",
		29: "PETPARAM_WORK_STARTWORK",
		30: "PETPARAM_WORK_STOPWORK",
		32: "PETPARAM_WORK_QUERYWORKDATA",
		33: "PETPARAM_WORK_GETREWARD",
		34: "PETPARAM_WORK_SPACEUPDATE",
		35: "PETPARAM_WORK_EXTRAUPDATE",
		36: "PETPARAM_COMPOSE",
		37: "PETPARAM_EQUIP_LIST",
		38: "PETPARAM_EQUIP_LIST_UPDATE",
		39: "PETPARAM_CHANGE_WEAR",
		40: "PETPARAM_UPDATE_WEAR",
		41: "PETPARAM_REPLACE_CAT",
		42: "PETPARAM_WORK_MAXSPACEUPDATE",
		43: "PETPARAM_CAT_EQUIP",
		44: "PETPARAM_CAT_EQUIPINFO",
		45: "PETPARAM_CAT_SKILLOPTION",
		46: "PETPARAM_BOKI_STATE_QUERY",
		47: "PETPARAM_BOKI_DATA_UPDATE",
		48: "PETPARAM_BOKI_EQUIP_LEVEL_UP",
		49: "PETPARAM_BOKI_EQUIP_UPDATE",
		50: "PETPARAM_BOKI_SKILL_LEVEUP",
		51: "PETPARAM_BOKI_SKILL_UPDATE",
		52: "PETPARAM_BOKI_SKILL_IN_USE_UPDATE",
		53: "PETPARAM_BOKI_SKILL_IN_USE_SET",
	}
	PetParam_value = map[string]int32{
		"PETPARAM_PETLIST":                  1,
		"PETPARAM_FIRE_CAT":                 2,
		"PETPARAM_HIRE_CAT":                 3,
		"PETPARAM_HATCH_EGG":                4,
		"PETPARAM_RESTORE_EGG":              5,
		"PETPARAM_CATCH_VALUE_SYNC":         6,
		"PETPARAM_CATCH_RESULT":             7,
		"PETPARAM_CATCH_PET":                8,
		"PETPARAM_PETINFO":                  9,
		"PETPARAM_PETINFO_UPDATE":           10,
		"PETPARAM_OFF_PET":                  11,
		"PETPARAM_CATCH_GIFT":               12,
		"PETPARAM_GET_GIFT":                 13,
		"PETPARAM_EQUIP_OPER":               14,
		"PETPARAM_EQUIP_UPDATE":             15,
		"PETPARAM_ADVENTURE_QUERYLIST":      16,
		"PETPARAM_ADVENTURE_RESULTNTF":      17,
		"PETPARAM_ADVENTURE_START":          18,
		"PETPARAM_ADVENTURE_GETREWARD":      19,
		"PETPARAM_ADVENTURE_QUERYBATTLEPET": 20,
		"PETPARAM_INVITE_HAND":              21,
		"PETPARAM_GIVE_GIFT":                22,
		"PETPARAM_UNLOCK_NTF":               23,
		"PETPARAM_RESET_SKILL":              24,
		"PETPARAM_QUERY_GOTITEM":            25,
		"PETPARAM_CHANGE_NAME":              26,
		"PETPARAM_SWITCH_SKILL":             27,
		"PETPARAM_WORK_STARTWORK":           29,
		"PETPARAM_WORK_STOPWORK":            30,
		"PETPARAM_WORK_QUERYWORKDATA":       32,
		"PETPARAM_WORK_GETREWARD":           33,
		"PETPARAM_WORK_SPACEUPDATE":         34,
		"PETPARAM_WORK_EXTRAUPDATE":         35,
		"PETPARAM_COMPOSE":                  36,
		"PETPARAM_EQUIP_LIST":               37,
		"PETPARAM_EQUIP_LIST_UPDATE":        38,
		"PETPARAM_CHANGE_WEAR":              39,
		"PETPARAM_UPDATE_WEAR":              40,
		"PETPARAM_REPLACE_CAT":              41,
		"PETPARAM_WORK_MAXSPACEUPDATE":      42,
		"PETPARAM_CAT_EQUIP":                43,
		"PETPARAM_CAT_EQUIPINFO":            44,
		"PETPARAM_CAT_SKILLOPTION":          45,
		"PETPARAM_BOKI_STATE_QUERY":         46,
		"PETPARAM_BOKI_DATA_UPDATE":         47,
		"PETPARAM_BOKI_EQUIP_LEVEL_UP":      48,
		"PETPARAM_BOKI_EQUIP_UPDATE":        49,
		"PETPARAM_BOKI_SKILL_LEVEUP":        50,
		"PETPARAM_BOKI_SKILL_UPDATE":        51,
		"PETPARAM_BOKI_SKILL_IN_USE_UPDATE": 52,
		"PETPARAM_BOKI_SKILL_IN_USE_SET":    53,
	}
)

func (x PetParam) Enum() *PetParam {
	p := new(PetParam)
	*p = x
	return p
}

func (x PetParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PetParam) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[0].Descriptor()
}

func (PetParam) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[0]
}

func (x PetParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PetParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PetParam(num)
	return nil
}

// Deprecated: Use PetParam.Descriptor instead.
func (PetParam) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{0}
}

type EEmployType int32

const (
	EEmployType_EEMPLOYTYPE_MIN  EEmployType = 0
	EEmployType_EEMPLOYTYPE_DAY  EEmployType = 1
	EEmployType_EEMPLOYTYPE_WEEK EEmployType = 2
	EEmployType_EEMPLOYTYPE_MAX  EEmployType = 3
)

// Enum value maps for EEmployType.
var (
	EEmployType_name = map[int32]string{
		0: "EEMPLOYTYPE_MIN",
		1: "EEMPLOYTYPE_DAY",
		2: "EEMPLOYTYPE_WEEK",
		3: "EEMPLOYTYPE_MAX",
	}
	EEmployType_value = map[string]int32{
		"EEMPLOYTYPE_MIN":  0,
		"EEMPLOYTYPE_DAY":  1,
		"EEMPLOYTYPE_WEEK": 2,
		"EEMPLOYTYPE_MAX":  3,
	}
)

func (x EEmployType) Enum() *EEmployType {
	p := new(EEmployType)
	*p = x
	return p
}

func (x EEmployType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EEmployType) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[1].Descriptor()
}

func (EEmployType) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[1]
}

func (x EEmployType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EEmployType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EEmployType(num)
	return nil
}

// Deprecated: Use EEmployType.Descriptor instead.
func (EEmployType) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{1}
}

type EPetDataType int32

const (
	EPetDataType_EPETDATA_MIN            EPetDataType = 0
	EPetDataType_EPETDATA_LV             EPetDataType = 1
	EPetDataType_EPETDATA_EXP            EPetDataType = 2
	EPetDataType_EPETDATA_FRIENDLV       EPetDataType = 3
	EPetDataType_EPETDATA_FRIENDEXP      EPetDataType = 4
	EPetDataType_EPETDATA_REWARDEXP      EPetDataType = 5
	EPetDataType_EPETDATA_RELIVETIME     EPetDataType = 6
	EPetDataType_EPETDATA_TIME_HAPPLY    EPetDataType = 7
	EPetDataType_EPETDATA_TIME_EXCITE    EPetDataType = 8
	EPetDataType_EPETDATA_TIME_HAPPINESS EPetDataType = 9
	EPetDataType_EPETDATA_TOUCH_TICK     EPetDataType = 10
	EPetDataType_EPETDATA_TOUCH_COUNT    EPetDataType = 13
	EPetDataType_EPETDATA_FEED_TICK      EPetDataType = 11
	EPetDataType_EPETDATA_FEED_COUNT     EPetDataType = 12
	EPetDataType_EPETDATA_REWARD_COUNT   EPetDataType = 17
	EPetDataType_EPETDATA_BODY           EPetDataType = 18
	EPetDataType_EPETDATA_SKILL          EPetDataType = 19
	EPetDataType_EPETDATA_NAME           EPetDataType = 20
	EPetDataType_EPETDATA_SKILLSWITCH    EPetDataType = 21
	EPetDataType_EPETDATA_MAX            EPetDataType = 22
)

// Enum value maps for EPetDataType.
var (
	EPetDataType_name = map[int32]string{
		0:  "EPETDATA_MIN",
		1:  "EPETDATA_LV",
		2:  "EPETDATA_EXP",
		3:  "EPETDATA_FRIENDLV",
		4:  "EPETDATA_FRIENDEXP",
		5:  "EPETDATA_REWARDEXP",
		6:  "EPETDATA_RELIVETIME",
		7:  "EPETDATA_TIME_HAPPLY",
		8:  "EPETDATA_TIME_EXCITE",
		9:  "EPETDATA_TIME_HAPPINESS",
		10: "EPETDATA_TOUCH_TICK",
		13: "EPETDATA_TOUCH_COUNT",
		11: "EPETDATA_FEED_TICK",
		12: "EPETDATA_FEED_COUNT",
		17: "EPETDATA_REWARD_COUNT",
		18: "EPETDATA_BODY",
		19: "EPETDATA_SKILL",
		20: "EPETDATA_NAME",
		21: "EPETDATA_SKILLSWITCH",
		22: "EPETDATA_MAX",
	}
	EPetDataType_value = map[string]int32{
		"EPETDATA_MIN":            0,
		"EPETDATA_LV":             1,
		"EPETDATA_EXP":            2,
		"EPETDATA_FRIENDLV":       3,
		"EPETDATA_FRIENDEXP":      4,
		"EPETDATA_REWARDEXP":      5,
		"EPETDATA_RELIVETIME":     6,
		"EPETDATA_TIME_HAPPLY":    7,
		"EPETDATA_TIME_EXCITE":    8,
		"EPETDATA_TIME_HAPPINESS": 9,
		"EPETDATA_TOUCH_TICK":     10,
		"EPETDATA_TOUCH_COUNT":    13,
		"EPETDATA_FEED_TICK":      11,
		"EPETDATA_FEED_COUNT":     12,
		"EPETDATA_REWARD_COUNT":   17,
		"EPETDATA_BODY":           18,
		"EPETDATA_SKILL":          19,
		"EPETDATA_NAME":           20,
		"EPETDATA_SKILLSWITCH":    21,
		"EPETDATA_MAX":            22,
	}
)

func (x EPetDataType) Enum() *EPetDataType {
	p := new(EPetDataType)
	*p = x
	return p
}

func (x EPetDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[2].Descriptor()
}

func (EPetDataType) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[2]
}

func (x EPetDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPetDataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPetDataType(num)
	return nil
}

// Deprecated: Use EPetDataType.Descriptor instead.
func (EPetDataType) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{2}
}

type EPetEquipOper int32

const (
	EPetEquipOper_EPETEQUIPOPER_MIN    EPetEquipOper = 0
	EPetEquipOper_EPETEQUIPOPER_ON     EPetEquipOper = 1
	EPetEquipOper_EPETEQUIPOPER_OFF    EPetEquipOper = 2
	EPetEquipOper_EPETEQUIPOPER_BODY   EPetEquipOper = 3
	EPetEquipOper_EPETEQUIPOPER_DELETE EPetEquipOper = 4
	EPetEquipOper_EPETEQUIPOPER_MAX    EPetEquipOper = 5
)

// Enum value maps for EPetEquipOper.
var (
	EPetEquipOper_name = map[int32]string{
		0: "EPETEQUIPOPER_MIN",
		1: "EPETEQUIPOPER_ON",
		2: "EPETEQUIPOPER_OFF",
		3: "EPETEQUIPOPER_BODY",
		4: "EPETEQUIPOPER_DELETE",
		5: "EPETEQUIPOPER_MAX",
	}
	EPetEquipOper_value = map[string]int32{
		"EPETEQUIPOPER_MIN":    0,
		"EPETEQUIPOPER_ON":     1,
		"EPETEQUIPOPER_OFF":    2,
		"EPETEQUIPOPER_BODY":   3,
		"EPETEQUIPOPER_DELETE": 4,
		"EPETEQUIPOPER_MAX":    5,
	}
)

func (x EPetEquipOper) Enum() *EPetEquipOper {
	p := new(EPetEquipOper)
	*p = x
	return p
}

func (x EPetEquipOper) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetEquipOper) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[3].Descriptor()
}

func (EPetEquipOper) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[3]
}

func (x EPetEquipOper) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPetEquipOper) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPetEquipOper(num)
	return nil
}

// Deprecated: Use EPetEquipOper.Descriptor instead.
func (EPetEquipOper) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{3}
}

type EPetAdventureStatus int32

const (
	EPetAdventureStatus_EPETADVENTURESTATUS_MIN       EPetAdventureStatus = 0
	EPetAdventureStatus_EPETADVENTURESTATUS_CANACCEPT EPetAdventureStatus = 1
	EPetAdventureStatus_EPETADVENTURESTATUS_ACCEPT    EPetAdventureStatus = 2
	EPetAdventureStatus_EPETADVENTURESTATUS_COMPLETE  EPetAdventureStatus = 3
	EPetAdventureStatus_EPETADVENTURESTATUS_SUBMIT    EPetAdventureStatus = 4
	EPetAdventureStatus_EPETADVENTURESTATUS_MAX       EPetAdventureStatus = 5
)

// Enum value maps for EPetAdventureStatus.
var (
	EPetAdventureStatus_name = map[int32]string{
		0: "EPETADVENTURESTATUS_MIN",
		1: "EPETADVENTURESTATUS_CANACCEPT",
		2: "EPETADVENTURESTATUS_ACCEPT",
		3: "EPETADVENTURESTATUS_COMPLETE",
		4: "EPETADVENTURESTATUS_SUBMIT",
		5: "EPETADVENTURESTATUS_MAX",
	}
	EPetAdventureStatus_value = map[string]int32{
		"EPETADVENTURESTATUS_MIN":       0,
		"EPETADVENTURESTATUS_CANACCEPT": 1,
		"EPETADVENTURESTATUS_ACCEPT":    2,
		"EPETADVENTURESTATUS_COMPLETE":  3,
		"EPETADVENTURESTATUS_SUBMIT":    4,
		"EPETADVENTURESTATUS_MAX":       5,
	}
)

func (x EPetAdventureStatus) Enum() *EPetAdventureStatus {
	p := new(EPetAdventureStatus)
	*p = x
	return p
}

func (x EPetAdventureStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetAdventureStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[4].Descriptor()
}

func (EPetAdventureStatus) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[4]
}

func (x EPetAdventureStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPetAdventureStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPetAdventureStatus(num)
	return nil
}

// Deprecated: Use EPetAdventureStatus.Descriptor instead.
func (EPetAdventureStatus) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{4}
}

type EPetEfficiencyType int32

const (
	EPetEfficiencyType_EPETEFFICIENCY_MIN      EPetEfficiencyType = 0
	EPetEfficiencyType_EPETEFFICIENCY_REFINE   EPetEfficiencyType = 1
	EPetEfficiencyType_EPETEFFICIENCY_ENCHANT  EPetEfficiencyType = 2
	EPetEfficiencyType_EPETEFFICIENCY_STAR     EPetEfficiencyType = 3
	EPetEfficiencyType_EPETEFFICIENCY_TITLE    EPetEfficiencyType = 4
	EPetEfficiencyType_EPETEFFICIENCY_HEADWEAR EPetEfficiencyType = 5
	EPetEfficiencyType_EPETEFFICIENCY_CARD     EPetEfficiencyType = 6
	EPetEfficiencyType_EPETEFFICIENCY_MAX      EPetEfficiencyType = 7
)

// Enum value maps for EPetEfficiencyType.
var (
	EPetEfficiencyType_name = map[int32]string{
		0: "EPETEFFICIENCY_MIN",
		1: "EPETEFFICIENCY_REFINE",
		2: "EPETEFFICIENCY_ENCHANT",
		3: "EPETEFFICIENCY_STAR",
		4: "EPETEFFICIENCY_TITLE",
		5: "EPETEFFICIENCY_HEADWEAR",
		6: "EPETEFFICIENCY_CARD",
		7: "EPETEFFICIENCY_MAX",
	}
	EPetEfficiencyType_value = map[string]int32{
		"EPETEFFICIENCY_MIN":      0,
		"EPETEFFICIENCY_REFINE":   1,
		"EPETEFFICIENCY_ENCHANT":  2,
		"EPETEFFICIENCY_STAR":     3,
		"EPETEFFICIENCY_TITLE":    4,
		"EPETEFFICIENCY_HEADWEAR": 5,
		"EPETEFFICIENCY_CARD":     6,
		"EPETEFFICIENCY_MAX":      7,
	}
)

func (x EPetEfficiencyType) Enum() *EPetEfficiencyType {
	p := new(EPetEfficiencyType)
	*p = x
	return p
}

func (x EPetEfficiencyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetEfficiencyType) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[5].Descriptor()
}

func (EPetEfficiencyType) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[5]
}

func (x EPetEfficiencyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPetEfficiencyType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPetEfficiencyType(num)
	return nil
}

// Deprecated: Use EPetEfficiencyType.Descriptor instead.
func (EPetEfficiencyType) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{5}
}

type EWorkState int32

const (
	EWorkState_EWORKSTATE_MIN     EWorkState = 0
	EWorkState_EWORKSTATE_UNUSED  EWorkState = 1
	EWorkState_EWORKSTATE_WORKING EWorkState = 2
	EWorkState_EWORKSTATE_REST    EWorkState = 3
	EWorkState_EWORKSTATE_MAX     EWorkState = 4
)

// Enum value maps for EWorkState.
var (
	EWorkState_name = map[int32]string{
		0: "EWORKSTATE_MIN",
		1: "EWORKSTATE_UNUSED",
		2: "EWORKSTATE_WORKING",
		3: "EWORKSTATE_REST",
		4: "EWORKSTATE_MAX",
	}
	EWorkState_value = map[string]int32{
		"EWORKSTATE_MIN":     0,
		"EWORKSTATE_UNUSED":  1,
		"EWORKSTATE_WORKING": 2,
		"EWORKSTATE_REST":    3,
		"EWORKSTATE_MAX":     4,
	}
)

func (x EWorkState) Enum() *EWorkState {
	p := new(EWorkState)
	*p = x
	return p
}

func (x EWorkState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWorkState) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[6].Descriptor()
}

func (EWorkState) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[6]
}

func (x EWorkState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EWorkState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EWorkState(num)
	return nil
}

// Deprecated: Use EWorkState.Descriptor instead.
func (EWorkState) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{6}
}

type ECatEquipOper int32

const (
	ECatEquipOper_ECATEQUIPOPER_MIN ECatEquipOper = 0
	ECatEquipOper_ECATEQUIPOPER_ON  ECatEquipOper = 1
	ECatEquipOper_ECATEQUIPOPER_OFF ECatEquipOper = 2
	ECatEquipOper_ECATEQUIPOPER_MAX ECatEquipOper = 3
)

// Enum value maps for ECatEquipOper.
var (
	ECatEquipOper_name = map[int32]string{
		0: "ECATEQUIPOPER_MIN",
		1: "ECATEQUIPOPER_ON",
		2: "ECATEQUIPOPER_OFF",
		3: "ECATEQUIPOPER_MAX",
	}
	ECatEquipOper_value = map[string]int32{
		"ECATEQUIPOPER_MIN": 0,
		"ECATEQUIPOPER_ON":  1,
		"ECATEQUIPOPER_OFF": 2,
		"ECATEQUIPOPER_MAX": 3,
	}
)

func (x ECatEquipOper) Enum() *ECatEquipOper {
	p := new(ECatEquipOper)
	*p = x
	return p
}

func (x ECatEquipOper) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECatEquipOper) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[7].Descriptor()
}

func (ECatEquipOper) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[7]
}

func (x ECatEquipOper) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECatEquipOper) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECatEquipOper(num)
	return nil
}

// Deprecated: Use ECatEquipOper.Descriptor instead.
func (ECatEquipOper) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{7}
}

type EBoKiDataType int32

const (
	EBoKiDataType_EBOKIDATA_MIN         EBoKiDataType = 0
	EBoKiDataType_EBOKIDATA_EXP         EBoKiDataType = 1
	EBoKiDataType_EBOKIDATA_LEVEL       EBoKiDataType = 2
	EBoKiDataType_EBOKIDATA_STAGE       EBoKiDataType = 3
	EBoKiDataType_EBOKIDATA_RELIVE_TIME EBoKiDataType = 4
	EBoKiDataType_EBOKIDATA_MAX         EBoKiDataType = 5
)

// Enum value maps for EBoKiDataType.
var (
	EBoKiDataType_name = map[int32]string{
		0: "EBOKIDATA_MIN",
		1: "EBOKIDATA_EXP",
		2: "EBOKIDATA_LEVEL",
		3: "EBOKIDATA_STAGE",
		4: "EBOKIDATA_RELIVE_TIME",
		5: "EBOKIDATA_MAX",
	}
	EBoKiDataType_value = map[string]int32{
		"EBOKIDATA_MIN":         0,
		"EBOKIDATA_EXP":         1,
		"EBOKIDATA_LEVEL":       2,
		"EBOKIDATA_STAGE":       3,
		"EBOKIDATA_RELIVE_TIME": 4,
		"EBOKIDATA_MAX":         5,
	}
)

func (x EBoKiDataType) Enum() *EBoKiDataType {
	p := new(EBoKiDataType)
	*p = x
	return p
}

func (x EBoKiDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBoKiDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_ScenePet_proto_enumTypes[8].Descriptor()
}

func (EBoKiDataType) Type() protoreflect.EnumType {
	return &file_ScenePet_proto_enumTypes[8]
}

func (x EBoKiDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBoKiDataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBoKiDataType(num)
	return nil
}

// Deprecated: Use EBoKiDataType.Descriptor instead.
func (EBoKiDataType) EnumDescriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{8}
}

type PetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for PetData fields.
const (
	Default_PetData_Id = uint32(0)
)

func (x *PetData) Reset() {
	*x = PetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetData) ProtoMessage() {}

func (x *PetData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetData.ProtoReflect.Descriptor instead.
func (*PetData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{0}
}

func (x *PetData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_PetData_Id
}

type PetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *uint32    `protobuf:"varint,2,opt,name=param,def=1" json:"param,omitempty"`
	Datas []*PetData `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
}

// Default values for PetList fields.
const (
	Default_PetList_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetList_Param = uint32(1)
)

func (x *PetList) Reset() {
	*x = PetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetList) ProtoMessage() {}

func (x *PetList) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetList.ProtoReflect.Descriptor instead.
func (*PetList) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{1}
}

func (x *PetList) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetList_Cmd
}

func (x *PetList) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetList_Param
}

func (x *PetList) GetDatas() []*PetData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type WeaponPetSkillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *uint32  `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Unlockequips  []uint32 `protobuf:"varint,2,rep,name=unlockequips" json:"unlockequips,omitempty"`
	Unlockskills  []uint32 `protobuf:"varint,3,rep,name=unlockskills" json:"unlockskills,omitempty"`
	Fashionequips []uint32 `protobuf:"varint,4,rep,name=fashionequips" json:"fashionequips,omitempty"`
}

// Default values for WeaponPetSkillData fields.
const (
	Default_WeaponPetSkillData_Id = uint32(0)
)

func (x *WeaponPetSkillData) Reset() {
	*x = WeaponPetSkillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPetSkillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPetSkillData) ProtoMessage() {}

func (x *WeaponPetSkillData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPetSkillData.ProtoReflect.Descriptor instead.
func (*WeaponPetSkillData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{2}
}

func (x *WeaponPetSkillData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_WeaponPetSkillData_Id
}

func (x *WeaponPetSkillData) GetUnlockequips() []uint32 {
	if x != nil {
		return x.Unlockequips
	}
	return nil
}

func (x *WeaponPetSkillData) GetUnlockskills() []uint32 {
	if x != nil {
		return x.Unlockskills
	}
	return nil
}

func (x *WeaponPetSkillData) GetFashionequips() []uint32 {
	if x != nil {
		return x.Fashionequips
	}
	return nil
}

type WeaponPetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Hp         *uint32 `protobuf:"varint,2,opt,name=hp,def=0" json:"hp,omitempty"`
	Relivetime *uint32 `protobuf:"varint,3,opt,name=relivetime,def=0" json:"relivetime,omitempty"`
	Expiretime *uint32 `protobuf:"varint,4,opt,name=expiretime,def=0" json:"expiretime,omitempty"`
	Blive      *bool   `protobuf:"varint,5,opt,name=blive,def=0" json:"blive,omitempty"`
	Bactive    *bool   `protobuf:"varint,6,opt,name=bactive,def=0" json:"bactive,omitempty"`
	Handstatus *bool   `protobuf:"varint,7,opt,name=handstatus,def=0" json:"handstatus,omitempty"`
}

// Default values for WeaponPetData fields.
const (
	Default_WeaponPetData_Id         = uint32(0)
	Default_WeaponPetData_Hp         = uint32(0)
	Default_WeaponPetData_Relivetime = uint32(0)
	Default_WeaponPetData_Expiretime = uint32(0)
	Default_WeaponPetData_Blive      = bool(false)
	Default_WeaponPetData_Bactive    = bool(false)
	Default_WeaponPetData_Handstatus = bool(false)
)

func (x *WeaponPetData) Reset() {
	*x = WeaponPetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPetData) ProtoMessage() {}

func (x *WeaponPetData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPetData.ProtoReflect.Descriptor instead.
func (*WeaponPetData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{3}
}

func (x *WeaponPetData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_WeaponPetData_Id
}

func (x *WeaponPetData) GetHp() uint32 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return Default_WeaponPetData_Hp
}

func (x *WeaponPetData) GetRelivetime() uint32 {
	if x != nil && x.Relivetime != nil {
		return *x.Relivetime
	}
	return Default_WeaponPetData_Relivetime
}

func (x *WeaponPetData) GetExpiretime() uint32 {
	if x != nil && x.Expiretime != nil {
		return *x.Expiretime
	}
	return Default_WeaponPetData_Expiretime
}

func (x *WeaponPetData) GetBlive() bool {
	if x != nil && x.Blive != nil {
		return *x.Blive
	}
	return Default_WeaponPetData_Blive
}

func (x *WeaponPetData) GetBactive() bool {
	if x != nil && x.Bactive != nil {
		return *x.Bactive
	}
	return Default_WeaponPetData_Bactive
}

func (x *WeaponPetData) GetHandstatus() bool {
	if x != nil && x.Handstatus != nil {
		return *x.Handstatus
	}
	return Default_WeaponPetData_Handstatus
}

type FireCatPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=2" json:"param,omitempty"`
	Catid *uint32   `protobuf:"varint,3,opt,name=catid,def=0" json:"catid,omitempty"`
}

// Default values for FireCatPetCmd fields.
const (
	Default_FireCatPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_FireCatPetCmd_Param = PetParam_PETPARAM_FIRE_CAT
	Default_FireCatPetCmd_Catid = uint32(0)
)

func (x *FireCatPetCmd) Reset() {
	*x = FireCatPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireCatPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireCatPetCmd) ProtoMessage() {}

func (x *FireCatPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireCatPetCmd.ProtoReflect.Descriptor instead.
func (*FireCatPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{4}
}

func (x *FireCatPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FireCatPetCmd_Cmd
}

func (x *FireCatPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FireCatPetCmd_Param
}

func (x *FireCatPetCmd) GetCatid() uint32 {
	if x != nil && x.Catid != nil {
		return *x.Catid
	}
	return Default_FireCatPetCmd_Catid
}

type HireCatPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=3" json:"param,omitempty"`
	Catid *uint32      `protobuf:"varint,3,opt,name=catid,def=0" json:"catid,omitempty"`
	Etype *EEmployType `protobuf:"varint,4,opt,name=etype,enum=Cmd.EEmployType,def=1" json:"etype,omitempty"`
}

// Default values for HireCatPetCmd fields.
const (
	Default_HireCatPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_HireCatPetCmd_Param = PetParam_PETPARAM_HIRE_CAT
	Default_HireCatPetCmd_Catid = uint32(0)
	Default_HireCatPetCmd_Etype = EEmployType_EEMPLOYTYPE_DAY
)

func (x *HireCatPetCmd) Reset() {
	*x = HireCatPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HireCatPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HireCatPetCmd) ProtoMessage() {}

func (x *HireCatPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HireCatPetCmd.ProtoReflect.Descriptor instead.
func (*HireCatPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{5}
}

func (x *HireCatPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HireCatPetCmd_Cmd
}

func (x *HireCatPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HireCatPetCmd_Param
}

func (x *HireCatPetCmd) GetCatid() uint32 {
	if x != nil && x.Catid != nil {
		return *x.Catid
	}
	return Default_HireCatPetCmd_Catid
}

func (x *HireCatPetCmd) GetEtype() EEmployType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_HireCatPetCmd_Etype
}

type EggHatchPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=4" json:"param,omitempty"`
	Name  *string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Guid  *string   `protobuf:"bytes,4,opt,name=guid" json:"guid,omitempty"`
}

// Default values for EggHatchPetCmd fields.
const (
	Default_EggHatchPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_EggHatchPetCmd_Param = PetParam_PETPARAM_HATCH_EGG
)

func (x *EggHatchPetCmd) Reset() {
	*x = EggHatchPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EggHatchPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EggHatchPetCmd) ProtoMessage() {}

func (x *EggHatchPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EggHatchPetCmd.ProtoReflect.Descriptor instead.
func (*EggHatchPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{6}
}

func (x *EggHatchPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EggHatchPetCmd_Cmd
}

func (x *EggHatchPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EggHatchPetCmd_Param
}

func (x *EggHatchPetCmd) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EggHatchPetCmd) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type EggRestorePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=5" json:"param,omitempty"`
	Petid *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
}

// Default values for EggRestorePetCmd fields.
const (
	Default_EggRestorePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_EggRestorePetCmd_Param = PetParam_PETPARAM_RESTORE_EGG
	Default_EggRestorePetCmd_Petid = uint32(0)
)

func (x *EggRestorePetCmd) Reset() {
	*x = EggRestorePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EggRestorePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EggRestorePetCmd) ProtoMessage() {}

func (x *EggRestorePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EggRestorePetCmd.ProtoReflect.Descriptor instead.
func (*EggRestorePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{7}
}

func (x *EggRestorePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EggRestorePetCmd_Cmd
}

func (x *EggRestorePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EggRestorePetCmd_Param
}

func (x *EggRestorePetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_EggRestorePetCmd_Petid
}

type CatchValuePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param     *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=6" json:"param,omitempty"`
	Npcguid   *uint64   `protobuf:"varint,3,req,name=npcguid" json:"npcguid,omitempty"`
	Value     *uint32   `protobuf:"varint,4,opt,name=value,def=0" json:"value,omitempty"`
	FromNpcid *uint32   `protobuf:"varint,5,opt,name=from_npcid,json=fromNpcid,def=0" json:"from_npcid,omitempty"`
}

// Default values for CatchValuePetCmd fields.
const (
	Default_CatchValuePetCmd_Cmd       = Command_SCENE_USER_PET_PROTOCMD
	Default_CatchValuePetCmd_Param     = PetParam_PETPARAM_CATCH_VALUE_SYNC
	Default_CatchValuePetCmd_Value     = uint32(0)
	Default_CatchValuePetCmd_FromNpcid = uint32(0)
)

func (x *CatchValuePetCmd) Reset() {
	*x = CatchValuePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchValuePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchValuePetCmd) ProtoMessage() {}

func (x *CatchValuePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchValuePetCmd.ProtoReflect.Descriptor instead.
func (*CatchValuePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{8}
}

func (x *CatchValuePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatchValuePetCmd_Cmd
}

func (x *CatchValuePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatchValuePetCmd_Param
}

func (x *CatchValuePetCmd) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return 0
}

func (x *CatchValuePetCmd) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_CatchValuePetCmd_Value
}

func (x *CatchValuePetCmd) GetFromNpcid() uint32 {
	if x != nil && x.FromNpcid != nil {
		return *x.FromNpcid
	}
	return Default_CatchValuePetCmd_FromNpcid
}

type CatchResultPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=7" json:"param,omitempty"`
	Success *bool     `protobuf:"varint,3,opt,name=success,def=0" json:"success,omitempty"`
	Npcguid *uint64   `protobuf:"varint,4,opt,name=npcguid,def=0" json:"npcguid,omitempty"`
}

// Default values for CatchResultPetCmd fields.
const (
	Default_CatchResultPetCmd_Cmd     = Command_SCENE_USER_PET_PROTOCMD
	Default_CatchResultPetCmd_Param   = PetParam_PETPARAM_CATCH_RESULT
	Default_CatchResultPetCmd_Success = bool(false)
	Default_CatchResultPetCmd_Npcguid = uint64(0)
)

func (x *CatchResultPetCmd) Reset() {
	*x = CatchResultPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchResultPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchResultPetCmd) ProtoMessage() {}

func (x *CatchResultPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchResultPetCmd.ProtoReflect.Descriptor instead.
func (*CatchResultPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{9}
}

func (x *CatchResultPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatchResultPetCmd_Cmd
}

func (x *CatchResultPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatchResultPetCmd_Param
}

func (x *CatchResultPetCmd) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return Default_CatchResultPetCmd_Success
}

func (x *CatchResultPetCmd) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return Default_CatchResultPetCmd_Npcguid
}

type UserPetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basedata *EggData `protobuf:"bytes,1,opt,name=basedata" json:"basedata,omitempty"`
	Inhand   *bool    `protobuf:"varint,2,opt,name=inhand,def=0" json:"inhand,omitempty"`
}

// Default values for UserPetData fields.
const (
	Default_UserPetData_Inhand = bool(false)
)

func (x *UserPetData) Reset() {
	*x = UserPetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPetData) ProtoMessage() {}

func (x *UserPetData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPetData.ProtoReflect.Descriptor instead.
func (*UserPetData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{10}
}

func (x *UserPetData) GetBasedata() *EggData {
	if x != nil {
		return x.Basedata
	}
	return nil
}

func (x *UserPetData) GetInhand() bool {
	if x != nil && x.Inhand != nil {
		return *x.Inhand
	}
	return Default_UserPetData_Inhand
}

type CatchPetPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=8" json:"param,omitempty"`
	Npcguid *uint64   `protobuf:"varint,3,opt,name=npcguid,def=0" json:"npcguid,omitempty"`
	Isstop  *bool     `protobuf:"varint,4,opt,name=isstop,def=0" json:"isstop,omitempty"`
}

// Default values for CatchPetPetCmd fields.
const (
	Default_CatchPetPetCmd_Cmd     = Command_SCENE_USER_PET_PROTOCMD
	Default_CatchPetPetCmd_Param   = PetParam_PETPARAM_CATCH_PET
	Default_CatchPetPetCmd_Npcguid = uint64(0)
	Default_CatchPetPetCmd_Isstop  = bool(false)
)

func (x *CatchPetPetCmd) Reset() {
	*x = CatchPetPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchPetPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchPetPetCmd) ProtoMessage() {}

func (x *CatchPetPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchPetPetCmd.ProtoReflect.Descriptor instead.
func (*CatchPetPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{11}
}

func (x *CatchPetPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatchPetPetCmd_Cmd
}

func (x *CatchPetPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatchPetPetCmd_Param
}

func (x *CatchPetPetCmd) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return Default_CatchPetPetCmd_Npcguid
}

func (x *CatchPetPetCmd) GetIsstop() bool {
	if x != nil && x.Isstop != nil {
		return *x.Isstop
	}
	return Default_CatchPetPetCmd_Isstop
}

type CatchPetGiftPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=12" json:"param,omitempty"`
	Npcguid *uint64   `protobuf:"varint,3,opt,name=npcguid,def=0" json:"npcguid,omitempty"`
}

// Default values for CatchPetGiftPetCmd fields.
const (
	Default_CatchPetGiftPetCmd_Cmd     = Command_SCENE_USER_PET_PROTOCMD
	Default_CatchPetGiftPetCmd_Param   = PetParam_PETPARAM_CATCH_GIFT
	Default_CatchPetGiftPetCmd_Npcguid = uint64(0)
)

func (x *CatchPetGiftPetCmd) Reset() {
	*x = CatchPetGiftPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchPetGiftPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchPetGiftPetCmd) ProtoMessage() {}

func (x *CatchPetGiftPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchPetGiftPetCmd.ProtoReflect.Descriptor instead.
func (*CatchPetGiftPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{12}
}

func (x *CatchPetGiftPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatchPetGiftPetCmd_Cmd
}

func (x *CatchPetGiftPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatchPetGiftPetCmd_Param
}

func (x *CatchPetGiftPetCmd) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return Default_CatchPetGiftPetCmd_Npcguid
}

type PetMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype  *EPetDataType `protobuf:"varint,1,opt,name=etype,enum=Cmd.EPetDataType,def=0" json:"etype,omitempty"`
	Value  *uint64       `protobuf:"varint,2,opt,name=value,def=0" json:"value,omitempty"`
	Values []uint32      `protobuf:"varint,3,rep,name=values" json:"values,omitempty"`
	Data   *string       `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

// Default values for PetMemberData fields.
const (
	Default_PetMemberData_Etype = EPetDataType_EPETDATA_MIN
	Default_PetMemberData_Value = uint64(0)
)

func (x *PetMemberData) Reset() {
	*x = PetMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetMemberData) ProtoMessage() {}

func (x *PetMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetMemberData.ProtoReflect.Descriptor instead.
func (*PetMemberData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{13}
}

func (x *PetMemberData) GetEtype() EPetDataType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_PetMemberData_Etype
}

func (x *PetMemberData) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_PetMemberData_Value
}

func (x *PetMemberData) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *PetMemberData) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type PetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid          *uint64     `protobuf:"varint,1,opt,name=guid,def=0" json:"guid,omitempty"`
	Exp           *uint64     `protobuf:"varint,2,opt,name=exp,def=0" json:"exp,omitempty"`
	Friendexp     *uint64     `protobuf:"varint,3,opt,name=friendexp,def=0" json:"friendexp,omitempty"`
	Rewardexp     *uint64     `protobuf:"varint,4,opt,name=rewardexp,def=0" json:"rewardexp,omitempty"`
	Petid         *uint32     `protobuf:"varint,5,req,name=petid" json:"petid,omitempty"`
	Name          *string     `protobuf:"bytes,6,req,name=name" json:"name,omitempty"`
	Lv            *uint32     `protobuf:"varint,7,opt,name=lv,def=0" json:"lv,omitempty"`
	Friendlv      *uint32     `protobuf:"varint,8,opt,name=friendlv,def=0" json:"friendlv,omitempty"`
	Relivetime    *uint32     `protobuf:"varint,9,opt,name=relivetime,def=0" json:"relivetime,omitempty"`
	Body          *uint32     `protobuf:"varint,10,opt,name=body,def=0" json:"body,omitempty"`
	TimeHapply    *uint32     `protobuf:"varint,11,opt,name=time_happly,json=timeHapply,def=0" json:"time_happly,omitempty"`
	TimeExcite    *uint32     `protobuf:"varint,12,opt,name=time_excite,json=timeExcite,def=0" json:"time_excite,omitempty"`
	TimeHappiness *uint32     `protobuf:"varint,13,opt,name=time_happiness,json=timeHappiness,def=0" json:"time_happiness,omitempty"`
	UnlockEquip   []uint32    `protobuf:"varint,14,rep,name=unlock_equip,json=unlockEquip" json:"unlock_equip,omitempty"`
	UnlockBody    []uint32    `protobuf:"varint,15,rep,name=unlock_body,json=unlockBody" json:"unlock_body,omitempty"`
	Skills        []uint32    `protobuf:"varint,16,rep,name=skills" json:"skills,omitempty"`
	Equips        []*ItemData `protobuf:"bytes,17,rep,name=equips" json:"equips,omitempty"`
	Skilloff      *bool       `protobuf:"varint,18,opt,name=skilloff,def=0" json:"skilloff,omitempty"`
}

// Default values for PetInfo fields.
const (
	Default_PetInfo_Guid          = uint64(0)
	Default_PetInfo_Exp           = uint64(0)
	Default_PetInfo_Friendexp     = uint64(0)
	Default_PetInfo_Rewardexp     = uint64(0)
	Default_PetInfo_Lv            = uint32(0)
	Default_PetInfo_Friendlv      = uint32(0)
	Default_PetInfo_Relivetime    = uint32(0)
	Default_PetInfo_Body          = uint32(0)
	Default_PetInfo_TimeHapply    = uint32(0)
	Default_PetInfo_TimeExcite    = uint32(0)
	Default_PetInfo_TimeHappiness = uint32(0)
	Default_PetInfo_Skilloff      = bool(false)
)

func (x *PetInfo) Reset() {
	*x = PetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetInfo) ProtoMessage() {}

func (x *PetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetInfo.ProtoReflect.Descriptor instead.
func (*PetInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{14}
}

func (x *PetInfo) GetGuid() uint64 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return Default_PetInfo_Guid
}

func (x *PetInfo) GetExp() uint64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return Default_PetInfo_Exp
}

func (x *PetInfo) GetFriendexp() uint64 {
	if x != nil && x.Friendexp != nil {
		return *x.Friendexp
	}
	return Default_PetInfo_Friendexp
}

func (x *PetInfo) GetRewardexp() uint64 {
	if x != nil && x.Rewardexp != nil {
		return *x.Rewardexp
	}
	return Default_PetInfo_Rewardexp
}

func (x *PetInfo) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

func (x *PetInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PetInfo) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_PetInfo_Lv
}

func (x *PetInfo) GetFriendlv() uint32 {
	if x != nil && x.Friendlv != nil {
		return *x.Friendlv
	}
	return Default_PetInfo_Friendlv
}

func (x *PetInfo) GetRelivetime() uint32 {
	if x != nil && x.Relivetime != nil {
		return *x.Relivetime
	}
	return Default_PetInfo_Relivetime
}

func (x *PetInfo) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return Default_PetInfo_Body
}

func (x *PetInfo) GetTimeHapply() uint32 {
	if x != nil && x.TimeHapply != nil {
		return *x.TimeHapply
	}
	return Default_PetInfo_TimeHapply
}

func (x *PetInfo) GetTimeExcite() uint32 {
	if x != nil && x.TimeExcite != nil {
		return *x.TimeExcite
	}
	return Default_PetInfo_TimeExcite
}

func (x *PetInfo) GetTimeHappiness() uint32 {
	if x != nil && x.TimeHappiness != nil {
		return *x.TimeHappiness
	}
	return Default_PetInfo_TimeHappiness
}

func (x *PetInfo) GetUnlockEquip() []uint32 {
	if x != nil {
		return x.UnlockEquip
	}
	return nil
}

func (x *PetInfo) GetUnlockBody() []uint32 {
	if x != nil {
		return x.UnlockBody
	}
	return nil
}

func (x *PetInfo) GetSkills() []uint32 {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *PetInfo) GetEquips() []*ItemData {
	if x != nil {
		return x.Equips
	}
	return nil
}

func (x *PetInfo) GetSkilloff() bool {
	if x != nil && x.Skilloff != nil {
		return *x.Skilloff
	}
	return Default_PetInfo_Skilloff
}

type PetExtraBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Petid *uint32  `protobuf:"varint,1,opt,name=petid,def=0" json:"petid,omitempty"`
	Bodys []uint32 `protobuf:"varint,2,rep,name=bodys" json:"bodys,omitempty"`
}

// Default values for PetExtraBody fields.
const (
	Default_PetExtraBody_Petid = uint32(0)
)

func (x *PetExtraBody) Reset() {
	*x = PetExtraBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetExtraBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetExtraBody) ProtoMessage() {}

func (x *PetExtraBody) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetExtraBody.ProtoReflect.Descriptor instead.
func (*PetExtraBody) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{15}
}

func (x *PetExtraBody) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_PetExtraBody_Petid
}

func (x *PetExtraBody) GetBodys() []uint32 {
	if x != nil {
		return x.Bodys
	}
	return nil
}

type PetInfoPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=9" json:"param,omitempty"`
	Petinfo []*PetInfo `protobuf:"bytes,3,rep,name=petinfo" json:"petinfo,omitempty"`
}

// Default values for PetInfoPetCmd fields.
const (
	Default_PetInfoPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetInfoPetCmd_Param = PetParam_PETPARAM_PETINFO
)

func (x *PetInfoPetCmd) Reset() {
	*x = PetInfoPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetInfoPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetInfoPetCmd) ProtoMessage() {}

func (x *PetInfoPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetInfoPetCmd.ProtoReflect.Descriptor instead.
func (*PetInfoPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{16}
}

func (x *PetInfoPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetInfoPetCmd_Cmd
}

func (x *PetInfoPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetInfoPetCmd_Param
}

func (x *PetInfoPetCmd) GetPetinfo() []*PetInfo {
	if x != nil {
		return x.Petinfo
	}
	return nil
}

type PetInfoUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=10" json:"param,omitempty"`
	Petid *uint32          `protobuf:"varint,3,req,name=petid" json:"petid,omitempty"`
	Datas []*PetMemberData `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
}

// Default values for PetInfoUpdatePetCmd fields.
const (
	Default_PetInfoUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetInfoUpdatePetCmd_Param = PetParam_PETPARAM_PETINFO_UPDATE
)

func (x *PetInfoUpdatePetCmd) Reset() {
	*x = PetInfoUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetInfoUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetInfoUpdatePetCmd) ProtoMessage() {}

func (x *PetInfoUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetInfoUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*PetInfoUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{17}
}

func (x *PetInfoUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetInfoUpdatePetCmd_Cmd
}

func (x *PetInfoUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetInfoUpdatePetCmd_Param
}

func (x *PetInfoUpdatePetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

func (x *PetInfoUpdatePetCmd) GetDatas() []*PetMemberData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type PetOffPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=11" json:"param,omitempty"`
	Petid *uint32   `protobuf:"varint,3,req,name=petid" json:"petid,omitempty"`
}

// Default values for PetOffPetCmd fields.
const (
	Default_PetOffPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetOffPetCmd_Param = PetParam_PETPARAM_OFF_PET
)

func (x *PetOffPetCmd) Reset() {
	*x = PetOffPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetOffPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetOffPetCmd) ProtoMessage() {}

func (x *PetOffPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetOffPetCmd.ProtoReflect.Descriptor instead.
func (*PetOffPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{18}
}

func (x *PetOffPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetOffPetCmd_Cmd
}

func (x *PetOffPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetOffPetCmd_Param
}

func (x *PetOffPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

type GetGiftPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=13" json:"param,omitempty"`
	Petid *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
}

// Default values for GetGiftPetCmd fields.
const (
	Default_GetGiftPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_GetGiftPetCmd_Param = PetParam_PETPARAM_GET_GIFT
	Default_GetGiftPetCmd_Petid = uint32(0)
)

func (x *GetGiftPetCmd) Reset() {
	*x = GetGiftPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGiftPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGiftPetCmd) ProtoMessage() {}

func (x *GetGiftPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGiftPetCmd.ProtoReflect.Descriptor instead.
func (*GetGiftPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{19}
}

func (x *GetGiftPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetGiftPetCmd_Cmd
}

func (x *GetGiftPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetGiftPetCmd_Param
}

func (x *GetGiftPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_GetGiftPetCmd_Petid
}

type EquipOperPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=14" json:"param,omitempty"`
	Oper  *EPetEquipOper `protobuf:"varint,3,opt,name=oper,enum=Cmd.EPetEquipOper,def=0" json:"oper,omitempty"`
	Petid *uint32        `protobuf:"varint,4,opt,name=petid,def=0" json:"petid,omitempty"`
	Guid  *string        `protobuf:"bytes,5,opt,name=guid" json:"guid,omitempty"`
}

// Default values for EquipOperPetCmd fields.
const (
	Default_EquipOperPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_EquipOperPetCmd_Param = PetParam_PETPARAM_EQUIP_OPER
	Default_EquipOperPetCmd_Oper  = EPetEquipOper_EPETEQUIPOPER_MIN
	Default_EquipOperPetCmd_Petid = uint32(0)
)

func (x *EquipOperPetCmd) Reset() {
	*x = EquipOperPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipOperPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipOperPetCmd) ProtoMessage() {}

func (x *EquipOperPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipOperPetCmd.ProtoReflect.Descriptor instead.
func (*EquipOperPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{20}
}

func (x *EquipOperPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EquipOperPetCmd_Cmd
}

func (x *EquipOperPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EquipOperPetCmd_Param
}

func (x *EquipOperPetCmd) GetOper() EPetEquipOper {
	if x != nil && x.Oper != nil {
		return *x.Oper
	}
	return Default_EquipOperPetCmd_Oper
}

func (x *EquipOperPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_EquipOperPetCmd_Petid
}

func (x *EquipOperPetCmd) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type EquipUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=15" json:"param,omitempty"`
	Petid  *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
	Update *ItemData `protobuf:"bytes,4,opt,name=update" json:"update,omitempty"`
	Del    *string   `protobuf:"bytes,5,opt,name=del" json:"del,omitempty"`
}

// Default values for EquipUpdatePetCmd fields.
const (
	Default_EquipUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_EquipUpdatePetCmd_Param = PetParam_PETPARAM_EQUIP_UPDATE
	Default_EquipUpdatePetCmd_Petid = uint32(0)
)

func (x *EquipUpdatePetCmd) Reset() {
	*x = EquipUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipUpdatePetCmd) ProtoMessage() {}

func (x *EquipUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*EquipUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{21}
}

func (x *EquipUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EquipUpdatePetCmd_Cmd
}

func (x *EquipUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EquipUpdatePetCmd_Param
}

func (x *EquipUpdatePetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_EquipUpdatePetCmd_Petid
}

func (x *EquipUpdatePetCmd) GetUpdate() *ItemData {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *EquipUpdatePetCmd) GetDel() string {
	if x != nil && x.Del != nil {
		return *x.Del
	}
	return ""
}

type PetAdventureStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step  *uint32     `protobuf:"varint,1,opt,name=step,def=0" json:"step,omitempty"`
	Items []*ItemData `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

// Default values for PetAdventureStep fields.
const (
	Default_PetAdventureStep_Step = uint32(0)
)

func (x *PetAdventureStep) Reset() {
	*x = PetAdventureStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAdventureStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAdventureStep) ProtoMessage() {}

func (x *PetAdventureStep) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAdventureStep.ProtoReflect.Descriptor instead.
func (*PetAdventureStep) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{22}
}

func (x *PetAdventureStep) GetStep() uint32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return Default_PetAdventureStep_Step
}

func (x *PetAdventureStep) GetItems() []*ItemData {
	if x != nil {
		return x.Items
	}
	return nil
}

type PetEfficiencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype  *EPetEfficiencyType `protobuf:"varint,1,req,name=etype,enum=Cmd.EPetEfficiencyType" json:"etype,omitempty"`
	Fvalue *uint32             `protobuf:"varint,2,opt,name=fvalue" json:"fvalue,omitempty"`
}

func (x *PetEfficiencyInfo) Reset() {
	*x = PetEfficiencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetEfficiencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetEfficiencyInfo) ProtoMessage() {}

func (x *PetEfficiencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetEfficiencyInfo.ProtoReflect.Descriptor instead.
func (*PetEfficiencyInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{23}
}

func (x *PetEfficiencyInfo) GetEtype() EPetEfficiencyType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return EPetEfficiencyType_EPETEFFICIENCY_MIN
}

func (x *PetEfficiencyInfo) GetFvalue() uint32 {
	if x != nil && x.Fvalue != nil {
		return *x.Fvalue
	}
	return 0
}

type PetMonsterRewardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monsterid *uint32     `protobuf:"varint,1,opt,name=monsterid,def=0" json:"monsterid,omitempty"`
	Items     []*ItemData `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

// Default values for PetMonsterRewardInfo fields.
const (
	Default_PetMonsterRewardInfo_Monsterid = uint32(0)
)

func (x *PetMonsterRewardInfo) Reset() {
	*x = PetMonsterRewardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetMonsterRewardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetMonsterRewardInfo) ProtoMessage() {}

func (x *PetMonsterRewardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetMonsterRewardInfo.ProtoReflect.Descriptor instead.
func (*PetMonsterRewardInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{24}
}

func (x *PetMonsterRewardInfo) GetMonsterid() uint32 {
	if x != nil && x.Monsterid != nil {
		return *x.Monsterid
	}
	return Default_PetMonsterRewardInfo_Monsterid
}

func (x *PetMonsterRewardInfo) GetItems() []*ItemData {
	if x != nil {
		return x.Items
	}
	return nil
}

type PetAdventureItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *uint32                 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Starttime       *uint32                 `protobuf:"varint,2,opt,name=starttime,def=0" json:"starttime,omitempty"`
	Status          *EPetAdventureStatus    `protobuf:"varint,3,opt,name=status,enum=Cmd.EPetAdventureStatus,def=0" json:"status,omitempty"`
	Eggs            []*ItemData             `protobuf:"bytes,4,rep,name=eggs" json:"eggs,omitempty"`
	Steps           []*PetAdventureStep     `protobuf:"bytes,5,rep,name=steps" json:"steps,omitempty"`
	Raresreward     []*ItemData             `protobuf:"bytes,6,rep,name=raresreward" json:"raresreward,omitempty"`
	Specid          *uint32                 `protobuf:"varint,7,opt,name=specid,def=0" json:"specid,omitempty"`
	Eff             []*PetEfficiencyInfo    `protobuf:"bytes,8,rep,name=eff" json:"eff,omitempty"`
	Rewardinfo      []*PetMonsterRewardInfo `protobuf:"bytes,9,rep,name=rewardinfo" json:"rewardinfo,omitempty"`
	Extrarewardinfo []*ItemData             `protobuf:"bytes,10,rep,name=extrarewardinfo" json:"extrarewardinfo,omitempty"`
	Limitstart      *uint32                 `protobuf:"varint,11,opt,name=limitstart,def=0" json:"limitstart,omitempty"`
	Limitend        *uint32                 `protobuf:"varint,12,opt,name=limitend,def=0" json:"limitend,omitempty"`
}

// Default values for PetAdventureItem fields.
const (
	Default_PetAdventureItem_Id         = uint32(0)
	Default_PetAdventureItem_Starttime  = uint32(0)
	Default_PetAdventureItem_Status     = EPetAdventureStatus_EPETADVENTURESTATUS_MIN
	Default_PetAdventureItem_Specid     = uint32(0)
	Default_PetAdventureItem_Limitstart = uint32(0)
	Default_PetAdventureItem_Limitend   = uint32(0)
)

func (x *PetAdventureItem) Reset() {
	*x = PetAdventureItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAdventureItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAdventureItem) ProtoMessage() {}

func (x *PetAdventureItem) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAdventureItem.ProtoReflect.Descriptor instead.
func (*PetAdventureItem) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{25}
}

func (x *PetAdventureItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_PetAdventureItem_Id
}

func (x *PetAdventureItem) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return Default_PetAdventureItem_Starttime
}

func (x *PetAdventureItem) GetStatus() EPetAdventureStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_PetAdventureItem_Status
}

func (x *PetAdventureItem) GetEggs() []*ItemData {
	if x != nil {
		return x.Eggs
	}
	return nil
}

func (x *PetAdventureItem) GetSteps() []*PetAdventureStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *PetAdventureItem) GetRaresreward() []*ItemData {
	if x != nil {
		return x.Raresreward
	}
	return nil
}

func (x *PetAdventureItem) GetSpecid() uint32 {
	if x != nil && x.Specid != nil {
		return *x.Specid
	}
	return Default_PetAdventureItem_Specid
}

func (x *PetAdventureItem) GetEff() []*PetEfficiencyInfo {
	if x != nil {
		return x.Eff
	}
	return nil
}

func (x *PetAdventureItem) GetRewardinfo() []*PetMonsterRewardInfo {
	if x != nil {
		return x.Rewardinfo
	}
	return nil
}

func (x *PetAdventureItem) GetExtrarewardinfo() []*ItemData {
	if x != nil {
		return x.Extrarewardinfo
	}
	return nil
}

func (x *PetAdventureItem) GetLimitstart() uint32 {
	if x != nil && x.Limitstart != nil {
		return *x.Limitstart
	}
	return Default_PetAdventureItem_Limitstart
}

func (x *PetAdventureItem) GetLimitend() uint32 {
	if x != nil && x.Limitend != nil {
		return *x.Limitend
	}
	return Default_PetAdventureItem_Limitend
}

type PetAdventureTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Times *uint32 `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
}

func (x *PetAdventureTimes) Reset() {
	*x = PetAdventureTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAdventureTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAdventureTimes) ProtoMessage() {}

func (x *PetAdventureTimes) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAdventureTimes.ProtoReflect.Descriptor instead.
func (*PetAdventureTimes) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{26}
}

func (x *PetAdventureTimes) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PetAdventureTimes) GetTimes() uint32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type QueryPetAdventureListPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command             `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam            `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=16" json:"param,omitempty"`
	Items []*PetAdventureItem  `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	Times []*PetAdventureTimes `protobuf:"bytes,4,rep,name=times" json:"times,omitempty"`
	Isend *bool                `protobuf:"varint,5,opt,name=isend" json:"isend,omitempty"`
}

// Default values for QueryPetAdventureListPetCmd fields.
const (
	Default_QueryPetAdventureListPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_QueryPetAdventureListPetCmd_Param = PetParam_PETPARAM_ADVENTURE_QUERYLIST
)

func (x *QueryPetAdventureListPetCmd) Reset() {
	*x = QueryPetAdventureListPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPetAdventureListPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPetAdventureListPetCmd) ProtoMessage() {}

func (x *QueryPetAdventureListPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPetAdventureListPetCmd.ProtoReflect.Descriptor instead.
func (*QueryPetAdventureListPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{27}
}

func (x *QueryPetAdventureListPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryPetAdventureListPetCmd_Cmd
}

func (x *QueryPetAdventureListPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryPetAdventureListPetCmd_Param
}

func (x *QueryPetAdventureListPetCmd) GetItems() []*PetAdventureItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *QueryPetAdventureListPetCmd) GetTimes() []*PetAdventureTimes {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *QueryPetAdventureListPetCmd) GetIsend() bool {
	if x != nil && x.Isend != nil {
		return *x.Isend
	}
	return false
}

type PetAdventureResultNtfPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam          `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=17" json:"param,omitempty"`
	Item  *PetAdventureItem  `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	Times *PetAdventureTimes `protobuf:"bytes,4,opt,name=times" json:"times,omitempty"`
}

// Default values for PetAdventureResultNtfPetCmd fields.
const (
	Default_PetAdventureResultNtfPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetAdventureResultNtfPetCmd_Param = PetParam_PETPARAM_ADVENTURE_RESULTNTF
)

func (x *PetAdventureResultNtfPetCmd) Reset() {
	*x = PetAdventureResultNtfPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAdventureResultNtfPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAdventureResultNtfPetCmd) ProtoMessage() {}

func (x *PetAdventureResultNtfPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAdventureResultNtfPetCmd.ProtoReflect.Descriptor instead.
func (*PetAdventureResultNtfPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{28}
}

func (x *PetAdventureResultNtfPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetAdventureResultNtfPetCmd_Cmd
}

func (x *PetAdventureResultNtfPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetAdventureResultNtfPetCmd_Param
}

func (x *PetAdventureResultNtfPetCmd) GetItem() *PetAdventureItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PetAdventureResultNtfPetCmd) GetTimes() *PetAdventureTimes {
	if x != nil {
		return x.Times
	}
	return nil
}

type StartAdventurePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param     *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=18" json:"param,omitempty"`
	Id        *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Petids    []string  `protobuf:"bytes,4,rep,name=petids" json:"petids,omitempty"`
	Specid    *uint32   `protobuf:"varint,5,opt,name=specid,def=0" json:"specid,omitempty"`
	Useticket *bool     `protobuf:"varint,6,opt,name=useticket,def=0" json:"useticket,omitempty"`
}

// Default values for StartAdventurePetCmd fields.
const (
	Default_StartAdventurePetCmd_Cmd       = Command_SCENE_USER_PET_PROTOCMD
	Default_StartAdventurePetCmd_Param     = PetParam_PETPARAM_ADVENTURE_START
	Default_StartAdventurePetCmd_Id        = uint32(0)
	Default_StartAdventurePetCmd_Specid    = uint32(0)
	Default_StartAdventurePetCmd_Useticket = bool(false)
)

func (x *StartAdventurePetCmd) Reset() {
	*x = StartAdventurePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAdventurePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAdventurePetCmd) ProtoMessage() {}

func (x *StartAdventurePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAdventurePetCmd.ProtoReflect.Descriptor instead.
func (*StartAdventurePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{29}
}

func (x *StartAdventurePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StartAdventurePetCmd_Cmd
}

func (x *StartAdventurePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StartAdventurePetCmd_Param
}

func (x *StartAdventurePetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_StartAdventurePetCmd_Id
}

func (x *StartAdventurePetCmd) GetPetids() []string {
	if x != nil {
		return x.Petids
	}
	return nil
}

func (x *StartAdventurePetCmd) GetSpecid() uint32 {
	if x != nil && x.Specid != nil {
		return *x.Specid
	}
	return Default_StartAdventurePetCmd_Specid
}

func (x *StartAdventurePetCmd) GetUseticket() bool {
	if x != nil && x.Useticket != nil {
		return *x.Useticket
	}
	return Default_StartAdventurePetCmd_Useticket
}

type GetAdventureRewardPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=19" json:"param,omitempty"`
	Id    *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for GetAdventureRewardPetCmd fields.
const (
	Default_GetAdventureRewardPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_GetAdventureRewardPetCmd_Param = PetParam_PETPARAM_ADVENTURE_GETREWARD
	Default_GetAdventureRewardPetCmd_Id    = uint32(0)
)

func (x *GetAdventureRewardPetCmd) Reset() {
	*x = GetAdventureRewardPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdventureRewardPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdventureRewardPetCmd) ProtoMessage() {}

func (x *GetAdventureRewardPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdventureRewardPetCmd.ProtoReflect.Descriptor instead.
func (*GetAdventureRewardPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{30}
}

func (x *GetAdventureRewardPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetAdventureRewardPetCmd_Cmd
}

func (x *GetAdventureRewardPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetAdventureRewardPetCmd_Param
}

func (x *GetAdventureRewardPetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_GetAdventureRewardPetCmd_Id
}

type QueryBattlePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=20" json:"param,omitempty"`
	Pets  []*ItemData `protobuf:"bytes,3,rep,name=pets" json:"pets,omitempty"`
}

// Default values for QueryBattlePetCmd fields.
const (
	Default_QueryBattlePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_QueryBattlePetCmd_Param = PetParam_PETPARAM_ADVENTURE_QUERYBATTLEPET
)

func (x *QueryBattlePetCmd) Reset() {
	*x = QueryBattlePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBattlePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBattlePetCmd) ProtoMessage() {}

func (x *QueryBattlePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBattlePetCmd.ProtoReflect.Descriptor instead.
func (*QueryBattlePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{31}
}

func (x *QueryBattlePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryBattlePetCmd_Cmd
}

func (x *QueryBattlePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryBattlePetCmd_Param
}

func (x *QueryBattlePetCmd) GetPets() []*ItemData {
	if x != nil {
		return x.Pets
	}
	return nil
}

type HandPetPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=21" json:"param,omitempty"`
	Petguid *uint64   `protobuf:"varint,3,req,name=petguid" json:"petguid,omitempty"`
	Breakup *bool     `protobuf:"varint,4,opt,name=breakup,def=0" json:"breakup,omitempty"`
}

// Default values for HandPetPetCmd fields.
const (
	Default_HandPetPetCmd_Cmd     = Command_SCENE_USER_PET_PROTOCMD
	Default_HandPetPetCmd_Param   = PetParam_PETPARAM_INVITE_HAND
	Default_HandPetPetCmd_Breakup = bool(false)
)

func (x *HandPetPetCmd) Reset() {
	*x = HandPetPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandPetPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandPetPetCmd) ProtoMessage() {}

func (x *HandPetPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandPetPetCmd.ProtoReflect.Descriptor instead.
func (*HandPetPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{32}
}

func (x *HandPetPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HandPetPetCmd_Cmd
}

func (x *HandPetPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HandPetPetCmd_Param
}

func (x *HandPetPetCmd) GetPetguid() uint64 {
	if x != nil && x.Petguid != nil {
		return *x.Petguid
	}
	return 0
}

func (x *HandPetPetCmd) GetBreakup() bool {
	if x != nil && x.Breakup != nil {
		return *x.Breakup
	}
	return Default_HandPetPetCmd_Breakup
}

type GiveGiftPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=22" json:"param,omitempty"`
	Petid    *uint32   `protobuf:"varint,3,req,name=petid" json:"petid,omitempty"`
	Itemguid *string   `protobuf:"bytes,4,opt,name=itemguid" json:"itemguid,omitempty"`
}

// Default values for GiveGiftPetCmd fields.
const (
	Default_GiveGiftPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_GiveGiftPetCmd_Param = PetParam_PETPARAM_GIVE_GIFT
)

func (x *GiveGiftPetCmd) Reset() {
	*x = GiveGiftPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveGiftPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveGiftPetCmd) ProtoMessage() {}

func (x *GiveGiftPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveGiftPetCmd.ProtoReflect.Descriptor instead.
func (*GiveGiftPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{33}
}

func (x *GiveGiftPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GiveGiftPetCmd_Cmd
}

func (x *GiveGiftPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GiveGiftPetCmd_Param
}

func (x *GiveGiftPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

func (x *GiveGiftPetCmd) GetItemguid() string {
	if x != nil && x.Itemguid != nil {
		return *x.Itemguid
	}
	return ""
}

type UnlockNtfPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=23" json:"param,omitempty"`
	Petid    *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
	Equipids []uint32  `protobuf:"varint,4,rep,name=equipids" json:"equipids,omitempty"`
	Bodys    []uint32  `protobuf:"varint,5,rep,name=bodys" json:"bodys,omitempty"`
}

// Default values for UnlockNtfPetCmd fields.
const (
	Default_UnlockNtfPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_UnlockNtfPetCmd_Param = PetParam_PETPARAM_UNLOCK_NTF
	Default_UnlockNtfPetCmd_Petid = uint32(0)
)

func (x *UnlockNtfPetCmd) Reset() {
	*x = UnlockNtfPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockNtfPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockNtfPetCmd) ProtoMessage() {}

func (x *UnlockNtfPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockNtfPetCmd.ProtoReflect.Descriptor instead.
func (*UnlockNtfPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{34}
}

func (x *UnlockNtfPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UnlockNtfPetCmd_Cmd
}

func (x *UnlockNtfPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UnlockNtfPetCmd_Param
}

func (x *UnlockNtfPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_UnlockNtfPetCmd_Petid
}

func (x *UnlockNtfPetCmd) GetEquipids() []uint32 {
	if x != nil {
		return x.Equipids
	}
	return nil
}

func (x *UnlockNtfPetCmd) GetBodys() []uint32 {
	if x != nil {
		return x.Bodys
	}
	return nil
}

type ResetSkillPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=24" json:"param,omitempty"`
	Id    *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for ResetSkillPetCmd fields.
const (
	Default_ResetSkillPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_ResetSkillPetCmd_Param = PetParam_PETPARAM_RESET_SKILL
	Default_ResetSkillPetCmd_Id    = uint32(0)
)

func (x *ResetSkillPetCmd) Reset() {
	*x = ResetSkillPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetSkillPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSkillPetCmd) ProtoMessage() {}

func (x *ResetSkillPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSkillPetCmd.ProtoReflect.Descriptor instead.
func (*ResetSkillPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{35}
}

func (x *ResetSkillPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ResetSkillPetCmd_Cmd
}

func (x *ResetSkillPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ResetSkillPetCmd_Param
}

func (x *ResetSkillPetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ResetSkillPetCmd_Id
}

type ChangeNamePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=26" json:"param,omitempty"`
	Petid *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
	Name  *string   `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

// Default values for ChangeNamePetCmd fields.
const (
	Default_ChangeNamePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_ChangeNamePetCmd_Param = PetParam_PETPARAM_CHANGE_NAME
	Default_ChangeNamePetCmd_Petid = uint32(0)
)

func (x *ChangeNamePetCmd) Reset() {
	*x = ChangeNamePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNamePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNamePetCmd) ProtoMessage() {}

func (x *ChangeNamePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNamePetCmd.ProtoReflect.Descriptor instead.
func (*ChangeNamePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeNamePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeNamePetCmd_Cmd
}

func (x *ChangeNamePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeNamePetCmd_Param
}

func (x *ChangeNamePetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_ChangeNamePetCmd_Petid
}

func (x *ChangeNamePetCmd) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type SwitchSkillPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=27" json:"param,omitempty"`
	Petid *uint32   `protobuf:"varint,3,opt,name=petid,def=0" json:"petid,omitempty"`
	Open  *bool     `protobuf:"varint,4,opt,name=open,def=0" json:"open,omitempty"`
}

// Default values for SwitchSkillPetCmd fields.
const (
	Default_SwitchSkillPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_SwitchSkillPetCmd_Param = PetParam_PETPARAM_SWITCH_SKILL
	Default_SwitchSkillPetCmd_Petid = uint32(0)
	Default_SwitchSkillPetCmd_Open  = bool(false)
)

func (x *SwitchSkillPetCmd) Reset() {
	*x = SwitchSkillPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchSkillPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchSkillPetCmd) ProtoMessage() {}

func (x *SwitchSkillPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchSkillPetCmd.ProtoReflect.Descriptor instead.
func (*SwitchSkillPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{37}
}

func (x *SwitchSkillPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SwitchSkillPetCmd_Cmd
}

func (x *SwitchSkillPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SwitchSkillPetCmd_Param
}

func (x *SwitchSkillPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_SwitchSkillPetCmd_Petid
}

func (x *SwitchSkillPetCmd) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return Default_SwitchSkillPetCmd_Open
}

type WorkSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint32     `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Starttime      *uint32     `protobuf:"varint,2,opt,name=starttime,def=0" json:"starttime,omitempty"`
	Lastrewardtime *uint32     `protobuf:"varint,7,opt,name=lastrewardtime,def=0" json:"lastrewardtime,omitempty"`
	Unlock         *bool       `protobuf:"varint,3,opt,name=unlock,def=0" json:"unlock,omitempty"`
	State          *EWorkState `protobuf:"varint,4,opt,name=state,enum=Cmd.EWorkState,def=0" json:"state,omitempty"`
	Datas          []*ItemData `protobuf:"bytes,5,rep,name=datas" json:"datas,omitempty"`
	Counts         []uint32    `protobuf:"varint,6,rep,name=counts" json:"counts,omitempty"`
	LastCounts     []uint32    `protobuf:"varint,8,rep,name=last_counts,json=lastCounts" json:"last_counts,omitempty"`
}

// Default values for WorkSpace fields.
const (
	Default_WorkSpace_Id             = uint32(0)
	Default_WorkSpace_Starttime      = uint32(0)
	Default_WorkSpace_Lastrewardtime = uint32(0)
	Default_WorkSpace_Unlock         = bool(false)
	Default_WorkSpace_State          = EWorkState_EWORKSTATE_MIN
)

func (x *WorkSpace) Reset() {
	*x = WorkSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSpace) ProtoMessage() {}

func (x *WorkSpace) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSpace.ProtoReflect.Descriptor instead.
func (*WorkSpace) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{38}
}

func (x *WorkSpace) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_WorkSpace_Id
}

func (x *WorkSpace) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return Default_WorkSpace_Starttime
}

func (x *WorkSpace) GetLastrewardtime() uint32 {
	if x != nil && x.Lastrewardtime != nil {
		return *x.Lastrewardtime
	}
	return Default_WorkSpace_Lastrewardtime
}

func (x *WorkSpace) GetUnlock() bool {
	if x != nil && x.Unlock != nil {
		return *x.Unlock
	}
	return Default_WorkSpace_Unlock
}

func (x *WorkSpace) GetState() EWorkState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_WorkSpace_State
}

func (x *WorkSpace) GetDatas() []*ItemData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *WorkSpace) GetCounts() []uint32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *WorkSpace) GetLastCounts() []uint32 {
	if x != nil {
		return x.LastCounts
	}
	return nil
}

type WorkPetExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid        *string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	Lastspaceid *uint32 `protobuf:"varint,2,opt,name=lastspaceid,def=0" json:"lastspaceid,omitempty"`
	Count       *uint32 `protobuf:"varint,3,opt,name=count,def=0" json:"count,omitempty"`
}

// Default values for WorkPetExtra fields.
const (
	Default_WorkPetExtra_Lastspaceid = uint32(0)
	Default_WorkPetExtra_Count       = uint32(0)
)

func (x *WorkPetExtra) Reset() {
	*x = WorkPetExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkPetExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkPetExtra) ProtoMessage() {}

func (x *WorkPetExtra) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkPetExtra.ProtoReflect.Descriptor instead.
func (*WorkPetExtra) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{39}
}

func (x *WorkPetExtra) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

func (x *WorkPetExtra) GetLastspaceid() uint32 {
	if x != nil && x.Lastspaceid != nil {
		return *x.Lastspaceid
	}
	return Default_WorkPetExtra_Lastspaceid
}

func (x *WorkPetExtra) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return Default_WorkPetExtra_Count
}

type WorkDayReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Time *uint32 `protobuf:"varint,2,opt,name=time,def=0" json:"time,omitempty"`
}

// Default values for WorkDayReward fields.
const (
	Default_WorkDayReward_Id   = uint32(0)
	Default_WorkDayReward_Time = uint32(0)
)

func (x *WorkDayReward) Reset() {
	*x = WorkDayReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkDayReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkDayReward) ProtoMessage() {}

func (x *WorkDayReward) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkDayReward.ProtoReflect.Descriptor instead.
func (*WorkDayReward) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{40}
}

func (x *WorkDayReward) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_WorkDayReward_Id
}

func (x *WorkDayReward) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_WorkDayReward_Time
}

type StartWorkPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=29" json:"param,omitempty"`
	Id    *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Pets  []string  `protobuf:"bytes,4,rep,name=pets" json:"pets,omitempty"`
}

// Default values for StartWorkPetCmd fields.
const (
	Default_StartWorkPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_StartWorkPetCmd_Param = PetParam_PETPARAM_WORK_STARTWORK
	Default_StartWorkPetCmd_Id    = uint32(0)
)

func (x *StartWorkPetCmd) Reset() {
	*x = StartWorkPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorkPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkPetCmd) ProtoMessage() {}

func (x *StartWorkPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkPetCmd.ProtoReflect.Descriptor instead.
func (*StartWorkPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{41}
}

func (x *StartWorkPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StartWorkPetCmd_Cmd
}

func (x *StartWorkPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StartWorkPetCmd_Param
}

func (x *StartWorkPetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_StartWorkPetCmd_Id
}

func (x *StartWorkPetCmd) GetPets() []string {
	if x != nil {
		return x.Pets
	}
	return nil
}

type StopWorkPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=30" json:"param,omitempty"`
	Id    *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for StopWorkPetCmd fields.
const (
	Default_StopWorkPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_StopWorkPetCmd_Param = PetParam_PETPARAM_WORK_STOPWORK
	Default_StopWorkPetCmd_Id    = uint32(0)
)

func (x *StopWorkPetCmd) Reset() {
	*x = StopWorkPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopWorkPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopWorkPetCmd) ProtoMessage() {}

func (x *StopWorkPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopWorkPetCmd.ProtoReflect.Descriptor instead.
func (*StopWorkPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{42}
}

func (x *StopWorkPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StopWorkPetCmd_Cmd
}

func (x *StopWorkPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StopWorkPetCmd_Param
}

func (x *StopWorkPetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_StopWorkPetCmd_Id
}

type QueryPetWorkDataPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd            *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param          *PetParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=32" json:"param,omitempty"`
	Datas          []*WorkSpace    `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	Extras         []*WorkPetExtra `protobuf:"bytes,4,rep,name=extras" json:"extras,omitempty"`
	MaxSpace       *uint32         `protobuf:"varint,5,opt,name=max_space,json=maxSpace,def=0" json:"max_space,omitempty"`
	CardExpiretime *uint32         `protobuf:"varint,6,opt,name=card_expiretime,json=cardExpiretime,def=0" json:"card_expiretime,omitempty"`
}

// Default values for QueryPetWorkDataPetCmd fields.
const (
	Default_QueryPetWorkDataPetCmd_Cmd            = Command_SCENE_USER_PET_PROTOCMD
	Default_QueryPetWorkDataPetCmd_Param          = PetParam_PETPARAM_WORK_QUERYWORKDATA
	Default_QueryPetWorkDataPetCmd_MaxSpace       = uint32(0)
	Default_QueryPetWorkDataPetCmd_CardExpiretime = uint32(0)
)

func (x *QueryPetWorkDataPetCmd) Reset() {
	*x = QueryPetWorkDataPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPetWorkDataPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPetWorkDataPetCmd) ProtoMessage() {}

func (x *QueryPetWorkDataPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPetWorkDataPetCmd.ProtoReflect.Descriptor instead.
func (*QueryPetWorkDataPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{43}
}

func (x *QueryPetWorkDataPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryPetWorkDataPetCmd_Cmd
}

func (x *QueryPetWorkDataPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryPetWorkDataPetCmd_Param
}

func (x *QueryPetWorkDataPetCmd) GetDatas() []*WorkSpace {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *QueryPetWorkDataPetCmd) GetExtras() []*WorkPetExtra {
	if x != nil {
		return x.Extras
	}
	return nil
}

func (x *QueryPetWorkDataPetCmd) GetMaxSpace() uint32 {
	if x != nil && x.MaxSpace != nil {
		return *x.MaxSpace
	}
	return Default_QueryPetWorkDataPetCmd_MaxSpace
}

func (x *QueryPetWorkDataPetCmd) GetCardExpiretime() uint32 {
	if x != nil && x.CardExpiretime != nil {
		return *x.CardExpiretime
	}
	return Default_QueryPetWorkDataPetCmd_CardExpiretime
}

type GetPetWorkRewardPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=33" json:"param,omitempty"`
	Id    *uint32   `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for GetPetWorkRewardPetCmd fields.
const (
	Default_GetPetWorkRewardPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_GetPetWorkRewardPetCmd_Param = PetParam_PETPARAM_WORK_GETREWARD
	Default_GetPetWorkRewardPetCmd_Id    = uint32(0)
)

func (x *GetPetWorkRewardPetCmd) Reset() {
	*x = GetPetWorkRewardPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPetWorkRewardPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPetWorkRewardPetCmd) ProtoMessage() {}

func (x *GetPetWorkRewardPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPetWorkRewardPetCmd.ProtoReflect.Descriptor instead.
func (*GetPetWorkRewardPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{44}
}

func (x *GetPetWorkRewardPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetPetWorkRewardPetCmd_Cmd
}

func (x *GetPetWorkRewardPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetPetWorkRewardPetCmd_Param
}

func (x *GetPetWorkRewardPetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_GetPetWorkRewardPetCmd_Id
}

type WorkSpaceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=34" json:"param,omitempty"`
	Updates []*WorkSpace `protobuf:"bytes,3,rep,name=updates" json:"updates,omitempty"`
}

// Default values for WorkSpaceUpdate fields.
const (
	Default_WorkSpaceUpdate_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_WorkSpaceUpdate_Param = PetParam_PETPARAM_WORK_SPACEUPDATE
)

func (x *WorkSpaceUpdate) Reset() {
	*x = WorkSpaceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSpaceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSpaceUpdate) ProtoMessage() {}

func (x *WorkSpaceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSpaceUpdate.ProtoReflect.Descriptor instead.
func (*WorkSpaceUpdate) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{45}
}

func (x *WorkSpaceUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_WorkSpaceUpdate_Cmd
}

func (x *WorkSpaceUpdate) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_WorkSpaceUpdate_Param
}

func (x *WorkSpaceUpdate) GetUpdates() []*WorkSpace {
	if x != nil {
		return x.Updates
	}
	return nil
}

type PetExtraUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=35" json:"param,omitempty"`
	Updates []*WorkPetExtra `protobuf:"bytes,3,rep,name=updates" json:"updates,omitempty"`
}

// Default values for PetExtraUpdatePetCmd fields.
const (
	Default_PetExtraUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetExtraUpdatePetCmd_Param = PetParam_PETPARAM_WORK_EXTRAUPDATE
)

func (x *PetExtraUpdatePetCmd) Reset() {
	*x = PetExtraUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetExtraUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetExtraUpdatePetCmd) ProtoMessage() {}

func (x *PetExtraUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetExtraUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*PetExtraUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{46}
}

func (x *PetExtraUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetExtraUpdatePetCmd_Cmd
}

func (x *PetExtraUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetExtraUpdatePetCmd_Param
}

func (x *PetExtraUpdatePetCmd) GetUpdates() []*WorkPetExtra {
	if x != nil {
		return x.Updates
	}
	return nil
}

type ComposePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=36" json:"param,omitempty"`
	Id       *uint32   `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	Eggguids []string  `protobuf:"bytes,4,rep,name=eggguids" json:"eggguids,omitempty"`
}

// Default values for ComposePetCmd fields.
const (
	Default_ComposePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_ComposePetCmd_Param = PetParam_PETPARAM_COMPOSE
)

func (x *ComposePetCmd) Reset() {
	*x = ComposePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposePetCmd) ProtoMessage() {}

func (x *ComposePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposePetCmd.ProtoReflect.Descriptor instead.
func (*ComposePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{47}
}

func (x *ComposePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ComposePetCmd_Cmd
}

func (x *ComposePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ComposePetCmd_Param
}

func (x *ComposePetCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ComposePetCmd) GetEggguids() []string {
	if x != nil {
		return x.Eggguids
	}
	return nil
}

type SpecPetEquip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bodyid *uint32    `protobuf:"varint,1,req,name=bodyid" json:"bodyid,omitempty"`
	Itemid *uint32    `protobuf:"varint,2,req,name=itemid" json:"itemid,omitempty"`
	Epos   *EEquipPos `protobuf:"varint,3,opt,name=epos,enum=Cmd.EEquipPos,def=0" json:"epos,omitempty"`
}

// Default values for SpecPetEquip fields.
const (
	Default_SpecPetEquip_Epos = EEquipPos_EEQUIPPOS_MIN
)

func (x *SpecPetEquip) Reset() {
	*x = SpecPetEquip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecPetEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecPetEquip) ProtoMessage() {}

func (x *SpecPetEquip) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecPetEquip.ProtoReflect.Descriptor instead.
func (*SpecPetEquip) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{48}
}

func (x *SpecPetEquip) GetBodyid() uint32 {
	if x != nil && x.Bodyid != nil {
		return *x.Bodyid
	}
	return 0
}

func (x *SpecPetEquip) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *SpecPetEquip) GetEpos() EEquipPos {
	if x != nil && x.Epos != nil {
		return *x.Epos
	}
	return Default_SpecPetEquip_Epos
}

type PetEquipUnlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []uint32        `protobuf:"varint,1,rep,name=items" json:"items,omitempty"`
	Bodyitems []*SpecPetEquip `protobuf:"bytes,2,rep,name=bodyitems" json:"bodyitems,omitempty"`
	Version   *uint32         `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
}

// Default values for PetEquipUnlockInfo fields.
const (
	Default_PetEquipUnlockInfo_Version = uint32(0)
)

func (x *PetEquipUnlockInfo) Reset() {
	*x = PetEquipUnlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetEquipUnlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetEquipUnlockInfo) ProtoMessage() {}

func (x *PetEquipUnlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetEquipUnlockInfo.ProtoReflect.Descriptor instead.
func (*PetEquipUnlockInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{49}
}

func (x *PetEquipUnlockInfo) GetItems() []uint32 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PetEquipUnlockInfo) GetBodyitems() []*SpecPetEquip {
	if x != nil {
		return x.Bodyitems
	}
	return nil
}

func (x *PetEquipUnlockInfo) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_PetEquipUnlockInfo_Version
}

type PetEquipListCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param      *PetParam           `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=37" json:"param,omitempty"`
	Unlockinfo *PetEquipUnlockInfo `protobuf:"bytes,3,opt,name=unlockinfo" json:"unlockinfo,omitempty"`
}

// Default values for PetEquipListCmd fields.
const (
	Default_PetEquipListCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_PetEquipListCmd_Param = PetParam_PETPARAM_EQUIP_LIST
)

func (x *PetEquipListCmd) Reset() {
	*x = PetEquipListCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetEquipListCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetEquipListCmd) ProtoMessage() {}

func (x *PetEquipListCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetEquipListCmd.ProtoReflect.Descriptor instead.
func (*PetEquipListCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{50}
}

func (x *PetEquipListCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PetEquipListCmd_Cmd
}

func (x *PetEquipListCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PetEquipListCmd_Param
}

func (x *PetEquipListCmd) GetUnlockinfo() *PetEquipUnlockInfo {
	if x != nil {
		return x.Unlockinfo
	}
	return nil
}

type UpdatePetEquipListCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param        *PetParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=38" json:"param,omitempty"`
	Additems     []uint32        `protobuf:"varint,3,rep,name=additems" json:"additems,omitempty"`
	Addbodyitems []*SpecPetEquip `protobuf:"bytes,4,rep,name=addbodyitems" json:"addbodyitems,omitempty"`
}

// Default values for UpdatePetEquipListCmd fields.
const (
	Default_UpdatePetEquipListCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_UpdatePetEquipListCmd_Param = PetParam_PETPARAM_EQUIP_LIST_UPDATE
)

func (x *UpdatePetEquipListCmd) Reset() {
	*x = UpdatePetEquipListCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePetEquipListCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePetEquipListCmd) ProtoMessage() {}

func (x *UpdatePetEquipListCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePetEquipListCmd.ProtoReflect.Descriptor instead.
func (*UpdatePetEquipListCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{51}
}

func (x *UpdatePetEquipListCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdatePetEquipListCmd_Cmd
}

func (x *UpdatePetEquipListCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdatePetEquipListCmd_Param
}

func (x *UpdatePetEquipListCmd) GetAdditems() []uint32 {
	if x != nil {
		return x.Additems
	}
	return nil
}

func (x *UpdatePetEquipListCmd) GetAddbodyitems() []*SpecPetEquip {
	if x != nil {
		return x.Addbodyitems
	}
	return nil
}

type PetWearInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epos   *EEquipPos     `protobuf:"varint,4,req,name=epos,enum=Cmd.EEquipPos" json:"epos,omitempty"`
	Itemid *uint32        `protobuf:"varint,5,opt,name=itemid" json:"itemid,omitempty"`
	Oper   *EPetEquipOper `protobuf:"varint,6,opt,name=oper,enum=Cmd.EPetEquipOper,def=1" json:"oper,omitempty"`
}

// Default values for PetWearInfo fields.
const (
	Default_PetWearInfo_Oper = EPetEquipOper_EPETEQUIPOPER_ON
)

func (x *PetWearInfo) Reset() {
	*x = PetWearInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetWearInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetWearInfo) ProtoMessage() {}

func (x *PetWearInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetWearInfo.ProtoReflect.Descriptor instead.
func (*PetWearInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{52}
}

func (x *PetWearInfo) GetEpos() EEquipPos {
	if x != nil && x.Epos != nil {
		return *x.Epos
	}
	return EEquipPos_EEQUIPPOS_MIN
}

func (x *PetWearInfo) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *PetWearInfo) GetOper() EPetEquipOper {
	if x != nil && x.Oper != nil {
		return *x.Oper
	}
	return Default_PetWearInfo_Oper
}

type ChangeWearPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=39" json:"param,omitempty"`
	Petid    *uint32        `protobuf:"varint,3,req,name=petid" json:"petid,omitempty"`
	Wearinfo []*PetWearInfo `protobuf:"bytes,4,rep,name=wearinfo" json:"wearinfo,omitempty"`
}

// Default values for ChangeWearPetCmd fields.
const (
	Default_ChangeWearPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_ChangeWearPetCmd_Param = PetParam_PETPARAM_CHANGE_WEAR
)

func (x *ChangeWearPetCmd) Reset() {
	*x = ChangeWearPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWearPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWearPetCmd) ProtoMessage() {}

func (x *ChangeWearPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWearPetCmd.ProtoReflect.Descriptor instead.
func (*ChangeWearPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{53}
}

func (x *ChangeWearPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeWearPetCmd_Cmd
}

func (x *ChangeWearPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeWearPetCmd_Param
}

func (x *ChangeWearPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

func (x *ChangeWearPetCmd) GetWearinfo() []*PetWearInfo {
	if x != nil {
		return x.Wearinfo
	}
	return nil
}

type UpdateWearPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=40" json:"param,omitempty"`
	Petid    *uint32        `protobuf:"varint,3,req,name=petid" json:"petid,omitempty"`
	Wearinfo []*PetWearInfo `protobuf:"bytes,4,rep,name=wearinfo" json:"wearinfo,omitempty"`
}

// Default values for UpdateWearPetCmd fields.
const (
	Default_UpdateWearPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_UpdateWearPetCmd_Param = PetParam_PETPARAM_UPDATE_WEAR
)

func (x *UpdateWearPetCmd) Reset() {
	*x = UpdateWearPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWearPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWearPetCmd) ProtoMessage() {}

func (x *UpdateWearPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWearPetCmd.ProtoReflect.Descriptor instead.
func (*UpdateWearPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateWearPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateWearPetCmd_Cmd
}

func (x *UpdateWearPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateWearPetCmd_Param
}

func (x *UpdateWearPetCmd) GetPetid() uint32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return 0
}

func (x *UpdateWearPetCmd) GetWearinfo() []*PetWearInfo {
	if x != nil {
		return x.Wearinfo
	}
	return nil
}

type ReplaceCatPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=41" json:"param,omitempty"`
	Oldcatid *uint32   `protobuf:"varint,3,opt,name=oldcatid,def=0" json:"oldcatid,omitempty"`
	Newcatid *uint32   `protobuf:"varint,4,opt,name=newcatid,def=0" json:"newcatid,omitempty"`
}

// Default values for ReplaceCatPetCmd fields.
const (
	Default_ReplaceCatPetCmd_Cmd      = Command_SCENE_USER_PET_PROTOCMD
	Default_ReplaceCatPetCmd_Param    = PetParam_PETPARAM_REPLACE_CAT
	Default_ReplaceCatPetCmd_Oldcatid = uint32(0)
	Default_ReplaceCatPetCmd_Newcatid = uint32(0)
)

func (x *ReplaceCatPetCmd) Reset() {
	*x = ReplaceCatPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceCatPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceCatPetCmd) ProtoMessage() {}

func (x *ReplaceCatPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceCatPetCmd.ProtoReflect.Descriptor instead.
func (*ReplaceCatPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{55}
}

func (x *ReplaceCatPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReplaceCatPetCmd_Cmd
}

func (x *ReplaceCatPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReplaceCatPetCmd_Param
}

func (x *ReplaceCatPetCmd) GetOldcatid() uint32 {
	if x != nil && x.Oldcatid != nil {
		return *x.Oldcatid
	}
	return Default_ReplaceCatPetCmd_Oldcatid
}

func (x *ReplaceCatPetCmd) GetNewcatid() uint32 {
	if x != nil && x.Newcatid != nil {
		return *x.Newcatid
	}
	return Default_ReplaceCatPetCmd_Newcatid
}

type WorkSpaceMaxCountUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param    *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=42" json:"param,omitempty"`
	MaxCount *uint32   `protobuf:"varint,3,opt,name=max_count,json=maxCount" json:"max_count,omitempty"`
}

// Default values for WorkSpaceMaxCountUpdatePetCmd fields.
const (
	Default_WorkSpaceMaxCountUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_WorkSpaceMaxCountUpdatePetCmd_Param = PetParam_PETPARAM_WORK_MAXSPACEUPDATE
)

func (x *WorkSpaceMaxCountUpdatePetCmd) Reset() {
	*x = WorkSpaceMaxCountUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSpaceMaxCountUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSpaceMaxCountUpdatePetCmd) ProtoMessage() {}

func (x *WorkSpaceMaxCountUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSpaceMaxCountUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*WorkSpaceMaxCountUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{56}
}

func (x *WorkSpaceMaxCountUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_WorkSpaceMaxCountUpdatePetCmd_Cmd
}

func (x *WorkSpaceMaxCountUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_WorkSpaceMaxCountUpdatePetCmd_Param
}

func (x *WorkSpaceMaxCountUpdatePetCmd) GetMaxCount() uint32 {
	if x != nil && x.MaxCount != nil {
		return *x.MaxCount
	}
	return 0
}

type CatEquipPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param   *PetParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=43" json:"param,omitempty"`
	Catid   *uint32        `protobuf:"varint,3,opt,name=catid,def=0" json:"catid,omitempty"`
	Oper    *ECatEquipOper `protobuf:"varint,4,opt,name=oper,enum=Cmd.ECatEquipOper,def=0" json:"oper,omitempty"`
	Pos     *EEquipPos     `protobuf:"varint,5,opt,name=pos,enum=Cmd.EEquipPos,def=0" json:"pos,omitempty"`
	Equipid *uint32        `protobuf:"varint,6,opt,name=equipid" json:"equipid,omitempty"`
}

// Default values for CatEquipPetCmd fields.
const (
	Default_CatEquipPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_CatEquipPetCmd_Param = PetParam_PETPARAM_CAT_EQUIP
	Default_CatEquipPetCmd_Catid = uint32(0)
	Default_CatEquipPetCmd_Oper  = ECatEquipOper_ECATEQUIPOPER_MIN
	Default_CatEquipPetCmd_Pos   = EEquipPos_EEQUIPPOS_MIN
)

func (x *CatEquipPetCmd) Reset() {
	*x = CatEquipPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatEquipPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatEquipPetCmd) ProtoMessage() {}

func (x *CatEquipPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatEquipPetCmd.ProtoReflect.Descriptor instead.
func (*CatEquipPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{57}
}

func (x *CatEquipPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatEquipPetCmd_Cmd
}

func (x *CatEquipPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatEquipPetCmd_Param
}

func (x *CatEquipPetCmd) GetCatid() uint32 {
	if x != nil && x.Catid != nil {
		return *x.Catid
	}
	return Default_CatEquipPetCmd_Catid
}

func (x *CatEquipPetCmd) GetOper() ECatEquipOper {
	if x != nil && x.Oper != nil {
		return *x.Oper
	}
	return Default_CatEquipPetCmd_Oper
}

func (x *CatEquipPetCmd) GetPos() EEquipPos {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return Default_CatEquipPetCmd_Pos
}

func (x *CatEquipPetCmd) GetEquipid() uint32 {
	if x != nil && x.Equipid != nil {
		return *x.Equipid
	}
	return 0
}

type CatAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EAttrType `protobuf:"varint,1,req,name=type,enum=Cmd.EAttrType,def=0" json:"type,omitempty"`
	Value *int32     `protobuf:"varint,2,req,name=value,def=0" json:"value,omitempty"`
}

// Default values for CatAttr fields.
const (
	Default_CatAttr_Type  = EAttrType_EATTRTYPE_MIN
	Default_CatAttr_Value = int32(0)
)

func (x *CatAttr) Reset() {
	*x = CatAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatAttr) ProtoMessage() {}

func (x *CatAttr) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatAttr.ProtoReflect.Descriptor instead.
func (*CatAttr) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{58}
}

func (x *CatAttr) GetType() EAttrType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CatAttr_Type
}

func (x *CatAttr) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_CatAttr_Value
}

type CatEquipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32  `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Equipids    []uint32 `protobuf:"varint,2,rep,name=equipids" json:"equipids,omitempty"`
	Curequipids []uint32 `protobuf:"varint,3,rep,name=curequipids" json:"curequipids,omitempty"`
	Skillids    []uint32 `protobuf:"varint,4,rep,name=skillids" json:"skillids,omitempty"`
}

// Default values for CatEquipInfo fields.
const (
	Default_CatEquipInfo_Id = uint32(0)
)

func (x *CatEquipInfo) Reset() {
	*x = CatEquipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatEquipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatEquipInfo) ProtoMessage() {}

func (x *CatEquipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatEquipInfo.ProtoReflect.Descriptor instead.
func (*CatEquipInfo) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{59}
}

func (x *CatEquipInfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_CatEquipInfo_Id
}

func (x *CatEquipInfo) GetEquipids() []uint32 {
	if x != nil {
		return x.Equipids
	}
	return nil
}

func (x *CatEquipInfo) GetCurequipids() []uint32 {
	if x != nil {
		return x.Curequipids
	}
	return nil
}

func (x *CatEquipInfo) GetSkillids() []uint32 {
	if x != nil {
		return x.Skillids
	}
	return nil
}

type CatEquipInfoPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=44" json:"param,omitempty"`
	Lv     *uint32         `protobuf:"varint,3,opt,name=lv,def=0" json:"lv,omitempty"`
	Infos  []*CatEquipInfo `protobuf:"bytes,4,rep,name=infos" json:"infos,omitempty"`
	Update *bool           `protobuf:"varint,5,opt,name=update,def=0" json:"update,omitempty"`
}

// Default values for CatEquipInfoPetCmd fields.
const (
	Default_CatEquipInfoPetCmd_Cmd    = Command_SCENE_USER_PET_PROTOCMD
	Default_CatEquipInfoPetCmd_Param  = PetParam_PETPARAM_CAT_EQUIPINFO
	Default_CatEquipInfoPetCmd_Lv     = uint32(0)
	Default_CatEquipInfoPetCmd_Update = bool(false)
)

func (x *CatEquipInfoPetCmd) Reset() {
	*x = CatEquipInfoPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatEquipInfoPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatEquipInfoPetCmd) ProtoMessage() {}

func (x *CatEquipInfoPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatEquipInfoPetCmd.ProtoReflect.Descriptor instead.
func (*CatEquipInfoPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{60}
}

func (x *CatEquipInfoPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatEquipInfoPetCmd_Cmd
}

func (x *CatEquipInfoPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatEquipInfoPetCmd_Param
}

func (x *CatEquipInfoPetCmd) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_CatEquipInfoPetCmd_Lv
}

func (x *CatEquipInfoPetCmd) GetInfos() []*CatEquipInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *CatEquipInfoPetCmd) GetUpdate() bool {
	if x != nil && x.Update != nil {
		return *x.Update
	}
	return Default_CatEquipInfoPetCmd_Update
}

type CatSkillOptionPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param       *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=45" json:"param,omitempty"`
	Skillid     *uint32   `protobuf:"varint,3,opt,name=skillid,def=0" json:"skillid,omitempty"`
	Select      *bool     `protobuf:"varint,4,opt,name=select,def=0" json:"select,omitempty"`
	Selectskill []uint32  `protobuf:"varint,5,rep,name=selectskill" json:"selectskill,omitempty"`
}

// Default values for CatSkillOptionPetCmd fields.
const (
	Default_CatSkillOptionPetCmd_Cmd     = Command_SCENE_USER_PET_PROTOCMD
	Default_CatSkillOptionPetCmd_Param   = PetParam_PETPARAM_CAT_SKILLOPTION
	Default_CatSkillOptionPetCmd_Skillid = uint32(0)
	Default_CatSkillOptionPetCmd_Select  = bool(false)
)

func (x *CatSkillOptionPetCmd) Reset() {
	*x = CatSkillOptionPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatSkillOptionPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatSkillOptionPetCmd) ProtoMessage() {}

func (x *CatSkillOptionPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatSkillOptionPetCmd.ProtoReflect.Descriptor instead.
func (*CatSkillOptionPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{61}
}

func (x *CatSkillOptionPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatSkillOptionPetCmd_Cmd
}

func (x *CatSkillOptionPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatSkillOptionPetCmd_Param
}

func (x *CatSkillOptionPetCmd) GetSkillid() uint32 {
	if x != nil && x.Skillid != nil {
		return *x.Skillid
	}
	return Default_CatSkillOptionPetCmd_Skillid
}

func (x *CatSkillOptionPetCmd) GetSelect() bool {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return Default_CatSkillOptionPetCmd_Select
}

func (x *CatSkillOptionPetCmd) GetSelectskill() []uint32 {
	if x != nil {
		return x.Selectskill
	}
	return nil
}

type BoKiState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp        *uint32           `protobuf:"varint,1,opt,name=exp" json:"exp,omitempty"`
	Level      *uint32           `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Stage      *uint32           `protobuf:"varint,3,opt,name=stage" json:"stage,omitempty"`
	Equips     []*BoKiEquip      `protobuf:"bytes,4,rep,name=equips" json:"equips,omitempty"`
	Skills     []*BoKiSkill      `protobuf:"bytes,5,rep,name=skills" json:"skills,omitempty"`
	SkillInUse []*BoKiSkillInUse `protobuf:"bytes,6,rep,name=skill_in_use,json=skillInUse" json:"skill_in_use,omitempty"`
}

func (x *BoKiState) Reset() {
	*x = BoKiState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiState) ProtoMessage() {}

func (x *BoKiState) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiState.ProtoReflect.Descriptor instead.
func (*BoKiState) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{62}
}

func (x *BoKiState) GetExp() uint32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *BoKiState) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *BoKiState) GetStage() uint32 {
	if x != nil && x.Stage != nil {
		return *x.Stage
	}
	return 0
}

func (x *BoKiState) GetEquips() []*BoKiEquip {
	if x != nil {
		return x.Equips
	}
	return nil
}

func (x *BoKiState) GetSkills() []*BoKiSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *BoKiState) GetSkillInUse() []*BoKiSkillInUse {
	if x != nil {
		return x.SkillInUse
	}
	return nil
}

type BoKiStateQueryPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=46" json:"param,omitempty"`
	State *BoKiState `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

// Default values for BoKiStateQueryPetCmd fields.
const (
	Default_BoKiStateQueryPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiStateQueryPetCmd_Param = PetParam_PETPARAM_BOKI_STATE_QUERY
)

func (x *BoKiStateQueryPetCmd) Reset() {
	*x = BoKiStateQueryPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiStateQueryPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiStateQueryPetCmd) ProtoMessage() {}

func (x *BoKiStateQueryPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiStateQueryPetCmd.ProtoReflect.Descriptor instead.
func (*BoKiStateQueryPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{63}
}

func (x *BoKiStateQueryPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiStateQueryPetCmd_Cmd
}

func (x *BoKiStateQueryPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiStateQueryPetCmd_Param
}

func (x *BoKiStateQueryPetCmd) GetState() *BoKiState {
	if x != nil {
		return x.State
	}
	return nil
}

type BoKiData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EBoKiDataType `protobuf:"varint,1,opt,name=type,enum=Cmd.EBoKiDataType" json:"type,omitempty"`
	Value *uint32        `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *BoKiData) Reset() {
	*x = BoKiData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiData) ProtoMessage() {}

func (x *BoKiData) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiData.ProtoReflect.Descriptor instead.
func (*BoKiData) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{64}
}

func (x *BoKiData) GetType() EBoKiDataType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EBoKiDataType_EBOKIDATA_MIN
}

func (x *BoKiData) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type BoKiDataUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=47" json:"param,omitempty"`
	Datas []*BoKiData `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
}

// Default values for BoKiDataUpdatePetCmd fields.
const (
	Default_BoKiDataUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiDataUpdatePetCmd_Param = PetParam_PETPARAM_BOKI_DATA_UPDATE
)

func (x *BoKiDataUpdatePetCmd) Reset() {
	*x = BoKiDataUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiDataUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiDataUpdatePetCmd) ProtoMessage() {}

func (x *BoKiDataUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiDataUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*BoKiDataUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{65}
}

func (x *BoKiDataUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiDataUpdatePetCmd_Cmd
}

func (x *BoKiDataUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiDataUpdatePetCmd_Param
}

func (x *BoKiDataUpdatePetCmd) GetDatas() []*BoKiData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type BoKiEquipLevelUpPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=48" json:"param,omitempty"`
	Pos   *uint32   `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
}

// Default values for BoKiEquipLevelUpPetCmd fields.
const (
	Default_BoKiEquipLevelUpPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiEquipLevelUpPetCmd_Param = PetParam_PETPARAM_BOKI_EQUIP_LEVEL_UP
)

func (x *BoKiEquipLevelUpPetCmd) Reset() {
	*x = BoKiEquipLevelUpPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiEquipLevelUpPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiEquipLevelUpPetCmd) ProtoMessage() {}

func (x *BoKiEquipLevelUpPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiEquipLevelUpPetCmd.ProtoReflect.Descriptor instead.
func (*BoKiEquipLevelUpPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{66}
}

func (x *BoKiEquipLevelUpPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiEquipLevelUpPetCmd_Cmd
}

func (x *BoKiEquipLevelUpPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiEquipLevelUpPetCmd_Param
}

func (x *BoKiEquipLevelUpPetCmd) GetPos() uint32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

type BoKiEquip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos   *uint32 `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Level *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (x *BoKiEquip) Reset() {
	*x = BoKiEquip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiEquip) ProtoMessage() {}

func (x *BoKiEquip) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiEquip.ProtoReflect.Descriptor instead.
func (*BoKiEquip) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{67}
}

func (x *BoKiEquip) GetPos() uint32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *BoKiEquip) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

type BoKiEquipUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=49" json:"param,omitempty"`
	Equips []*BoKiEquip `protobuf:"bytes,3,rep,name=equips" json:"equips,omitempty"`
}

// Default values for BoKiEquipUpdatePetCmd fields.
const (
	Default_BoKiEquipUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiEquipUpdatePetCmd_Param = PetParam_PETPARAM_BOKI_EQUIP_UPDATE
)

func (x *BoKiEquipUpdatePetCmd) Reset() {
	*x = BoKiEquipUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiEquipUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiEquipUpdatePetCmd) ProtoMessage() {}

func (x *BoKiEquipUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiEquipUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*BoKiEquipUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{68}
}

func (x *BoKiEquipUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiEquipUpdatePetCmd_Cmd
}

func (x *BoKiEquipUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiEquipUpdatePetCmd_Param
}

func (x *BoKiEquipUpdatePetCmd) GetEquips() []*BoKiEquip {
	if x != nil {
		return x.Equips
	}
	return nil
}

type BoKiSkillLevelUpPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=50" json:"param,omitempty"`
	Skills []*BoKiSkill `protobuf:"bytes,3,rep,name=skills" json:"skills,omitempty"`
}

// Default values for BoKiSkillLevelUpPetCmd fields.
const (
	Default_BoKiSkillLevelUpPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiSkillLevelUpPetCmd_Param = PetParam_PETPARAM_BOKI_SKILL_LEVEUP
)

func (x *BoKiSkillLevelUpPetCmd) Reset() {
	*x = BoKiSkillLevelUpPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkillLevelUpPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkillLevelUpPetCmd) ProtoMessage() {}

func (x *BoKiSkillLevelUpPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkillLevelUpPetCmd.ProtoReflect.Descriptor instead.
func (*BoKiSkillLevelUpPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{69}
}

func (x *BoKiSkillLevelUpPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiSkillLevelUpPetCmd_Cmd
}

func (x *BoKiSkillLevelUpPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiSkillLevelUpPetCmd_Param
}

func (x *BoKiSkillLevelUpPetCmd) GetSkills() []*BoKiSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type BoKiSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FamilyId *uint32 `protobuf:"varint,1,opt,name=family_id,json=familyId" json:"family_id,omitempty"`
	Level    *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Light    *bool   `protobuf:"varint,3,opt,name=light" json:"light,omitempty"`
	Show     *bool   `protobuf:"varint,4,opt,name=show" json:"show,omitempty"`
}

func (x *BoKiSkill) Reset() {
	*x = BoKiSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkill) ProtoMessage() {}

func (x *BoKiSkill) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkill.ProtoReflect.Descriptor instead.
func (*BoKiSkill) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{70}
}

func (x *BoKiSkill) GetFamilyId() uint32 {
	if x != nil && x.FamilyId != nil {
		return *x.FamilyId
	}
	return 0
}

func (x *BoKiSkill) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *BoKiSkill) GetLight() bool {
	if x != nil && x.Light != nil {
		return *x.Light
	}
	return false
}

func (x *BoKiSkill) GetShow() bool {
	if x != nil && x.Show != nil {
		return *x.Show
	}
	return false
}

type BoKiSkillUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=51" json:"param,omitempty"`
	Skills []*BoKiSkill `protobuf:"bytes,3,rep,name=skills" json:"skills,omitempty"`
}

// Default values for BoKiSkillUpdatePetCmd fields.
const (
	Default_BoKiSkillUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiSkillUpdatePetCmd_Param = PetParam_PETPARAM_BOKI_SKILL_UPDATE
)

func (x *BoKiSkillUpdatePetCmd) Reset() {
	*x = BoKiSkillUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkillUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkillUpdatePetCmd) ProtoMessage() {}

func (x *BoKiSkillUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkillUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*BoKiSkillUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{71}
}

func (x *BoKiSkillUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiSkillUpdatePetCmd_Cmd
}

func (x *BoKiSkillUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiSkillUpdatePetCmd_Param
}

func (x *BoKiSkillUpdatePetCmd) GetSkills() []*BoKiSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type BoKiSkillInUse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos *uint32 `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Id  *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (x *BoKiSkillInUse) Reset() {
	*x = BoKiSkillInUse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkillInUse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkillInUse) ProtoMessage() {}

func (x *BoKiSkillInUse) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkillInUse.ProtoReflect.Descriptor instead.
func (*BoKiSkillInUse) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{72}
}

func (x *BoKiSkillInUse) GetPos() uint32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *BoKiSkillInUse) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type BoKiSkillInUseUpdatePetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param  *PetParam         `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=52" json:"param,omitempty"`
	Skills []*BoKiSkillInUse `protobuf:"bytes,3,rep,name=skills" json:"skills,omitempty"`
}

// Default values for BoKiSkillInUseUpdatePetCmd fields.
const (
	Default_BoKiSkillInUseUpdatePetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiSkillInUseUpdatePetCmd_Param = PetParam_PETPARAM_BOKI_SKILL_IN_USE_UPDATE
)

func (x *BoKiSkillInUseUpdatePetCmd) Reset() {
	*x = BoKiSkillInUseUpdatePetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkillInUseUpdatePetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkillInUseUpdatePetCmd) ProtoMessage() {}

func (x *BoKiSkillInUseUpdatePetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkillInUseUpdatePetCmd.ProtoReflect.Descriptor instead.
func (*BoKiSkillInUseUpdatePetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{73}
}

func (x *BoKiSkillInUseUpdatePetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiSkillInUseUpdatePetCmd_Cmd
}

func (x *BoKiSkillInUseUpdatePetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiSkillInUseUpdatePetCmd_Param
}

func (x *BoKiSkillInUseUpdatePetCmd) GetSkills() []*BoKiSkillInUse {
	if x != nil {
		return x.Skills
	}
	return nil
}

type BoKiSkillInUseSetPetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=10" json:"cmd,omitempty"`
	Param *PetParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.PetParam,def=53" json:"param,omitempty"`
	Skill *BoKiSkillInUse `protobuf:"bytes,3,opt,name=skill" json:"skill,omitempty"`
}

// Default values for BoKiSkillInUseSetPetCmd fields.
const (
	Default_BoKiSkillInUseSetPetCmd_Cmd   = Command_SCENE_USER_PET_PROTOCMD
	Default_BoKiSkillInUseSetPetCmd_Param = PetParam_PETPARAM_BOKI_SKILL_IN_USE_SET
)

func (x *BoKiSkillInUseSetPetCmd) Reset() {
	*x = BoKiSkillInUseSetPetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ScenePet_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoKiSkillInUseSetPetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoKiSkillInUseSetPetCmd) ProtoMessage() {}

func (x *BoKiSkillInUseSetPetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_ScenePet_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoKiSkillInUseSetPetCmd.ProtoReflect.Descriptor instead.
func (*BoKiSkillInUseSetPetCmd) Descriptor() ([]byte, []int) {
	return file_ScenePet_proto_rawDescGZIP(), []int{74}
}

func (x *BoKiSkillInUseSetPetCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoKiSkillInUseSetPetCmd_Cmd
}

func (x *BoKiSkillInUseSetPetCmd) GetParam() PetParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoKiSkillInUseSetPetCmd_Param
}

func (x *BoKiSkillInUseSetPetCmd) GetSkill() *BoKiSkillInUse {
	if x != nil {
		return x.Skill
	}
	return nil
}

var File_ScenePet_proto protoreflect.FileDescriptor

var file_ScenePet_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x07, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x07, 0x50, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x22, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50,
	0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x11, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x73, 0x68, 0x69, 0x6f,
	0x6e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66,
	0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x22, 0xe0, 0x01, 0x0a,
	0x0d, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x11,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x11, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x02, 0x68, 0x70, 0x12, 0x21, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x72, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x62, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x05, 0x62, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x07, 0x62, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x65, 0x43, 0x61, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d,
	0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0d,
	0x48, 0x69, 0x72, 0x65, 0x43, 0x61, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48,
	0x49, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17,
	0x0a, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x45, 0x4d, 0x50, 0x4c, 0x4f,
	0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x59, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x45, 0x67, 0x67, 0x48, 0x61, 0x74, 0x63, 0x68, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x47, 0x47, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x9f, 0x01,
	0x0a, 0x10, 0x45, 0x67, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x47, 0x47, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x22,
	0xe0, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x65,
	0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x50, 0x45, 0x54,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07,
	0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x20, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x70, 0x63, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x70, 0x63,
	0x69, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x15, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x07, 0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x07, 0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x67, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x06, 0x69, 0x6e, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x68,
	0x61, 0x6e, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x63, 0x68, 0x50, 0x65, 0x74,
	0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x50,
	0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x45,
	0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x6e, 0x70, 0x63, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6e, 0x70,
	0x63, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x69, 0x73,
	0x73, 0x74, 0x6f, 0x70, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x63, 0x68, 0x50, 0x65,
	0x74, 0x47, 0x69, 0x66, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b,
	0x0a, 0x07, 0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x07, 0x6e, 0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0d,
	0x50, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a,
	0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x0c, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x05, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x04, 0x0a, 0x07, 0x50, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x12, 0x1f, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x65,
	0x78, 0x70, 0x12, 0x1f, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x78, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a,
	0x02, 0x6c, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x6c, 0x76,
	0x12, 0x1d, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x76, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x76, 0x12,
	0x21, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x68, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x63, 0x69, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x48, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x21,
	0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x6f, 0x66,
	0x66, 0x22, 0x3d, 0x0a, 0x0c, 0x50, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f,
	0x64, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x6f, 0x64, 0x79, 0x73,
	0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x10, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x70, 0x65, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x50,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x50, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x46, 0x46, 0x5f,
	0x50, 0x45, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65,
	0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64,
	0x22, 0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x69, 0x66, 0x74, 0x50, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x22, 0xec, 0x01, 0x0a,
	0x0f, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x39, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x4f, 0x70, 0x65, 0x72, 0x3a, 0x11, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x11,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d,
	0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x10, 0x50, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x15, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5a, 0x0a, 0x11, 0x50, 0x65, 0x74, 0x45,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a,
	0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x14, 0x50, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x09,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x8d, 0x04, 0x0a, 0x10, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x17, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x65, 0x67, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x65, 0x67, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x61, 0x72, 0x65, 0x73, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x61, 0x72, 0x65,
	0x73, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x66, 0x66, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x65, 0x66, 0x66, 0x12, 0x39, 0x0a, 0x0a,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x6e, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x6e, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x8a, 0x02,
	0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41,
	0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x4c, 0x49,
	0x53, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x65, 0x6e, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x1b, 0x50,
	0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4e, 0x74, 0x66, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45,
	0x4e, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x4e, 0x54, 0x46, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x41, 0x64,
	0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22,
	0xf9, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x18, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x74, 0x69, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x21, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41,
	0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x42, 0x41,
	0x54, 0x54, 0x4c, 0x45, 0x50, 0x45, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21,
	0x0a, 0x04, 0x70, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x70, 0x65, 0x74,
	0x73, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x74, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x74, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x07, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x75, 0x70, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x50,
	0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x5f, 0x47, 0x49, 0x46, 0x54,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x67, 0x75, 0x69, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x74, 0x66, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55,
	0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4e, 0x54, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x64, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x6f, 0x64, 0x79, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbc, 0x01,
	0x0a, 0x11, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x22, 0x9e, 0x02, 0x0a,
	0x09, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x57,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x0e, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x60, 0x0a,
	0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x39, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a,
	0x0e, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12,
	0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x57, 0x4f, 0x52, 0x4b, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x57,
	0x4f, 0x52, 0x4b, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x24,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x50,
	0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12,
	0x1e, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0e, 0x63, 0x61, 0x72,
	0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x50,
	0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x47, 0x45, 0x54,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x50, 0x45, 0x54,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x50, 0x65, 0x74, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53,
	0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x67, 0x67, 0x67,
	0x75, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x67, 0x67, 0x67,
	0x75, 0x69, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x50, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x64, 0x79, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x64, 0x79, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45, 0x71, 0x75, 0x69, 0x70, 0x50,
	0x6f, 0x73, 0x3a, 0x0d, 0x45, 0x45, 0x51, 0x55, 0x49, 0x50, 0x50, 0x4f, 0x53, 0x5f, 0x4d, 0x49,
	0x4e, 0x52, 0x04, 0x65, 0x70, 0x6f, 0x73, 0x22, 0x78, 0x0a, 0x12, 0x50, 0x65, 0x74, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xbd, 0x01, 0x0a, 0x0f, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55,
	0x49, 0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x62, 0x6f, 0x64, 0x79, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x62,
	0x6f, 0x64, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x65, 0x70, 0x6f, 0x73,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x52, 0x04, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x3a, 0x10, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x72, 0x22, 0xca,
	0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x65, 0x61, 0x72, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x52,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x08, 0x77, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x77, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x52, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x77, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x77, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1d, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x63, 0x61, 0x74, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x63, 0x61, 0x74, 0x69, 0x64, 0x22,
	0xb8, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d,
	0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x58, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x0e, 0x43,
	0x61, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43,
	0x41, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x17, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x61,
	0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x3a, 0x11, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45, 0x71, 0x75, 0x69, 0x70, 0x50, 0x6f, 0x73,
	0x3a, 0x0d, 0x45, 0x45, 0x51, 0x55, 0x49, 0x50, 0x50, 0x4f, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x71, 0x75, 0x69, 0x70, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x71, 0x75, 0x69, 0x70, 0x69, 0x64, 0x22, 0x55,
	0x0a, 0x07, 0x43, 0x61, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x41,
	0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x45, 0x41, 0x54, 0x54, 0x52, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7b, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x69, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69,
	0x64, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x16, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x5f, 0x45,
	0x51, 0x55, 0x49, 0x50, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x11, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02,
	0x6c, 0x76, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x14, 0x43,
	0x61, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x74,
	0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0xd0, 0x01, 0x0a, 0x09, 0x42, 0x6f,
	0x4b, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x14, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x24,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x08, 0x42, 0x6f, 0x4b, 0x69, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x6f, 0x4b, 0x69, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4,
	0x01, 0x0a, 0x14, 0x42, 0x6f, 0x4b, 0x69, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19,
	0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x23, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x42, 0x6f, 0x4b, 0x69, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x55, 0x50, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x33,
	0x0a, 0x09, 0x42, 0x6f, 0x4b, 0x69, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x42, 0x6f, 0x4b, 0x69, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42,
	0x4f, 0x4b, 0x49, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f,
	0x4b, 0x69, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x22,
	0xba, 0x01, 0x0a, 0x16, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x55, 0x70, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49,
	0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x55, 0x50, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x68, 0x0a, 0x09,
	0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x42, 0x6f, 0x4b, 0x69, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64,
	0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x22, 0x32, 0x0a, 0x0e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x55, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x1a, 0x42, 0x6f, 0x4b, 0x69, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x21, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b,
	0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x53, 0x65, 0x74, 0x50, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12,
	0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1e, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x4b, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x2a, 0xb1, 0x0b, 0x0a, 0x08, 0x50, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x50, 0x45, 0x54, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x54,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48,
	0x49, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x45, 0x54,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x47, 0x47, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x45, 0x54, 0x10, 0x08, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45, 0x54, 0x49, 0x4e, 0x46,
	0x4f, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x50, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0a,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4f, 0x46, 0x46,
	0x5f, 0x50, 0x45, 0x54, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x0c, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x47, 0x49, 0x46, 0x54, 0x10, 0x0d, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x10, 0x0e, 0x12,
	0x19, 0x0a, 0x15, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0f, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x10, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x4e, 0x54, 0x46, 0x10, 0x11, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x12, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x13, 0x12, 0x25,
	0x0a, 0x21, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x50, 0x45, 0x54, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x10, 0x15, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x49, 0x56, 0x45,
	0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x17,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x18, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45,
	0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x47, 0x4f, 0x54,
	0x49, 0x54, 0x45, 0x4d, 0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x1a,
	0x12, 0x19, 0x0a, 0x15, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x50,
	0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x1d, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x57, 0x4f,
	0x52, 0x4b, 0x10, 0x1e, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x57, 0x4f, 0x52, 0x4b, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x20, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x10, 0x21, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x22, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x23,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x53, 0x45, 0x10, 0x24, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x25, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x26, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x52, 0x10, 0x27, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x45, 0x41,
	0x52, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x10, 0x29, 0x12, 0x20, 0x0a,
	0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4d,
	0x41, 0x58, 0x53, 0x50, 0x41, 0x43, 0x45, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x2a, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x5f,
	0x45, 0x51, 0x55, 0x49, 0x50, 0x10, 0x2b, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45, 0x54, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x49, 0x4e, 0x46,
	0x4f, 0x10, 0x2c, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x43, 0x41, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x2d, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f,
	0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x2e,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b,
	0x49, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x2f, 0x12,
	0x20, 0x0a, 0x1c, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49,
	0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x10,
	0x30, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f,
	0x4b, 0x49, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x31, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f,
	0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x55, 0x50, 0x10,
	0x32, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f,
	0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x33, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x45, 0x54, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f,
	0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x34, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x45, 0x54, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4b, 0x49, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f,
	0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x35, 0x2a, 0x62, 0x0a, 0x0b,
	0x45, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x03,
	0x2a, 0xd9, 0x03, 0x0a, 0x0c, 0x45, 0x50, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49,
	0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x4c, 0x56, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x45, 0x58, 0x50, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x56, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44,
	0x45, 0x58, 0x50, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x45, 0x58, 0x50, 0x10, 0x05, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x54, 0x49, 0x4d, 0x45, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x48, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x07,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x45, 0x58, 0x43, 0x49, 0x54, 0x45, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x50,
	0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x48, 0x41, 0x50, 0x50,
	0x49, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x50, 0x45, 0x54, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x10, 0x0a,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x4f, 0x55,
	0x43, 0x48, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50,
	0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x43, 0x4b,
	0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46,
	0x45, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x12, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x50, 0x45,
	0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x13, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x14,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4b, 0x49,
	0x4c, 0x4c, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50,
	0x45, 0x54, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x16, 0x2a, 0x9c, 0x01, 0x0a,
	0x0d, 0x45, 0x50, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f,
	0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55,
	0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x46,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f,
	0x50, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x50,
	0x45, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x45, 0x54, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x2a, 0xd4, 0x01, 0x0a, 0x13,
	0x45, 0x50, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52,
	0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x41, 0x43, 0x43, 0x45, 0x50,
	0x54, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50,
	0x54, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56,
	0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x42,
	0x4d, 0x49, 0x54, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x50, 0x45, 0x54, 0x41, 0x44, 0x56,
	0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x58,
	0x10, 0x05, 0x2a, 0xe4, 0x01, 0x0a, 0x12, 0x45, 0x50, 0x65, 0x74, 0x45, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x45,
	0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x50, 0x45, 0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x52, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x45, 0x50, 0x45, 0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45,
	0x4e, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x50, 0x45, 0x54,
	0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x10,
	0x03, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x45, 0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x50, 0x45, 0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x48, 0x45,
	0x41, 0x44, 0x57, 0x45, 0x41, 0x52, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x50, 0x45, 0x54,
	0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x06, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x45, 0x54, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x07, 0x2a, 0x78, 0x0a, 0x0a, 0x45, 0x57, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x57, 0x4f, 0x52, 0x4b,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x57, 0x4f, 0x52, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41,
	0x58, 0x10, 0x04, 0x2a, 0x6a, 0x0a, 0x0d, 0x45, 0x43, 0x61, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x4f, 0x70, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x41, 0x54, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x43, 0x41, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x41, 0x54, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50,
	0x45, 0x52, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x51, 0x55, 0x49, 0x50, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x03, 0x2a,
	0x8d, 0x01, 0x0a, 0x0d, 0x45, 0x42, 0x6f, 0x4b, 0x69, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x42, 0x4f, 0x4b, 0x49, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x42, 0x4f, 0x4b, 0x49, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x45, 0x58, 0x50, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x42, 0x4f, 0x4b, 0x49,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x42, 0x4f, 0x4b, 0x49, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x42, 0x4f, 0x4b, 0x49, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x45, 0x42, 0x4f, 0x4b, 0x49, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05,
}

var (
	file_ScenePet_proto_rawDescOnce sync.Once
	file_ScenePet_proto_rawDescData = file_ScenePet_proto_rawDesc
)

func file_ScenePet_proto_rawDescGZIP() []byte {
	file_ScenePet_proto_rawDescOnce.Do(func() {
		file_ScenePet_proto_rawDescData = protoimpl.X.CompressGZIP(file_ScenePet_proto_rawDescData)
	})
	return file_ScenePet_proto_rawDescData
}

var file_ScenePet_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_ScenePet_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_ScenePet_proto_goTypes = []interface{}{
	(PetParam)(0),                         // 0: Cmd.PetParam
	(EEmployType)(0),                      // 1: Cmd.EEmployType
	(EPetDataType)(0),                     // 2: Cmd.EPetDataType
	(EPetEquipOper)(0),                    // 3: Cmd.EPetEquipOper
	(EPetAdventureStatus)(0),              // 4: Cmd.EPetAdventureStatus
	(EPetEfficiencyType)(0),               // 5: Cmd.EPetEfficiencyType
	(EWorkState)(0),                       // 6: Cmd.EWorkState
	(ECatEquipOper)(0),                    // 7: Cmd.ECatEquipOper
	(EBoKiDataType)(0),                    // 8: Cmd.EBoKiDataType
	(*PetData)(nil),                       // 9: Cmd.PetData
	(*PetList)(nil),                       // 10: Cmd.PetList
	(*WeaponPetSkillData)(nil),            // 11: Cmd.WeaponPetSkillData
	(*WeaponPetData)(nil),                 // 12: Cmd.WeaponPetData
	(*FireCatPetCmd)(nil),                 // 13: Cmd.FireCatPetCmd
	(*HireCatPetCmd)(nil),                 // 14: Cmd.HireCatPetCmd
	(*EggHatchPetCmd)(nil),                // 15: Cmd.EggHatchPetCmd
	(*EggRestorePetCmd)(nil),              // 16: Cmd.EggRestorePetCmd
	(*CatchValuePetCmd)(nil),              // 17: Cmd.CatchValuePetCmd
	(*CatchResultPetCmd)(nil),             // 18: Cmd.CatchResultPetCmd
	(*UserPetData)(nil),                   // 19: Cmd.UserPetData
	(*CatchPetPetCmd)(nil),                // 20: Cmd.CatchPetPetCmd
	(*CatchPetGiftPetCmd)(nil),            // 21: Cmd.CatchPetGiftPetCmd
	(*PetMemberData)(nil),                 // 22: Cmd.PetMemberData
	(*PetInfo)(nil),                       // 23: Cmd.PetInfo
	(*PetExtraBody)(nil),                  // 24: Cmd.PetExtraBody
	(*PetInfoPetCmd)(nil),                 // 25: Cmd.PetInfoPetCmd
	(*PetInfoUpdatePetCmd)(nil),           // 26: Cmd.PetInfoUpdatePetCmd
	(*PetOffPetCmd)(nil),                  // 27: Cmd.PetOffPetCmd
	(*GetGiftPetCmd)(nil),                 // 28: Cmd.GetGiftPetCmd
	(*EquipOperPetCmd)(nil),               // 29: Cmd.EquipOperPetCmd
	(*EquipUpdatePetCmd)(nil),             // 30: Cmd.EquipUpdatePetCmd
	(*PetAdventureStep)(nil),              // 31: Cmd.PetAdventureStep
	(*PetEfficiencyInfo)(nil),             // 32: Cmd.PetEfficiencyInfo
	(*PetMonsterRewardInfo)(nil),          // 33: Cmd.PetMonsterRewardInfo
	(*PetAdventureItem)(nil),              // 34: Cmd.PetAdventureItem
	(*PetAdventureTimes)(nil),             // 35: Cmd.PetAdventureTimes
	(*QueryPetAdventureListPetCmd)(nil),   // 36: Cmd.QueryPetAdventureListPetCmd
	(*PetAdventureResultNtfPetCmd)(nil),   // 37: Cmd.PetAdventureResultNtfPetCmd
	(*StartAdventurePetCmd)(nil),          // 38: Cmd.StartAdventurePetCmd
	(*GetAdventureRewardPetCmd)(nil),      // 39: Cmd.GetAdventureRewardPetCmd
	(*QueryBattlePetCmd)(nil),             // 40: Cmd.QueryBattlePetCmd
	(*HandPetPetCmd)(nil),                 // 41: Cmd.HandPetPetCmd
	(*GiveGiftPetCmd)(nil),                // 42: Cmd.GiveGiftPetCmd
	(*UnlockNtfPetCmd)(nil),               // 43: Cmd.UnlockNtfPetCmd
	(*ResetSkillPetCmd)(nil),              // 44: Cmd.ResetSkillPetCmd
	(*ChangeNamePetCmd)(nil),              // 45: Cmd.ChangeNamePetCmd
	(*SwitchSkillPetCmd)(nil),             // 46: Cmd.SwitchSkillPetCmd
	(*WorkSpace)(nil),                     // 47: Cmd.WorkSpace
	(*WorkPetExtra)(nil),                  // 48: Cmd.WorkPetExtra
	(*WorkDayReward)(nil),                 // 49: Cmd.WorkDayReward
	(*StartWorkPetCmd)(nil),               // 50: Cmd.StartWorkPetCmd
	(*StopWorkPetCmd)(nil),                // 51: Cmd.StopWorkPetCmd
	(*QueryPetWorkDataPetCmd)(nil),        // 52: Cmd.QueryPetWorkDataPetCmd
	(*GetPetWorkRewardPetCmd)(nil),        // 53: Cmd.GetPetWorkRewardPetCmd
	(*WorkSpaceUpdate)(nil),               // 54: Cmd.WorkSpaceUpdate
	(*PetExtraUpdatePetCmd)(nil),          // 55: Cmd.PetExtraUpdatePetCmd
	(*ComposePetCmd)(nil),                 // 56: Cmd.ComposePetCmd
	(*SpecPetEquip)(nil),                  // 57: Cmd.SpecPetEquip
	(*PetEquipUnlockInfo)(nil),            // 58: Cmd.PetEquipUnlockInfo
	(*PetEquipListCmd)(nil),               // 59: Cmd.PetEquipListCmd
	(*UpdatePetEquipListCmd)(nil),         // 60: Cmd.UpdatePetEquipListCmd
	(*PetWearInfo)(nil),                   // 61: Cmd.PetWearInfo
	(*ChangeWearPetCmd)(nil),              // 62: Cmd.ChangeWearPetCmd
	(*UpdateWearPetCmd)(nil),              // 63: Cmd.UpdateWearPetCmd
	(*ReplaceCatPetCmd)(nil),              // 64: Cmd.ReplaceCatPetCmd
	(*WorkSpaceMaxCountUpdatePetCmd)(nil), // 65: Cmd.WorkSpaceMaxCountUpdatePetCmd
	(*CatEquipPetCmd)(nil),                // 66: Cmd.CatEquipPetCmd
	(*CatAttr)(nil),                       // 67: Cmd.CatAttr
	(*CatEquipInfo)(nil),                  // 68: Cmd.CatEquipInfo
	(*CatEquipInfoPetCmd)(nil),            // 69: Cmd.CatEquipInfoPetCmd
	(*CatSkillOptionPetCmd)(nil),          // 70: Cmd.CatSkillOptionPetCmd
	(*BoKiState)(nil),                     // 71: Cmd.BoKiState
	(*BoKiStateQueryPetCmd)(nil),          // 72: Cmd.BoKiStateQueryPetCmd
	(*BoKiData)(nil),                      // 73: Cmd.BoKiData
	(*BoKiDataUpdatePetCmd)(nil),          // 74: Cmd.BoKiDataUpdatePetCmd
	(*BoKiEquipLevelUpPetCmd)(nil),        // 75: Cmd.BoKiEquipLevelUpPetCmd
	(*BoKiEquip)(nil),                     // 76: Cmd.BoKiEquip
	(*BoKiEquipUpdatePetCmd)(nil),         // 77: Cmd.BoKiEquipUpdatePetCmd
	(*BoKiSkillLevelUpPetCmd)(nil),        // 78: Cmd.BoKiSkillLevelUpPetCmd
	(*BoKiSkill)(nil),                     // 79: Cmd.BoKiSkill
	(*BoKiSkillUpdatePetCmd)(nil),         // 80: Cmd.BoKiSkillUpdatePetCmd
	(*BoKiSkillInUse)(nil),                // 81: Cmd.BoKiSkillInUse
	(*BoKiSkillInUseUpdatePetCmd)(nil),    // 82: Cmd.BoKiSkillInUseUpdatePetCmd
	(*BoKiSkillInUseSetPetCmd)(nil),       // 83: Cmd.BoKiSkillInUseSetPetCmd
	(Command)(0),                          // 84: Cmd.Command
	(*EggData)(nil),                       // 85: Cmd.EggData
	(*ItemData)(nil),                      // 86: Cmd.ItemData
	(EEquipPos)(0),                        // 87: Cmd.EEquipPos
	(EAttrType)(0),                        // 88: Cmd.EAttrType
}
var file_ScenePet_proto_depIdxs = []int32{
	84,  // 0: Cmd.PetList.cmd:type_name -> Cmd.Command
	9,   // 1: Cmd.PetList.datas:type_name -> Cmd.PetData
	84,  // 2: Cmd.FireCatPetCmd.cmd:type_name -> Cmd.Command
	0,   // 3: Cmd.FireCatPetCmd.param:type_name -> Cmd.PetParam
	84,  // 4: Cmd.HireCatPetCmd.cmd:type_name -> Cmd.Command
	0,   // 5: Cmd.HireCatPetCmd.param:type_name -> Cmd.PetParam
	1,   // 6: Cmd.HireCatPetCmd.etype:type_name -> Cmd.EEmployType
	84,  // 7: Cmd.EggHatchPetCmd.cmd:type_name -> Cmd.Command
	0,   // 8: Cmd.EggHatchPetCmd.param:type_name -> Cmd.PetParam
	84,  // 9: Cmd.EggRestorePetCmd.cmd:type_name -> Cmd.Command
	0,   // 10: Cmd.EggRestorePetCmd.param:type_name -> Cmd.PetParam
	84,  // 11: Cmd.CatchValuePetCmd.cmd:type_name -> Cmd.Command
	0,   // 12: Cmd.CatchValuePetCmd.param:type_name -> Cmd.PetParam
	84,  // 13: Cmd.CatchResultPetCmd.cmd:type_name -> Cmd.Command
	0,   // 14: Cmd.CatchResultPetCmd.param:type_name -> Cmd.PetParam
	85,  // 15: Cmd.UserPetData.basedata:type_name -> Cmd.EggData
	84,  // 16: Cmd.CatchPetPetCmd.cmd:type_name -> Cmd.Command
	0,   // 17: Cmd.CatchPetPetCmd.param:type_name -> Cmd.PetParam
	84,  // 18: Cmd.CatchPetGiftPetCmd.cmd:type_name -> Cmd.Command
	0,   // 19: Cmd.CatchPetGiftPetCmd.param:type_name -> Cmd.PetParam
	2,   // 20: Cmd.PetMemberData.etype:type_name -> Cmd.EPetDataType
	86,  // 21: Cmd.PetInfo.equips:type_name -> Cmd.ItemData
	84,  // 22: Cmd.PetInfoPetCmd.cmd:type_name -> Cmd.Command
	0,   // 23: Cmd.PetInfoPetCmd.param:type_name -> Cmd.PetParam
	23,  // 24: Cmd.PetInfoPetCmd.petinfo:type_name -> Cmd.PetInfo
	84,  // 25: Cmd.PetInfoUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 26: Cmd.PetInfoUpdatePetCmd.param:type_name -> Cmd.PetParam
	22,  // 27: Cmd.PetInfoUpdatePetCmd.datas:type_name -> Cmd.PetMemberData
	84,  // 28: Cmd.PetOffPetCmd.cmd:type_name -> Cmd.Command
	0,   // 29: Cmd.PetOffPetCmd.param:type_name -> Cmd.PetParam
	84,  // 30: Cmd.GetGiftPetCmd.cmd:type_name -> Cmd.Command
	0,   // 31: Cmd.GetGiftPetCmd.param:type_name -> Cmd.PetParam
	84,  // 32: Cmd.EquipOperPetCmd.cmd:type_name -> Cmd.Command
	0,   // 33: Cmd.EquipOperPetCmd.param:type_name -> Cmd.PetParam
	3,   // 34: Cmd.EquipOperPetCmd.oper:type_name -> Cmd.EPetEquipOper
	84,  // 35: Cmd.EquipUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 36: Cmd.EquipUpdatePetCmd.param:type_name -> Cmd.PetParam
	86,  // 37: Cmd.EquipUpdatePetCmd.update:type_name -> Cmd.ItemData
	86,  // 38: Cmd.PetAdventureStep.items:type_name -> Cmd.ItemData
	5,   // 39: Cmd.PetEfficiencyInfo.etype:type_name -> Cmd.EPetEfficiencyType
	86,  // 40: Cmd.PetMonsterRewardInfo.items:type_name -> Cmd.ItemData
	4,   // 41: Cmd.PetAdventureItem.status:type_name -> Cmd.EPetAdventureStatus
	86,  // 42: Cmd.PetAdventureItem.eggs:type_name -> Cmd.ItemData
	31,  // 43: Cmd.PetAdventureItem.steps:type_name -> Cmd.PetAdventureStep
	86,  // 44: Cmd.PetAdventureItem.raresreward:type_name -> Cmd.ItemData
	32,  // 45: Cmd.PetAdventureItem.eff:type_name -> Cmd.PetEfficiencyInfo
	33,  // 46: Cmd.PetAdventureItem.rewardinfo:type_name -> Cmd.PetMonsterRewardInfo
	86,  // 47: Cmd.PetAdventureItem.extrarewardinfo:type_name -> Cmd.ItemData
	84,  // 48: Cmd.QueryPetAdventureListPetCmd.cmd:type_name -> Cmd.Command
	0,   // 49: Cmd.QueryPetAdventureListPetCmd.param:type_name -> Cmd.PetParam
	34,  // 50: Cmd.QueryPetAdventureListPetCmd.items:type_name -> Cmd.PetAdventureItem
	35,  // 51: Cmd.QueryPetAdventureListPetCmd.times:type_name -> Cmd.PetAdventureTimes
	84,  // 52: Cmd.PetAdventureResultNtfPetCmd.cmd:type_name -> Cmd.Command
	0,   // 53: Cmd.PetAdventureResultNtfPetCmd.param:type_name -> Cmd.PetParam
	34,  // 54: Cmd.PetAdventureResultNtfPetCmd.item:type_name -> Cmd.PetAdventureItem
	35,  // 55: Cmd.PetAdventureResultNtfPetCmd.times:type_name -> Cmd.PetAdventureTimes
	84,  // 56: Cmd.StartAdventurePetCmd.cmd:type_name -> Cmd.Command
	0,   // 57: Cmd.StartAdventurePetCmd.param:type_name -> Cmd.PetParam
	84,  // 58: Cmd.GetAdventureRewardPetCmd.cmd:type_name -> Cmd.Command
	0,   // 59: Cmd.GetAdventureRewardPetCmd.param:type_name -> Cmd.PetParam
	84,  // 60: Cmd.QueryBattlePetCmd.cmd:type_name -> Cmd.Command
	0,   // 61: Cmd.QueryBattlePetCmd.param:type_name -> Cmd.PetParam
	86,  // 62: Cmd.QueryBattlePetCmd.pets:type_name -> Cmd.ItemData
	84,  // 63: Cmd.HandPetPetCmd.cmd:type_name -> Cmd.Command
	0,   // 64: Cmd.HandPetPetCmd.param:type_name -> Cmd.PetParam
	84,  // 65: Cmd.GiveGiftPetCmd.cmd:type_name -> Cmd.Command
	0,   // 66: Cmd.GiveGiftPetCmd.param:type_name -> Cmd.PetParam
	84,  // 67: Cmd.UnlockNtfPetCmd.cmd:type_name -> Cmd.Command
	0,   // 68: Cmd.UnlockNtfPetCmd.param:type_name -> Cmd.PetParam
	84,  // 69: Cmd.ResetSkillPetCmd.cmd:type_name -> Cmd.Command
	0,   // 70: Cmd.ResetSkillPetCmd.param:type_name -> Cmd.PetParam
	84,  // 71: Cmd.ChangeNamePetCmd.cmd:type_name -> Cmd.Command
	0,   // 72: Cmd.ChangeNamePetCmd.param:type_name -> Cmd.PetParam
	84,  // 73: Cmd.SwitchSkillPetCmd.cmd:type_name -> Cmd.Command
	0,   // 74: Cmd.SwitchSkillPetCmd.param:type_name -> Cmd.PetParam
	6,   // 75: Cmd.WorkSpace.state:type_name -> Cmd.EWorkState
	86,  // 76: Cmd.WorkSpace.datas:type_name -> Cmd.ItemData
	84,  // 77: Cmd.StartWorkPetCmd.cmd:type_name -> Cmd.Command
	0,   // 78: Cmd.StartWorkPetCmd.param:type_name -> Cmd.PetParam
	84,  // 79: Cmd.StopWorkPetCmd.cmd:type_name -> Cmd.Command
	0,   // 80: Cmd.StopWorkPetCmd.param:type_name -> Cmd.PetParam
	84,  // 81: Cmd.QueryPetWorkDataPetCmd.cmd:type_name -> Cmd.Command
	0,   // 82: Cmd.QueryPetWorkDataPetCmd.param:type_name -> Cmd.PetParam
	47,  // 83: Cmd.QueryPetWorkDataPetCmd.datas:type_name -> Cmd.WorkSpace
	48,  // 84: Cmd.QueryPetWorkDataPetCmd.extras:type_name -> Cmd.WorkPetExtra
	84,  // 85: Cmd.GetPetWorkRewardPetCmd.cmd:type_name -> Cmd.Command
	0,   // 86: Cmd.GetPetWorkRewardPetCmd.param:type_name -> Cmd.PetParam
	84,  // 87: Cmd.WorkSpaceUpdate.cmd:type_name -> Cmd.Command
	0,   // 88: Cmd.WorkSpaceUpdate.param:type_name -> Cmd.PetParam
	47,  // 89: Cmd.WorkSpaceUpdate.updates:type_name -> Cmd.WorkSpace
	84,  // 90: Cmd.PetExtraUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 91: Cmd.PetExtraUpdatePetCmd.param:type_name -> Cmd.PetParam
	48,  // 92: Cmd.PetExtraUpdatePetCmd.updates:type_name -> Cmd.WorkPetExtra
	84,  // 93: Cmd.ComposePetCmd.cmd:type_name -> Cmd.Command
	0,   // 94: Cmd.ComposePetCmd.param:type_name -> Cmd.PetParam
	87,  // 95: Cmd.SpecPetEquip.epos:type_name -> Cmd.EEquipPos
	57,  // 96: Cmd.PetEquipUnlockInfo.bodyitems:type_name -> Cmd.SpecPetEquip
	84,  // 97: Cmd.PetEquipListCmd.cmd:type_name -> Cmd.Command
	0,   // 98: Cmd.PetEquipListCmd.param:type_name -> Cmd.PetParam
	58,  // 99: Cmd.PetEquipListCmd.unlockinfo:type_name -> Cmd.PetEquipUnlockInfo
	84,  // 100: Cmd.UpdatePetEquipListCmd.cmd:type_name -> Cmd.Command
	0,   // 101: Cmd.UpdatePetEquipListCmd.param:type_name -> Cmd.PetParam
	57,  // 102: Cmd.UpdatePetEquipListCmd.addbodyitems:type_name -> Cmd.SpecPetEquip
	87,  // 103: Cmd.PetWearInfo.epos:type_name -> Cmd.EEquipPos
	3,   // 104: Cmd.PetWearInfo.oper:type_name -> Cmd.EPetEquipOper
	84,  // 105: Cmd.ChangeWearPetCmd.cmd:type_name -> Cmd.Command
	0,   // 106: Cmd.ChangeWearPetCmd.param:type_name -> Cmd.PetParam
	61,  // 107: Cmd.ChangeWearPetCmd.wearinfo:type_name -> Cmd.PetWearInfo
	84,  // 108: Cmd.UpdateWearPetCmd.cmd:type_name -> Cmd.Command
	0,   // 109: Cmd.UpdateWearPetCmd.param:type_name -> Cmd.PetParam
	61,  // 110: Cmd.UpdateWearPetCmd.wearinfo:type_name -> Cmd.PetWearInfo
	84,  // 111: Cmd.ReplaceCatPetCmd.cmd:type_name -> Cmd.Command
	0,   // 112: Cmd.ReplaceCatPetCmd.param:type_name -> Cmd.PetParam
	84,  // 113: Cmd.WorkSpaceMaxCountUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 114: Cmd.WorkSpaceMaxCountUpdatePetCmd.param:type_name -> Cmd.PetParam
	84,  // 115: Cmd.CatEquipPetCmd.cmd:type_name -> Cmd.Command
	0,   // 116: Cmd.CatEquipPetCmd.param:type_name -> Cmd.PetParam
	7,   // 117: Cmd.CatEquipPetCmd.oper:type_name -> Cmd.ECatEquipOper
	87,  // 118: Cmd.CatEquipPetCmd.pos:type_name -> Cmd.EEquipPos
	88,  // 119: Cmd.CatAttr.type:type_name -> Cmd.EAttrType
	84,  // 120: Cmd.CatEquipInfoPetCmd.cmd:type_name -> Cmd.Command
	0,   // 121: Cmd.CatEquipInfoPetCmd.param:type_name -> Cmd.PetParam
	68,  // 122: Cmd.CatEquipInfoPetCmd.infos:type_name -> Cmd.CatEquipInfo
	84,  // 123: Cmd.CatSkillOptionPetCmd.cmd:type_name -> Cmd.Command
	0,   // 124: Cmd.CatSkillOptionPetCmd.param:type_name -> Cmd.PetParam
	76,  // 125: Cmd.BoKiState.equips:type_name -> Cmd.BoKiEquip
	79,  // 126: Cmd.BoKiState.skills:type_name -> Cmd.BoKiSkill
	81,  // 127: Cmd.BoKiState.skill_in_use:type_name -> Cmd.BoKiSkillInUse
	84,  // 128: Cmd.BoKiStateQueryPetCmd.cmd:type_name -> Cmd.Command
	0,   // 129: Cmd.BoKiStateQueryPetCmd.param:type_name -> Cmd.PetParam
	71,  // 130: Cmd.BoKiStateQueryPetCmd.state:type_name -> Cmd.BoKiState
	8,   // 131: Cmd.BoKiData.type:type_name -> Cmd.EBoKiDataType
	84,  // 132: Cmd.BoKiDataUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 133: Cmd.BoKiDataUpdatePetCmd.param:type_name -> Cmd.PetParam
	73,  // 134: Cmd.BoKiDataUpdatePetCmd.datas:type_name -> Cmd.BoKiData
	84,  // 135: Cmd.BoKiEquipLevelUpPetCmd.cmd:type_name -> Cmd.Command
	0,   // 136: Cmd.BoKiEquipLevelUpPetCmd.param:type_name -> Cmd.PetParam
	84,  // 137: Cmd.BoKiEquipUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 138: Cmd.BoKiEquipUpdatePetCmd.param:type_name -> Cmd.PetParam
	76,  // 139: Cmd.BoKiEquipUpdatePetCmd.equips:type_name -> Cmd.BoKiEquip
	84,  // 140: Cmd.BoKiSkillLevelUpPetCmd.cmd:type_name -> Cmd.Command
	0,   // 141: Cmd.BoKiSkillLevelUpPetCmd.param:type_name -> Cmd.PetParam
	79,  // 142: Cmd.BoKiSkillLevelUpPetCmd.skills:type_name -> Cmd.BoKiSkill
	84,  // 143: Cmd.BoKiSkillUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 144: Cmd.BoKiSkillUpdatePetCmd.param:type_name -> Cmd.PetParam
	79,  // 145: Cmd.BoKiSkillUpdatePetCmd.skills:type_name -> Cmd.BoKiSkill
	84,  // 146: Cmd.BoKiSkillInUseUpdatePetCmd.cmd:type_name -> Cmd.Command
	0,   // 147: Cmd.BoKiSkillInUseUpdatePetCmd.param:type_name -> Cmd.PetParam
	81,  // 148: Cmd.BoKiSkillInUseUpdatePetCmd.skills:type_name -> Cmd.BoKiSkillInUse
	84,  // 149: Cmd.BoKiSkillInUseSetPetCmd.cmd:type_name -> Cmd.Command
	0,   // 150: Cmd.BoKiSkillInUseSetPetCmd.param:type_name -> Cmd.PetParam
	81,  // 151: Cmd.BoKiSkillInUseSetPetCmd.skill:type_name -> Cmd.BoKiSkillInUse
	152, // [152:152] is the sub-list for method output_type
	152, // [152:152] is the sub-list for method input_type
	152, // [152:152] is the sub-list for extension type_name
	152, // [152:152] is the sub-list for extension extendee
	0,   // [0:152] is the sub-list for field type_name
}

func init() { file_ScenePet_proto_init() }
func file_ScenePet_proto_init() {
	if File_ScenePet_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneItem_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ScenePet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPetSkillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireCatPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HireCatPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EggHatchPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EggRestorePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchValuePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchResultPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchPetPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchPetGiftPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetExtraBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetInfoPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetInfoUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetOffPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGiftPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipOperPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAdventureStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetEfficiencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetMonsterRewardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAdventureItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAdventureTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPetAdventureListPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAdventureResultNtfPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAdventurePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdventureRewardPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBattlePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandPetPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveGiftPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockNtfPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetSkillPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNamePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchSkillPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkPetExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkDayReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWorkPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopWorkPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPetWorkDataPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPetWorkRewardPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSpaceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetExtraUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecPetEquip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetEquipUnlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetEquipListCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePetEquipListCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetWearInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWearPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWearPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceCatPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSpaceMaxCountUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatEquipPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatEquipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatEquipInfoPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatSkillOptionPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiStateQueryPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiDataUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiEquipLevelUpPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiEquip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiEquipUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkillLevelUpPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkillUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkillInUse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkillInUseUpdatePetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ScenePet_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoKiSkillInUseSetPetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ScenePet_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ScenePet_proto_goTypes,
		DependencyIndexes: file_ScenePet_proto_depIdxs,
		EnumInfos:         file_ScenePet_proto_enumTypes,
		MessageInfos:      file_ScenePet_proto_msgTypes,
	}.Build()
	File_ScenePet_proto = out.File
	file_ScenePet_proto_rawDesc = nil
	file_ScenePet_proto_goTypes = nil
	file_ScenePet_proto_depIdxs = nil
}
