// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: UserAfkCmd.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserAfkCmdParam int32

const (
	UserAfkCmdParam_USER_AFKCMD_REQ_AFK       UserAfkCmdParam = 1
	UserAfkCmdParam_USER_AFKCMD_RET_AFK       UserAfkCmdParam = 2
	UserAfkCmdParam_USER_AFKCMD_SYNC_STATINFO UserAfkCmdParam = 3
)

// Enum value maps for UserAfkCmdParam.
var (
	UserAfkCmdParam_name = map[int32]string{
		1: "USER_AFKCMD_REQ_AFK",
		2: "USER_AFKCMD_RET_AFK",
		3: "USER_AFKCMD_SYNC_STATINFO",
	}
	UserAfkCmdParam_value = map[string]int32{
		"USER_AFKCMD_REQ_AFK":       1,
		"USER_AFKCMD_RET_AFK":       2,
		"USER_AFKCMD_SYNC_STATINFO": 3,
	}
)

func (x UserAfkCmdParam) Enum() *UserAfkCmdParam {
	p := new(UserAfkCmdParam)
	*p = x
	return p
}

func (x UserAfkCmdParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAfkCmdParam) Descriptor() protoreflect.EnumDescriptor {
	return file_UserAfkCmd_proto_enumTypes[0].Descriptor()
}

func (UserAfkCmdParam) Type() protoreflect.EnumType {
	return &file_UserAfkCmd_proto_enumTypes[0]
}

func (x UserAfkCmdParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserAfkCmdParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserAfkCmdParam(num)
	return nil
}

// Deprecated: Use UserAfkCmdParam.Descriptor instead.
func (UserAfkCmdParam) EnumDescriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{0}
}

type ReqAfkUserAfkCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=74" json:"cmd,omitempty"`
	Param       *UserAfkCmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.UserAfkCmdParam,def=1" json:"param,omitempty"`
	Timelen     *uint32          `protobuf:"varint,3,opt,name=timelen" json:"timelen,omitempty"`
	Inplace     *bool            `protobuf:"varint,4,opt,name=inplace" json:"inplace,omitempty"`
	ProtectTeam *bool            `protobuf:"varint,5,opt,name=protect_team,json=protectTeam" json:"protect_team,omitempty"`
	Monsterids  []uint32         `protobuf:"varint,6,rep,name=monsterids" json:"monsterids,omitempty"`
}

// Default values for ReqAfkUserAfkCmd fields.
const (
	Default_ReqAfkUserAfkCmd_Cmd   = Command_USER_AFK_PROTOCMD
	Default_ReqAfkUserAfkCmd_Param = UserAfkCmdParam_USER_AFKCMD_REQ_AFK
)

func (x *ReqAfkUserAfkCmd) Reset() {
	*x = ReqAfkUserAfkCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAfkUserAfkCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAfkUserAfkCmd) ProtoMessage() {}

func (x *ReqAfkUserAfkCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAfkUserAfkCmd.ProtoReflect.Descriptor instead.
func (*ReqAfkUserAfkCmd) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{0}
}

func (x *ReqAfkUserAfkCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReqAfkUserAfkCmd_Cmd
}

func (x *ReqAfkUserAfkCmd) GetParam() UserAfkCmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReqAfkUserAfkCmd_Param
}

func (x *ReqAfkUserAfkCmd) GetTimelen() uint32 {
	if x != nil && x.Timelen != nil {
		return *x.Timelen
	}
	return 0
}

func (x *ReqAfkUserAfkCmd) GetInplace() bool {
	if x != nil && x.Inplace != nil {
		return *x.Inplace
	}
	return false
}

func (x *ReqAfkUserAfkCmd) GetProtectTeam() bool {
	if x != nil && x.ProtectTeam != nil {
		return *x.ProtectTeam
	}
	return false
}

func (x *ReqAfkUserAfkCmd) GetMonsterids() []uint32 {
	if x != nil {
		return x.Monsterids
	}
	return nil
}

type RetAfkUserAfkCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=74" json:"cmd,omitempty"`
	Param *UserAfkCmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.UserAfkCmdParam,def=2" json:"param,omitempty"`
	Ret   *bool            `protobuf:"varint,3,opt,name=ret" json:"ret,omitempty"`
}

// Default values for RetAfkUserAfkCmd fields.
const (
	Default_RetAfkUserAfkCmd_Cmd   = Command_USER_AFK_PROTOCMD
	Default_RetAfkUserAfkCmd_Param = UserAfkCmdParam_USER_AFKCMD_RET_AFK
)

func (x *RetAfkUserAfkCmd) Reset() {
	*x = RetAfkUserAfkCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetAfkUserAfkCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetAfkUserAfkCmd) ProtoMessage() {}

func (x *RetAfkUserAfkCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetAfkUserAfkCmd.ProtoReflect.Descriptor instead.
func (*RetAfkUserAfkCmd) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{1}
}

func (x *RetAfkUserAfkCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RetAfkUserAfkCmd_Cmd
}

func (x *RetAfkUserAfkCmd) GetParam() UserAfkCmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RetAfkUserAfkCmd_Param
}

func (x *RetAfkUserAfkCmd) GetRet() bool {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return false
}

type MoneyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype *EMoneyType `protobuf:"varint,1,opt,name=etype,enum=Cmd.EMoneyType" json:"etype,omitempty"`
	Value *uint32     `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *MoneyData) Reset() {
	*x = MoneyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyData) ProtoMessage() {}

func (x *MoneyData) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyData.ProtoReflect.Descriptor instead.
func (*MoneyData) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{2}
}

func (x *MoneyData) GetEtype() EMoneyType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return EMoneyType_EMONEYTYPE_MIN
}

func (x *MoneyData) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type AfkKillInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monsterid *uint32 `protobuf:"varint,1,opt,name=monsterid" json:"monsterid,omitempty"`
	Count     *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *AfkKillInfo) Reset() {
	*x = AfkKillInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AfkKillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfkKillInfo) ProtoMessage() {}

func (x *AfkKillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfkKillInfo.ProtoReflect.Descriptor instead.
func (*AfkKillInfo) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{3}
}

func (x *AfkKillInfo) GetMonsterid() uint32 {
	if x != nil && x.Monsterid != nil {
		return *x.Monsterid
	}
	return 0
}

func (x *AfkKillInfo) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type UserAfkStatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Baseexp    *int32         `protobuf:"varint,1,opt,name=baseexp" json:"baseexp,omitempty"`
	Jobexp     *int32         `protobuf:"varint,2,opt,name=jobexp" json:"jobexp,omitempty"`
	Items      []*ItemInfo    `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	Moneys     []*MoneyData   `protobuf:"bytes,4,rep,name=moneys" json:"moneys,omitempty"`
	ExtraZeny  *uint32        `protobuf:"varint,5,opt,name=extra_zeny,json=extraZeny" json:"extra_zeny,omitempty"`
	ExtraBase  *uint32        `protobuf:"varint,6,opt,name=extra_base,json=extraBase" json:"extra_base,omitempty"`
	ExtraJob   *uint32        `protobuf:"varint,7,opt,name=extra_job,json=extraJob" json:"extra_job,omitempty"`
	ExtraTime  *uint32        `protobuf:"varint,8,opt,name=extra_time,json=extraTime" json:"extra_time,omitempty"`
	Killinfo   []*AfkKillInfo `protobuf:"bytes,9,rep,name=killinfo" json:"killinfo,omitempty"`
	BeKillinfo []*AfkKillInfo `protobuf:"bytes,10,rep,name=be_killinfo,json=beKillinfo" json:"be_killinfo,omitempty"`
}

func (x *UserAfkStatData) Reset() {
	*x = UserAfkStatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAfkStatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAfkStatData) ProtoMessage() {}

func (x *UserAfkStatData) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAfkStatData.ProtoReflect.Descriptor instead.
func (*UserAfkStatData) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{4}
}

func (x *UserAfkStatData) GetBaseexp() int32 {
	if x != nil && x.Baseexp != nil {
		return *x.Baseexp
	}
	return 0
}

func (x *UserAfkStatData) GetJobexp() int32 {
	if x != nil && x.Jobexp != nil {
		return *x.Jobexp
	}
	return 0
}

func (x *UserAfkStatData) GetItems() []*ItemInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UserAfkStatData) GetMoneys() []*MoneyData {
	if x != nil {
		return x.Moneys
	}
	return nil
}

func (x *UserAfkStatData) GetExtraZeny() uint32 {
	if x != nil && x.ExtraZeny != nil {
		return *x.ExtraZeny
	}
	return 0
}

func (x *UserAfkStatData) GetExtraBase() uint32 {
	if x != nil && x.ExtraBase != nil {
		return *x.ExtraBase
	}
	return 0
}

func (x *UserAfkStatData) GetExtraJob() uint32 {
	if x != nil && x.ExtraJob != nil {
		return *x.ExtraJob
	}
	return 0
}

func (x *UserAfkStatData) GetExtraTime() uint32 {
	if x != nil && x.ExtraTime != nil {
		return *x.ExtraTime
	}
	return 0
}

func (x *UserAfkStatData) GetKillinfo() []*AfkKillInfo {
	if x != nil {
		return x.Killinfo
	}
	return nil
}

func (x *UserAfkStatData) GetBeKillinfo() []*AfkKillInfo {
	if x != nil {
		return x.BeKillinfo
	}
	return nil
}

type SyncStatInfoAfkCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=74" json:"cmd,omitempty"`
	Param    *UserAfkCmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.UserAfkCmdParam,def=3" json:"param,omitempty"`
	Statdata *UserAfkStatData `protobuf:"bytes,3,opt,name=statdata" json:"statdata,omitempty"`
}

// Default values for SyncStatInfoAfkCmd fields.
const (
	Default_SyncStatInfoAfkCmd_Cmd   = Command_USER_AFK_PROTOCMD
	Default_SyncStatInfoAfkCmd_Param = UserAfkCmdParam_USER_AFKCMD_SYNC_STATINFO
)

func (x *SyncStatInfoAfkCmd) Reset() {
	*x = SyncStatInfoAfkCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserAfkCmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatInfoAfkCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatInfoAfkCmd) ProtoMessage() {}

func (x *SyncStatInfoAfkCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserAfkCmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatInfoAfkCmd.ProtoReflect.Descriptor instead.
func (*SyncStatInfoAfkCmd) Descriptor() ([]byte, []int) {
	return file_UserAfkCmd_proto_rawDescGZIP(), []int{5}
}

func (x *SyncStatInfoAfkCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SyncStatInfoAfkCmd_Cmd
}

func (x *SyncStatInfoAfkCmd) GetParam() UserAfkCmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SyncStatInfoAfkCmd_Param
}

func (x *SyncStatInfoAfkCmd) GetStatdata() *UserAfkStatData {
	if x != nil {
		return x.Statdata
	}
	return nil
}

var File_UserAfkCmd_proto protoreflect.FileDescriptor

var file_UserAfkCmd_proto_rawDesc = []byte{
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x41,
	0x66, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x12, 0x31, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46,
	0x4b, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x43, 0x4d,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x41, 0x46, 0x4b, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x41,
	0x66, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x12, 0x31, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46,
	0x4b, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x43, 0x4d,
	0x44, 0x5f, 0x52, 0x45, 0x54, 0x5f, 0x41, 0x46, 0x4b, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x22, 0x48, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x25, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x0b,
	0x41, 0x66, 0x6b, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xeb, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x65, 0x78, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x65, 0x78, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6a,
	0x6f, 0x62, 0x65, 0x78, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x7a, 0x65, 0x6e, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4a, 0x6f, 0x62, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x66, 0x6b, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0b, 0x62, 0x65,
	0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x66, 0x6b, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x62, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xc0, 0x01,
	0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x66,
	0x6b, 0x43, 0x6d, 0x64, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x30,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x62, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x6b, 0x43, 0x6d, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x43,
	0x4d, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x41, 0x46, 0x4b, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46, 0x4b, 0x43, 0x4d, 0x44, 0x5f, 0x52, 0x45, 0x54, 0x5f,
	0x41, 0x46, 0x4b, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x46,
	0x4b, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x03,
}

var (
	file_UserAfkCmd_proto_rawDescOnce sync.Once
	file_UserAfkCmd_proto_rawDescData = file_UserAfkCmd_proto_rawDesc
)

func file_UserAfkCmd_proto_rawDescGZIP() []byte {
	file_UserAfkCmd_proto_rawDescOnce.Do(func() {
		file_UserAfkCmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_UserAfkCmd_proto_rawDescData)
	})
	return file_UserAfkCmd_proto_rawDescData
}

var file_UserAfkCmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_UserAfkCmd_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_UserAfkCmd_proto_goTypes = []interface{}{
	(UserAfkCmdParam)(0),       // 0: Cmd.UserAfkCmdParam
	(*ReqAfkUserAfkCmd)(nil),   // 1: Cmd.ReqAfkUserAfkCmd
	(*RetAfkUserAfkCmd)(nil),   // 2: Cmd.RetAfkUserAfkCmd
	(*MoneyData)(nil),          // 3: Cmd.MoneyData
	(*AfkKillInfo)(nil),        // 4: Cmd.AfkKillInfo
	(*UserAfkStatData)(nil),    // 5: Cmd.UserAfkStatData
	(*SyncStatInfoAfkCmd)(nil), // 6: Cmd.SyncStatInfoAfkCmd
	(Command)(0),               // 7: Cmd.Command
	(EMoneyType)(0),            // 8: Cmd.EMoneyType
	(*ItemInfo)(nil),           // 9: Cmd.ItemInfo
}
var file_UserAfkCmd_proto_depIdxs = []int32{
	7,  // 0: Cmd.ReqAfkUserAfkCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.ReqAfkUserAfkCmd.param:type_name -> Cmd.UserAfkCmdParam
	7,  // 2: Cmd.RetAfkUserAfkCmd.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.RetAfkUserAfkCmd.param:type_name -> Cmd.UserAfkCmdParam
	8,  // 4: Cmd.MoneyData.etype:type_name -> Cmd.EMoneyType
	9,  // 5: Cmd.UserAfkStatData.items:type_name -> Cmd.ItemInfo
	3,  // 6: Cmd.UserAfkStatData.moneys:type_name -> Cmd.MoneyData
	4,  // 7: Cmd.UserAfkStatData.killinfo:type_name -> Cmd.AfkKillInfo
	4,  // 8: Cmd.UserAfkStatData.be_killinfo:type_name -> Cmd.AfkKillInfo
	7,  // 9: Cmd.SyncStatInfoAfkCmd.cmd:type_name -> Cmd.Command
	0,  // 10: Cmd.SyncStatInfoAfkCmd.param:type_name -> Cmd.UserAfkCmdParam
	5,  // 11: Cmd.SyncStatInfoAfkCmd.statdata:type_name -> Cmd.UserAfkStatData
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_UserAfkCmd_proto_init() }
func file_UserAfkCmd_proto_init() {
	if File_UserAfkCmd_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneItem_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_UserAfkCmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAfkUserAfkCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserAfkCmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetAfkUserAfkCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserAfkCmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserAfkCmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AfkKillInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserAfkCmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAfkStatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserAfkCmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatInfoAfkCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UserAfkCmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UserAfkCmd_proto_goTypes,
		DependencyIndexes: file_UserAfkCmd_proto_depIdxs,
		EnumInfos:         file_UserAfkCmd_proto_enumTypes,
		MessageInfos:      file_UserAfkCmd_proto_msgTypes,
	}.Build()
	File_UserAfkCmd_proto = out.File
	file_UserAfkCmd_proto_rawDesc = nil
	file_UserAfkCmd_proto_goTypes = nil
	file_UserAfkCmd_proto_depIdxs = nil
}
