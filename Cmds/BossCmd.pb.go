// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: BossCmd.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BossParam int32

const (
	BossParam_BOSS_LIST_USER_CMD    BossParam = 1
	BossParam_BOSS_POS_USER_CMD     BossParam = 2
	BossParam_BOSS_KILL_USER_CMD    BossParam = 3
	BossParam_BOSS_USER_INFO_CMD    BossParam = 4
	BossParam_BOSS_WORLD_NTF        BossParam = 5
	BossParam_BOSS_STEP_SYNC        BossParam = 6
	BossParam_BOSS_QUERY_FAVOURITE  BossParam = 7
	BossParam_BOSS_MODIFY_FAVOURITE BossParam = 8
)

// Enum value maps for BossParam.
var (
	BossParam_name = map[int32]string{
		1: "BOSS_LIST_USER_CMD",
		2: "BOSS_POS_USER_CMD",
		3: "BOSS_KILL_USER_CMD",
		4: "BOSS_USER_INFO_CMD",
		5: "BOSS_WORLD_NTF",
		6: "BOSS_STEP_SYNC",
		7: "BOSS_QUERY_FAVOURITE",
		8: "BOSS_MODIFY_FAVOURITE",
	}
	BossParam_value = map[string]int32{
		"BOSS_LIST_USER_CMD":    1,
		"BOSS_POS_USER_CMD":     2,
		"BOSS_KILL_USER_CMD":    3,
		"BOSS_USER_INFO_CMD":    4,
		"BOSS_WORLD_NTF":        5,
		"BOSS_STEP_SYNC":        6,
		"BOSS_QUERY_FAVOURITE":  7,
		"BOSS_MODIFY_FAVOURITE": 8,
	}
)

func (x BossParam) Enum() *BossParam {
	p := new(BossParam)
	*p = x
	return p
}

func (x BossParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BossParam) Descriptor() protoreflect.EnumDescriptor {
	return file_BossCmd_proto_enumTypes[0].Descriptor()
}

func (BossParam) Type() protoreflect.EnumType {
	return &file_BossCmd_proto_enumTypes[0]
}

func (x BossParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BossParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BossParam(num)
	return nil
}

// Deprecated: Use BossParam.Descriptor instead.
func (BossParam) EnumDescriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{0}
}

type EBossRefreshState int32

const (
	EBossRefreshState_EBOSSREFRESHSTATE_MIN      EBossRefreshState = 0
	EBossRefreshState_EBOSSREFRESHSTATE_APPEARED EBossRefreshState = 1
	EBossRefreshState_EBOSSREFRESHSTATE_UPCOMING EBossRefreshState = 2
	EBossRefreshState_EBOSSREFRESHSTATE_SHORT    EBossRefreshState = 3
	EBossRefreshState_EBOSSREFRESHSTATE_LONG     EBossRefreshState = 4
	EBossRefreshState_EBOSSREFRESHSTATE_MAX      EBossRefreshState = 5
)

// Enum value maps for EBossRefreshState.
var (
	EBossRefreshState_name = map[int32]string{
		0: "EBOSSREFRESHSTATE_MIN",
		1: "EBOSSREFRESHSTATE_APPEARED",
		2: "EBOSSREFRESHSTATE_UPCOMING",
		3: "EBOSSREFRESHSTATE_SHORT",
		4: "EBOSSREFRESHSTATE_LONG",
		5: "EBOSSREFRESHSTATE_MAX",
	}
	EBossRefreshState_value = map[string]int32{
		"EBOSSREFRESHSTATE_MIN":      0,
		"EBOSSREFRESHSTATE_APPEARED": 1,
		"EBOSSREFRESHSTATE_UPCOMING": 2,
		"EBOSSREFRESHSTATE_SHORT":    3,
		"EBOSSREFRESHSTATE_LONG":     4,
		"EBOSSREFRESHSTATE_MAX":      5,
	}
)

func (x EBossRefreshState) Enum() *EBossRefreshState {
	p := new(EBossRefreshState)
	*p = x
	return p
}

func (x EBossRefreshState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBossRefreshState) Descriptor() protoreflect.EnumDescriptor {
	return file_BossCmd_proto_enumTypes[1].Descriptor()
}

func (EBossRefreshState) Type() protoreflect.EnumType {
	return &file_BossCmd_proto_enumTypes[1]
}

func (x EBossRefreshState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBossRefreshState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBossRefreshState(num)
	return nil
}

// Deprecated: Use EBossRefreshState.Descriptor instead.
func (EBossRefreshState) EnumDescriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{1}
}

type EBossStep int32

const (
	EBossStep_EBOSSSTEP_MIN    EBossStep = 0
	EBossStep_EBOSSSTEP_VISIT  EBossStep = 1
	EBossStep_EBOSSSTEP_SUMMON EBossStep = 2
	EBossStep_EBOSSSTEP_CLEAR  EBossStep = 3
	EBossStep_EBOSSSTEP_BOSS   EBossStep = 4
	EBossStep_EBOSSSTEP_END    EBossStep = 5
	EBossStep_EBOSSSTEP_LIMIT  EBossStep = 7
	EBossStep_EBOSSSTEP_DIALOG EBossStep = 8
	EBossStep_EBOSSSTEP_STATUS EBossStep = 9
	EBossStep_EBOSSSTEP_WAIT   EBossStep = 10
	EBossStep_EBOSSSTEP_KILL   EBossStep = 11
	EBossStep_EBOSSSTEP_WORLD  EBossStep = 12
	EBossStep_EBOSSSTEP_SHOW   EBossStep = 13
	EBossStep_EBOSSSTEP_MAX    EBossStep = 14
)

// Enum value maps for EBossStep.
var (
	EBossStep_name = map[int32]string{
		0:  "EBOSSSTEP_MIN",
		1:  "EBOSSSTEP_VISIT",
		2:  "EBOSSSTEP_SUMMON",
		3:  "EBOSSSTEP_CLEAR",
		4:  "EBOSSSTEP_BOSS",
		5:  "EBOSSSTEP_END",
		7:  "EBOSSSTEP_LIMIT",
		8:  "EBOSSSTEP_DIALOG",
		9:  "EBOSSSTEP_STATUS",
		10: "EBOSSSTEP_WAIT",
		11: "EBOSSSTEP_KILL",
		12: "EBOSSSTEP_WORLD",
		13: "EBOSSSTEP_SHOW",
		14: "EBOSSSTEP_MAX",
	}
	EBossStep_value = map[string]int32{
		"EBOSSSTEP_MIN":    0,
		"EBOSSSTEP_VISIT":  1,
		"EBOSSSTEP_SUMMON": 2,
		"EBOSSSTEP_CLEAR":  3,
		"EBOSSSTEP_BOSS":   4,
		"EBOSSSTEP_END":    5,
		"EBOSSSTEP_LIMIT":  7,
		"EBOSSSTEP_DIALOG": 8,
		"EBOSSSTEP_STATUS": 9,
		"EBOSSSTEP_WAIT":   10,
		"EBOSSSTEP_KILL":   11,
		"EBOSSSTEP_WORLD":  12,
		"EBOSSSTEP_SHOW":   13,
		"EBOSSSTEP_MAX":    14,
	}
)

func (x EBossStep) Enum() *EBossStep {
	p := new(EBossStep)
	*p = x
	return p
}

func (x EBossStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBossStep) Descriptor() protoreflect.EnumDescriptor {
	return file_BossCmd_proto_enumTypes[2].Descriptor()
}

func (EBossStep) Type() protoreflect.EnumType {
	return &file_BossCmd_proto_enumTypes[2]
}

func (x EBossStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBossStep) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBossStep(num)
	return nil
}

// Deprecated: Use EBossStep.Descriptor instead.
func (EBossStep) EnumDescriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{2}
}

type ERareEliteStatus int32

const (
	ERareEliteStatus_ERAREELITESTATUS_MIN     ERareEliteStatus = 0
	ERareEliteStatus_ERAREELITESTATUS_ALIVE   ERareEliteStatus = 1
	ERareEliteStatus_ERAREELITESTATUS_DEAD    ERareEliteStatus = 2
	ERareEliteStatus_ERAREELITESTATUS_UNKNOWN ERareEliteStatus = 3
)

// Enum value maps for ERareEliteStatus.
var (
	ERareEliteStatus_name = map[int32]string{
		0: "ERAREELITESTATUS_MIN",
		1: "ERAREELITESTATUS_ALIVE",
		2: "ERAREELITESTATUS_DEAD",
		3: "ERAREELITESTATUS_UNKNOWN",
	}
	ERareEliteStatus_value = map[string]int32{
		"ERAREELITESTATUS_MIN":     0,
		"ERAREELITESTATUS_ALIVE":   1,
		"ERAREELITESTATUS_DEAD":    2,
		"ERAREELITESTATUS_UNKNOWN": 3,
	}
)

func (x ERareEliteStatus) Enum() *ERareEliteStatus {
	p := new(ERareEliteStatus)
	*p = x
	return p
}

func (x ERareEliteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERareEliteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_BossCmd_proto_enumTypes[3].Descriptor()
}

func (ERareEliteStatus) Type() protoreflect.EnumType {
	return &file_BossCmd_proto_enumTypes[3]
}

func (x ERareEliteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERareEliteStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERareEliteStatus(num)
	return nil
}

// Deprecated: Use ERareEliteStatus.Descriptor instead.
func (ERareEliteStatus) EnumDescriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{3}
}

type BossInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *uint32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	RefreshTime  *uint32            `protobuf:"varint,2,opt,name=refreshTime,def=0" json:"refreshTime,omitempty"`
	Dietime      *uint32            `protobuf:"varint,9,opt,name=dietime,def=0" json:"dietime,omitempty"`
	Summontime   *uint32            `protobuf:"varint,10,opt,name=summontime,def=0" json:"summontime,omitempty"`
	Mapid        *uint32            `protobuf:"varint,4,opt,name=mapid" json:"mapid,omitempty"`
	Settime      *uint32            `protobuf:"varint,7,opt,name=settime,def=0" json:"settime,omitempty"`
	Lv           *uint32            `protobuf:"varint,8,opt,name=lv,def=0" json:"lv,omitempty"`
	Refreshstate *EBossRefreshState `protobuf:"varint,5,opt,name=refreshstate,enum=Cmd.EBossRefreshState,def=0" json:"refreshstate,omitempty"`
	LastKiller   *string            `protobuf:"bytes,3,opt,name=lastKiller" json:"lastKiller,omitempty"`
	Charid       *uint64            `protobuf:"varint,6,opt,name=charid,def=0" json:"charid,omitempty"`
}

// Default values for BossInfoItem fields.
const (
	Default_BossInfoItem_RefreshTime  = uint32(0)
	Default_BossInfoItem_Dietime      = uint32(0)
	Default_BossInfoItem_Summontime   = uint32(0)
	Default_BossInfoItem_Settime      = uint32(0)
	Default_BossInfoItem_Lv           = uint32(0)
	Default_BossInfoItem_Refreshstate = EBossRefreshState_EBOSSREFRESHSTATE_MIN
	Default_BossInfoItem_Charid       = uint64(0)
)

func (x *BossInfoItem) Reset() {
	*x = BossInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossInfoItem) ProtoMessage() {}

func (x *BossInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossInfoItem.ProtoReflect.Descriptor instead.
func (*BossInfoItem) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{0}
}

func (x *BossInfoItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BossInfoItem) GetRefreshTime() uint32 {
	if x != nil && x.RefreshTime != nil {
		return *x.RefreshTime
	}
	return Default_BossInfoItem_RefreshTime
}

func (x *BossInfoItem) GetDietime() uint32 {
	if x != nil && x.Dietime != nil {
		return *x.Dietime
	}
	return Default_BossInfoItem_Dietime
}

func (x *BossInfoItem) GetSummontime() uint32 {
	if x != nil && x.Summontime != nil {
		return *x.Summontime
	}
	return Default_BossInfoItem_Summontime
}

func (x *BossInfoItem) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return 0
}

func (x *BossInfoItem) GetSettime() uint32 {
	if x != nil && x.Settime != nil {
		return *x.Settime
	}
	return Default_BossInfoItem_Settime
}

func (x *BossInfoItem) GetLv() uint32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return Default_BossInfoItem_Lv
}

func (x *BossInfoItem) GetRefreshstate() EBossRefreshState {
	if x != nil && x.Refreshstate != nil {
		return *x.Refreshstate
	}
	return Default_BossInfoItem_Refreshstate
}

func (x *BossInfoItem) GetLastKiller() string {
	if x != nil && x.LastKiller != nil {
		return *x.LastKiller
	}
	return ""
}

func (x *BossInfoItem) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_BossInfoItem_Charid
}

type BossListUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param    *BossParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=1" json:"param,omitempty"`
	Bosslist []*BossInfoItem `protobuf:"bytes,3,rep,name=bosslist" json:"bosslist,omitempty"`
	Minilist []*BossInfoItem `protobuf:"bytes,4,rep,name=minilist" json:"minilist,omitempty"`
	Deadlist []*BossInfoItem `protobuf:"bytes,5,rep,name=deadlist" json:"deadlist,omitempty"`
}

// Default values for BossListUserCmd fields.
const (
	Default_BossListUserCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_BossListUserCmd_Param = BossParam_BOSS_LIST_USER_CMD
)

func (x *BossListUserCmd) Reset() {
	*x = BossListUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossListUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossListUserCmd) ProtoMessage() {}

func (x *BossListUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossListUserCmd.ProtoReflect.Descriptor instead.
func (*BossListUserCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{1}
}

func (x *BossListUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BossListUserCmd_Cmd
}

func (x *BossListUserCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BossListUserCmd_Param
}

func (x *BossListUserCmd) GetBosslist() []*BossInfoItem {
	if x != nil {
		return x.Bosslist
	}
	return nil
}

func (x *BossListUserCmd) GetMinilist() []*BossInfoItem {
	if x != nil {
		return x.Minilist
	}
	return nil
}

func (x *BossListUserCmd) GetDeadlist() []*BossInfoItem {
	if x != nil {
		return x.Deadlist
	}
	return nil
}

type BossPosUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param *BossParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=2" json:"param,omitempty"`
	Pos   *ScenePos  `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
}

// Default values for BossPosUserCmd fields.
const (
	Default_BossPosUserCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_BossPosUserCmd_Param = BossParam_BOSS_POS_USER_CMD
)

func (x *BossPosUserCmd) Reset() {
	*x = BossPosUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossPosUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossPosUserCmd) ProtoMessage() {}

func (x *BossPosUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossPosUserCmd.ProtoReflect.Descriptor instead.
func (*BossPosUserCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{2}
}

func (x *BossPosUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BossPosUserCmd_Cmd
}

func (x *BossPosUserCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BossPosUserCmd_Param
}

func (x *BossPosUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type KillBossUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param  *BossParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=3" json:"param,omitempty"`
	Userid *uint64    `protobuf:"varint,3,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for KillBossUserCmd fields.
const (
	Default_KillBossUserCmd_Cmd    = Command_SCENE_BOSS_PROTOCMD
	Default_KillBossUserCmd_Param  = BossParam_BOSS_KILL_USER_CMD
	Default_KillBossUserCmd_Userid = uint64(0)
)

func (x *KillBossUserCmd) Reset() {
	*x = KillBossUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillBossUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillBossUserCmd) ProtoMessage() {}

func (x *KillBossUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillBossUserCmd.ProtoReflect.Descriptor instead.
func (*KillBossUserCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{3}
}

func (x *KillBossUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_KillBossUserCmd_Cmd
}

func (x *KillBossUserCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_KillBossUserCmd_Param
}

func (x *KillBossUserCmd) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_KillBossUserCmd_Userid
}

type BossKillerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid     *uint64      `protobuf:"varint,1,opt,name=charid,def=0" json:"charid,omitempty"`
	Portrait   *uint32      `protobuf:"varint,2,opt,name=portrait" json:"portrait,omitempty"`
	Baselevel  *uint32      `protobuf:"varint,4,opt,name=baselevel" json:"baselevel,omitempty"`
	Hair       *uint32      `protobuf:"varint,5,opt,name=hair" json:"hair,omitempty"`
	Haircolor  *uint32      `protobuf:"varint,6,opt,name=haircolor" json:"haircolor,omitempty"`
	Body       *uint32      `protobuf:"varint,7,opt,name=body" json:"body,omitempty"`
	Head       *uint32      `protobuf:"varint,8,opt,name=head" json:"head,omitempty"`
	Face       *uint32      `protobuf:"varint,9,opt,name=face" json:"face,omitempty"`
	Mouth      *uint32      `protobuf:"varint,10,opt,name=mouth" json:"mouth,omitempty"`
	Eye        *uint32      `protobuf:"varint,11,opt,name=eye" json:"eye,omitempty"`
	Blink      *uint32      `protobuf:"varint,12,opt,name=blink" json:"blink,omitempty"`
	Profession *EProfession `protobuf:"varint,13,opt,name=profession,enum=Cmd.EProfession" json:"profession,omitempty"`
	Gender     *EGender     `protobuf:"varint,14,opt,name=gender,enum=Cmd.EGender" json:"gender,omitempty"`
	Name       *string      `protobuf:"bytes,15,opt,name=name" json:"name,omitempty"`
	Guildname  *string      `protobuf:"bytes,16,opt,name=guildname" json:"guildname,omitempty"`
}

// Default values for BossKillerData fields.
const (
	Default_BossKillerData_Charid = uint64(0)
)

func (x *BossKillerData) Reset() {
	*x = BossKillerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossKillerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossKillerData) ProtoMessage() {}

func (x *BossKillerData) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossKillerData.ProtoReflect.Descriptor instead.
func (*BossKillerData) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{4}
}

func (x *BossKillerData) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_BossKillerData_Charid
}

func (x *BossKillerData) GetPortrait() uint32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *BossKillerData) GetBaselevel() uint32 {
	if x != nil && x.Baselevel != nil {
		return *x.Baselevel
	}
	return 0
}

func (x *BossKillerData) GetHair() uint32 {
	if x != nil && x.Hair != nil {
		return *x.Hair
	}
	return 0
}

func (x *BossKillerData) GetHaircolor() uint32 {
	if x != nil && x.Haircolor != nil {
		return *x.Haircolor
	}
	return 0
}

func (x *BossKillerData) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return 0
}

func (x *BossKillerData) GetHead() uint32 {
	if x != nil && x.Head != nil {
		return *x.Head
	}
	return 0
}

func (x *BossKillerData) GetFace() uint32 {
	if x != nil && x.Face != nil {
		return *x.Face
	}
	return 0
}

func (x *BossKillerData) GetMouth() uint32 {
	if x != nil && x.Mouth != nil {
		return *x.Mouth
	}
	return 0
}

func (x *BossKillerData) GetEye() uint32 {
	if x != nil && x.Eye != nil {
		return *x.Eye
	}
	return 0
}

func (x *BossKillerData) GetBlink() uint32 {
	if x != nil && x.Blink != nil {
		return *x.Blink
	}
	return 0
}

func (x *BossKillerData) GetProfession() EProfession {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return EProfession_EPROFESSION_MIN
}

func (x *BossKillerData) GetGender() EGender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return EGender_EGENDER_MIN
}

func (x *BossKillerData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BossKillerData) GetGuildname() string {
	if x != nil && x.Guildname != nil {
		return *x.Guildname
	}
	return ""
}

type QueryKillerInfoBossCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param    *BossParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=4" json:"param,omitempty"`
	Charid   *uint64         `protobuf:"varint,3,opt,name=charid" json:"charid,omitempty"`
	Userdata *BossKillerData `protobuf:"bytes,4,opt,name=userdata" json:"userdata,omitempty"`
}

// Default values for QueryKillerInfoBossCmd fields.
const (
	Default_QueryKillerInfoBossCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_QueryKillerInfoBossCmd_Param = BossParam_BOSS_USER_INFO_CMD
)

func (x *QueryKillerInfoBossCmd) Reset() {
	*x = QueryKillerInfoBossCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKillerInfoBossCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKillerInfoBossCmd) ProtoMessage() {}

func (x *QueryKillerInfoBossCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKillerInfoBossCmd.ProtoReflect.Descriptor instead.
func (*QueryKillerInfoBossCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{5}
}

func (x *QueryKillerInfoBossCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryKillerInfoBossCmd_Cmd
}

func (x *QueryKillerInfoBossCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryKillerInfoBossCmd_Param
}

func (x *QueryKillerInfoBossCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *QueryKillerInfoBossCmd) GetUserdata() *BossKillerData {
	if x != nil {
		return x.Userdata
	}
	return nil
}

type WorldBossNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param *BossParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=5" json:"param,omitempty"`
	Npcid *uint32    `protobuf:"varint,3,opt,name=npcid,def=0" json:"npcid,omitempty"`
	Mapid *uint32    `protobuf:"varint,4,opt,name=mapid,def=0" json:"mapid,omitempty"`
	Time  *uint32    `protobuf:"varint,5,opt,name=time,def=0" json:"time,omitempty"`
	Open  *bool      `protobuf:"varint,6,opt,name=open,def=0" json:"open,omitempty"`
}

// Default values for WorldBossNtf fields.
const (
	Default_WorldBossNtf_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_WorldBossNtf_Param = BossParam_BOSS_WORLD_NTF
	Default_WorldBossNtf_Npcid = uint32(0)
	Default_WorldBossNtf_Mapid = uint32(0)
	Default_WorldBossNtf_Time  = uint32(0)
	Default_WorldBossNtf_Open  = bool(false)
)

func (x *WorldBossNtf) Reset() {
	*x = WorldBossNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossNtf) ProtoMessage() {}

func (x *WorldBossNtf) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossNtf.ProtoReflect.Descriptor instead.
func (*WorldBossNtf) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{6}
}

func (x *WorldBossNtf) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_WorldBossNtf_Cmd
}

func (x *WorldBossNtf) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_WorldBossNtf_Param
}

func (x *WorldBossNtf) GetNpcid() uint32 {
	if x != nil && x.Npcid != nil {
		return *x.Npcid
	}
	return Default_WorldBossNtf_Npcid
}

func (x *WorldBossNtf) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return Default_WorldBossNtf_Mapid
}

func (x *WorldBossNtf) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_WorldBossNtf_Time
}

func (x *WorldBossNtf) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return Default_WorldBossNtf_Open
}

type StepSyncBossCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param  *BossParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=6" json:"param,omitempty"`
	Actid  *uint32      `protobuf:"varint,3,opt,name=actid,def=0" json:"actid,omitempty"`
	Step   *EBossStep   `protobuf:"varint,4,opt,name=step,enum=Cmd.EBossStep,def=0" json:"step,omitempty"`
	Params *ConfigParam `protobuf:"bytes,5,opt,name=params" json:"params,omitempty"`
}

// Default values for StepSyncBossCmd fields.
const (
	Default_StepSyncBossCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_StepSyncBossCmd_Param = BossParam_BOSS_STEP_SYNC
	Default_StepSyncBossCmd_Actid = uint32(0)
	Default_StepSyncBossCmd_Step  = EBossStep_EBOSSSTEP_MIN
)

func (x *StepSyncBossCmd) Reset() {
	*x = StepSyncBossCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepSyncBossCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepSyncBossCmd) ProtoMessage() {}

func (x *StepSyncBossCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepSyncBossCmd.ProtoReflect.Descriptor instead.
func (*StepSyncBossCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{7}
}

func (x *StepSyncBossCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StepSyncBossCmd_Cmd
}

func (x *StepSyncBossCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StepSyncBossCmd_Param
}

func (x *StepSyncBossCmd) GetActid() uint32 {
	if x != nil && x.Actid != nil {
		return *x.Actid
	}
	return Default_StepSyncBossCmd_Actid
}

func (x *StepSyncBossCmd) GetStep() EBossStep {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return Default_StepSyncBossCmd_Step
}

func (x *StepSyncBossCmd) GetParams() *ConfigParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type RareEliteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Npcid    *uint32           `protobuf:"varint,1,opt,name=npcid" json:"npcid,omitempty"`
	Status   *ERareEliteStatus `protobuf:"varint,2,opt,name=status,enum=Cmd.ERareEliteStatus" json:"status,omitempty"`
	Lefttime *uint32           `protobuf:"varint,3,opt,name=lefttime" json:"lefttime,omitempty"`
	Pos      *Pos              `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
}

func (x *RareEliteData) Reset() {
	*x = RareEliteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RareEliteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RareEliteData) ProtoMessage() {}

func (x *RareEliteData) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RareEliteData.ProtoReflect.Descriptor instead.
func (*RareEliteData) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{8}
}

func (x *RareEliteData) GetNpcid() uint32 {
	if x != nil && x.Npcid != nil {
		return *x.Npcid
	}
	return 0
}

func (x *RareEliteData) GetStatus() ERareEliteStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ERareEliteStatus_ERAREELITESTATUS_MIN
}

func (x *RareEliteData) GetLefttime() uint32 {
	if x != nil && x.Lefttime != nil {
		return *x.Lefttime
	}
	return 0
}

func (x *RareEliteData) GetPos() *Pos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type QueryFavaouiteBossCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param   *BossParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=7" json:"param,omitempty"`
	Bossids []uint32   `protobuf:"varint,3,rep,name=bossids" json:"bossids,omitempty"`
}

// Default values for QueryFavaouiteBossCmd fields.
const (
	Default_QueryFavaouiteBossCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_QueryFavaouiteBossCmd_Param = BossParam_BOSS_QUERY_FAVOURITE
)

func (x *QueryFavaouiteBossCmd) Reset() {
	*x = QueryFavaouiteBossCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFavaouiteBossCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFavaouiteBossCmd) ProtoMessage() {}

func (x *QueryFavaouiteBossCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFavaouiteBossCmd.ProtoReflect.Descriptor instead.
func (*QueryFavaouiteBossCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{9}
}

func (x *QueryFavaouiteBossCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryFavaouiteBossCmd_Cmd
}

func (x *QueryFavaouiteBossCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryFavaouiteBossCmd_Param
}

func (x *QueryFavaouiteBossCmd) GetBossids() []uint32 {
	if x != nil {
		return x.Bossids
	}
	return nil
}

type ModifyFavouriteBossCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=15" json:"cmd,omitempty"`
	Param   *BossParam `protobuf:"varint,2,opt,name=param,enum=Cmd.BossParam,def=8" json:"param,omitempty"`
	Bossids []uint32   `protobuf:"varint,3,rep,name=bossids" json:"bossids,omitempty"`
}

// Default values for ModifyFavouriteBossCmd fields.
const (
	Default_ModifyFavouriteBossCmd_Cmd   = Command_SCENE_BOSS_PROTOCMD
	Default_ModifyFavouriteBossCmd_Param = BossParam_BOSS_MODIFY_FAVOURITE
)

func (x *ModifyFavouriteBossCmd) Reset() {
	*x = ModifyFavouriteBossCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BossCmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyFavouriteBossCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyFavouriteBossCmd) ProtoMessage() {}

func (x *ModifyFavouriteBossCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BossCmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyFavouriteBossCmd.ProtoReflect.Descriptor instead.
func (*ModifyFavouriteBossCmd) Descriptor() ([]byte, []int) {
	return file_BossCmd_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyFavouriteBossCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ModifyFavouriteBossCmd_Cmd
}

func (x *ModifyFavouriteBossCmd) GetParam() BossParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ModifyFavouriteBossCmd_Param
}

func (x *ModifyFavouriteBossCmd) GetBossids() []uint32 {
	if x != nil {
		return x.Bossids
	}
	return nil
}

var File_BossCmd_proto protoreflect.FileDescriptor

var file_BossCmd_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x0c, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x64, 0x69, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x64,
	0x69, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x02,
	0x6c, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x6c, 0x76, 0x12,
	0x51, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x6f, 0x73,
	0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x15, 0x45,
	0x42, 0x4f, 0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x22, 0x8d, 0x02,
	0x0a, 0x0f, 0x42, 0x6f, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x2d, 0x0a, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x69, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x69, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9f, 0x01,
	0x0a, 0x0e, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x0f, 0x4b, 0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x4b, 0x49,
	0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0x9b, 0x03,
	0x0a, 0x0e, 0x42, 0x6f, 0x73, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x69,
	0x72, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x61,
	0x69, 0x72, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x79, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x79, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x72, 0x6f,
	0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x6f, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x42, 0x4f, 0x53, 0x53,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd,
	0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x4e, 0x74, 0x66, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x0e, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4e, 0x54, 0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x70,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x70,
	0x63, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x22, 0xf2,
	0x01, 0x0a, 0x0f, 0x53, 0x74, 0x65, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x6f, 0x73, 0x73, 0x43,
	0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x0e, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x45,
	0x50, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a,
	0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x6f, 0x73, 0x73,
	0x53, 0x74, 0x65, 0x70, 0x3a, 0x0d, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f,
	0x4d, 0x49, 0x4e, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x52, 0x61, 0x72, 0x65, 0x45, 0x6c, 0x69, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x52, 0x61, 0x72, 0x65, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x66, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65,
	0x66, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x76, 0x61,
	0x6f, 0x75, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x42,
	0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x14, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x46, 0x41, 0x56,
	0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6f, 0x73, 0x73, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x6f, 0x73, 0x73, 0x69, 0x64, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x73, 0x73, 0x43,
	0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x42, 0x6f, 0x73,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x4d, 0x4f, 0x44,
	0x49, 0x46, 0x59, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x73, 0x73, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x73, 0x73, 0x69, 0x64, 0x73, 0x2a, 0xc7,
	0x01, 0x0a, 0x09, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x4d, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x4f, 0x53,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x42,
	0x4f, 0x53, 0x53, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d,
	0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x42,
	0x4f, 0x53, 0x53, 0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x53, 0x59, 0x4e,
	0x43, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x10, 0x07, 0x12, 0x19, 0x0a,
	0x15, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x41, 0x56,
	0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x10, 0x08, 0x2a, 0xc2, 0x01, 0x0a, 0x11, 0x45, 0x42, 0x6f,
	0x73, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x42, 0x4f,
	0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x50, 0x50, 0x45, 0x41, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x42, 0x4f,
	0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x50, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x42, 0x4f,
	0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x52,
	0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x52, 0x45, 0x46, 0x52, 0x45,
	0x53, 0x48, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x2a, 0xaa, 0x02,
	0x0a, 0x09, 0x45, 0x42, 0x6f, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x56, 0x49, 0x53, 0x49,
	0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50,
	0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x42, 0x4f,
	0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x42, 0x4f, 0x53, 0x53,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f,
	0x45, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54,
	0x45, 0x50, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x42,
	0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x08,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53,
	0x54, 0x45, 0x50, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x42,
	0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x0b, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x42, 0x4f, 0x53, 0x53, 0x53, 0x54, 0x45, 0x50,
	0x5f, 0x53, 0x48, 0x4f, 0x57, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x42, 0x4f, 0x53, 0x53,
	0x53, 0x54, 0x45, 0x50, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x0e, 0x2a, 0x81, 0x01, 0x0a, 0x10, 0x45,
	0x52, 0x61, 0x72, 0x65, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x14, 0x45, 0x52, 0x41, 0x52, 0x45, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x41,
	0x52, 0x45, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x52, 0x41, 0x52, 0x45, 0x45, 0x4c,
	0x49, 0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x10, 0x02,
	0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x41, 0x52, 0x45, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03,
}

var (
	file_BossCmd_proto_rawDescOnce sync.Once
	file_BossCmd_proto_rawDescData = file_BossCmd_proto_rawDesc
)

func file_BossCmd_proto_rawDescGZIP() []byte {
	file_BossCmd_proto_rawDescOnce.Do(func() {
		file_BossCmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_BossCmd_proto_rawDescData)
	})
	return file_BossCmd_proto_rawDescData
}

var file_BossCmd_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_BossCmd_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_BossCmd_proto_goTypes = []interface{}{
	(BossParam)(0),                 // 0: Cmd.BossParam
	(EBossRefreshState)(0),         // 1: Cmd.EBossRefreshState
	(EBossStep)(0),                 // 2: Cmd.EBossStep
	(ERareEliteStatus)(0),          // 3: Cmd.ERareEliteStatus
	(*BossInfoItem)(nil),           // 4: Cmd.BossInfoItem
	(*BossListUserCmd)(nil),        // 5: Cmd.BossListUserCmd
	(*BossPosUserCmd)(nil),         // 6: Cmd.BossPosUserCmd
	(*KillBossUserCmd)(nil),        // 7: Cmd.KillBossUserCmd
	(*BossKillerData)(nil),         // 8: Cmd.BossKillerData
	(*QueryKillerInfoBossCmd)(nil), // 9: Cmd.QueryKillerInfoBossCmd
	(*WorldBossNtf)(nil),           // 10: Cmd.WorldBossNtf
	(*StepSyncBossCmd)(nil),        // 11: Cmd.StepSyncBossCmd
	(*RareEliteData)(nil),          // 12: Cmd.RareEliteData
	(*QueryFavaouiteBossCmd)(nil),  // 13: Cmd.QueryFavaouiteBossCmd
	(*ModifyFavouriteBossCmd)(nil), // 14: Cmd.ModifyFavouriteBossCmd
	(Command)(0),                   // 15: Cmd.Command
	(*ScenePos)(nil),               // 16: Cmd.ScenePos
	(EProfession)(0),               // 17: Cmd.EProfession
	(EGender)(0),                   // 18: Cmd.EGender
	(*ConfigParam)(nil),            // 19: Cmd.ConfigParam
	(*Pos)(nil),                    // 20: Cmd.Pos
}
var file_BossCmd_proto_depIdxs = []int32{
	1,  // 0: Cmd.BossInfoItem.refreshstate:type_name -> Cmd.EBossRefreshState
	15, // 1: Cmd.BossListUserCmd.cmd:type_name -> Cmd.Command
	0,  // 2: Cmd.BossListUserCmd.param:type_name -> Cmd.BossParam
	4,  // 3: Cmd.BossListUserCmd.bosslist:type_name -> Cmd.BossInfoItem
	4,  // 4: Cmd.BossListUserCmd.minilist:type_name -> Cmd.BossInfoItem
	4,  // 5: Cmd.BossListUserCmd.deadlist:type_name -> Cmd.BossInfoItem
	15, // 6: Cmd.BossPosUserCmd.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.BossPosUserCmd.param:type_name -> Cmd.BossParam
	16, // 8: Cmd.BossPosUserCmd.pos:type_name -> Cmd.ScenePos
	15, // 9: Cmd.KillBossUserCmd.cmd:type_name -> Cmd.Command
	0,  // 10: Cmd.KillBossUserCmd.param:type_name -> Cmd.BossParam
	17, // 11: Cmd.BossKillerData.profession:type_name -> Cmd.EProfession
	18, // 12: Cmd.BossKillerData.gender:type_name -> Cmd.EGender
	15, // 13: Cmd.QueryKillerInfoBossCmd.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.QueryKillerInfoBossCmd.param:type_name -> Cmd.BossParam
	8,  // 15: Cmd.QueryKillerInfoBossCmd.userdata:type_name -> Cmd.BossKillerData
	15, // 16: Cmd.WorldBossNtf.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.WorldBossNtf.param:type_name -> Cmd.BossParam
	15, // 18: Cmd.StepSyncBossCmd.cmd:type_name -> Cmd.Command
	0,  // 19: Cmd.StepSyncBossCmd.param:type_name -> Cmd.BossParam
	2,  // 20: Cmd.StepSyncBossCmd.step:type_name -> Cmd.EBossStep
	19, // 21: Cmd.StepSyncBossCmd.params:type_name -> Cmd.ConfigParam
	3,  // 22: Cmd.RareEliteData.status:type_name -> Cmd.ERareEliteStatus
	20, // 23: Cmd.RareEliteData.pos:type_name -> Cmd.Pos
	15, // 24: Cmd.QueryFavaouiteBossCmd.cmd:type_name -> Cmd.Command
	0,  // 25: Cmd.QueryFavaouiteBossCmd.param:type_name -> Cmd.BossParam
	15, // 26: Cmd.ModifyFavouriteBossCmd.cmd:type_name -> Cmd.Command
	0,  // 27: Cmd.ModifyFavouriteBossCmd.param:type_name -> Cmd.BossParam
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_BossCmd_proto_init() }
func file_BossCmd_proto_init() {
	if File_BossCmd_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_BossCmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossListUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossPosUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillBossUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossKillerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKillerInfoBossCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepSyncBossCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RareEliteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFavaouiteBossCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BossCmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyFavouriteBossCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BossCmd_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BossCmd_proto_goTypes,
		DependencyIndexes: file_BossCmd_proto_depIdxs,
		EnumInfos:         file_BossCmd_proto_enumTypes,
		MessageInfos:      file_BossCmd_proto_msgTypes,
	}.Build()
	File_BossCmd_proto = out.File
	file_BossCmd_proto_rawDesc = nil
	file_BossCmd_proto_goTypes = nil
	file_BossCmd_proto_depIdxs = nil
}
