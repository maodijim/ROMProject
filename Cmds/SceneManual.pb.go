// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: SceneManual.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ManualParam int32

const (
	ManualParam_MANUALPARAM_QUERYVERSION          ManualParam = 1
	ManualParam_MANUALPARAM_QUERYDATA             ManualParam = 2
	ManualParam_MANUALPARAM_POINTSYNC             ManualParam = 3
	ManualParam_MANUALPARAM_UPDATE                ManualParam = 4
	ManualParam_MANUALPARAM_GETREWARD             ManualParam = 5
	ManualParam_MANUALPARAM_UNLOCK                ManualParam = 6
	ManualParam_MANUALPARAM_SKILLPOINTSYNC        ManualParam = 7
	ManualParam_MANUALPARAM_LEVELSYNC             ManualParam = 8
	ManualParam_MANUALPARAM_GETQUESTREWARD        ManualParam = 9
	ManualParam_MANUALPARAM_STOREITEM             ManualParam = 10
	ManualParam_MANUALPARAM_GETITEM               ManualParam = 11
	ManualParam_MANUALPARAM_GROUPACTION           ManualParam = 12
	ManualParam_MANUALPARAM_QUERY_UNSOLVED_PHOTO  ManualParam = 13
	ManualParam_MANUALPARAM_UPDATE_UNSOLVED_PHOTO ManualParam = 14
	ManualParam_MANUALPARAM_NPCZONE               ManualParam = 15
	ManualParam_MANUALPARAM_NPCZONE_REWARD        ManualParam = 16
	ManualParam_MANUALPARAM_COLLECTION_REWARD     ManualParam = 17
)

// Enum value maps for ManualParam.
var (
	ManualParam_name = map[int32]string{
		1:  "MANUALPARAM_QUERYVERSION",
		2:  "MANUALPARAM_QUERYDATA",
		3:  "MANUALPARAM_POINTSYNC",
		4:  "MANUALPARAM_UPDATE",
		5:  "MANUALPARAM_GETREWARD",
		6:  "MANUALPARAM_UNLOCK",
		7:  "MANUALPARAM_SKILLPOINTSYNC",
		8:  "MANUALPARAM_LEVELSYNC",
		9:  "MANUALPARAM_GETQUESTREWARD",
		10: "MANUALPARAM_STOREITEM",
		11: "MANUALPARAM_GETITEM",
		12: "MANUALPARAM_GROUPACTION",
		13: "MANUALPARAM_QUERY_UNSOLVED_PHOTO",
		14: "MANUALPARAM_UPDATE_UNSOLVED_PHOTO",
		15: "MANUALPARAM_NPCZONE",
		16: "MANUALPARAM_NPCZONE_REWARD",
		17: "MANUALPARAM_COLLECTION_REWARD",
	}
	ManualParam_value = map[string]int32{
		"MANUALPARAM_QUERYVERSION":          1,
		"MANUALPARAM_QUERYDATA":             2,
		"MANUALPARAM_POINTSYNC":             3,
		"MANUALPARAM_UPDATE":                4,
		"MANUALPARAM_GETREWARD":             5,
		"MANUALPARAM_UNLOCK":                6,
		"MANUALPARAM_SKILLPOINTSYNC":        7,
		"MANUALPARAM_LEVELSYNC":             8,
		"MANUALPARAM_GETQUESTREWARD":        9,
		"MANUALPARAM_STOREITEM":             10,
		"MANUALPARAM_GETITEM":               11,
		"MANUALPARAM_GROUPACTION":           12,
		"MANUALPARAM_QUERY_UNSOLVED_PHOTO":  13,
		"MANUALPARAM_UPDATE_UNSOLVED_PHOTO": 14,
		"MANUALPARAM_NPCZONE":               15,
		"MANUALPARAM_NPCZONE_REWARD":        16,
		"MANUALPARAM_COLLECTION_REWARD":     17,
	}
)

func (x ManualParam) Enum() *ManualParam {
	p := new(ManualParam)
	*p = x
	return p
}

func (x ManualParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManualParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[0].Descriptor()
}

func (ManualParam) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[0]
}

func (x ManualParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ManualParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ManualParam(num)
	return nil
}

// Deprecated: Use ManualParam.Descriptor instead.
func (ManualParam) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{0}
}

type EManualType int32

const (
	EManualType_EMANUALTYPE_MIN        EManualType = 0
	EManualType_EMANUALTYPE_FASHION    EManualType = 1
	EManualType_EMANUALTYPE_CARD       EManualType = 2
	EManualType_EMANUALTYPE_EQUIP      EManualType = 3
	EManualType_EMANUALTYPE_ITEM       EManualType = 4
	EManualType_EMANUALTYPE_MOUNT      EManualType = 5
	EManualType_EMANUALTYPE_MONSTER    EManualType = 6
	EManualType_EMANUALTYPE_NPC        EManualType = 7
	EManualType_EMANUALTYPE_HOMEPAGE   EManualType = 8
	EManualType_EMANUALTYPE_MAP        EManualType = 9
	EManualType_EMANUALTYPE_ACHIEVE    EManualType = 10
	EManualType_EMANUALTYPE_SCENERY    EManualType = 11
	EManualType_EMANUALTYPE_COLLECTION EManualType = 14
	EManualType_EMANUALTYPE_RESEARCH   EManualType = 15
	EManualType_EMANUALTYPE_HAIRSTYLE  EManualType = 16
	EManualType_EMANUALTYPE_MATE       EManualType = 17
	EManualType_EMANUALTYPE_FOOD       EManualType = 18
	EManualType_EMANUALTYPE_PET        EManualType = 19
	EManualType_EMANUALTYPE_TOY        EManualType = 20
	EManualType_EMANUALTYPE_PRESTIGE   EManualType = 21
	EManualType_EMANUALTYPE_FURNITURE  EManualType = 22
	EManualType_EMANUALTYPE_MAX        EManualType = 23
)

// Enum value maps for EManualType.
var (
	EManualType_name = map[int32]string{
		0:  "EMANUALTYPE_MIN",
		1:  "EMANUALTYPE_FASHION",
		2:  "EMANUALTYPE_CARD",
		3:  "EMANUALTYPE_EQUIP",
		4:  "EMANUALTYPE_ITEM",
		5:  "EMANUALTYPE_MOUNT",
		6:  "EMANUALTYPE_MONSTER",
		7:  "EMANUALTYPE_NPC",
		8:  "EMANUALTYPE_HOMEPAGE",
		9:  "EMANUALTYPE_MAP",
		10: "EMANUALTYPE_ACHIEVE",
		11: "EMANUALTYPE_SCENERY",
		14: "EMANUALTYPE_COLLECTION",
		15: "EMANUALTYPE_RESEARCH",
		16: "EMANUALTYPE_HAIRSTYLE",
		17: "EMANUALTYPE_MATE",
		18: "EMANUALTYPE_FOOD",
		19: "EMANUALTYPE_PET",
		20: "EMANUALTYPE_TOY",
		21: "EMANUALTYPE_PRESTIGE",
		22: "EMANUALTYPE_FURNITURE",
		23: "EMANUALTYPE_MAX",
	}
	EManualType_value = map[string]int32{
		"EMANUALTYPE_MIN":        0,
		"EMANUALTYPE_FASHION":    1,
		"EMANUALTYPE_CARD":       2,
		"EMANUALTYPE_EQUIP":      3,
		"EMANUALTYPE_ITEM":       4,
		"EMANUALTYPE_MOUNT":      5,
		"EMANUALTYPE_MONSTER":    6,
		"EMANUALTYPE_NPC":        7,
		"EMANUALTYPE_HOMEPAGE":   8,
		"EMANUALTYPE_MAP":        9,
		"EMANUALTYPE_ACHIEVE":    10,
		"EMANUALTYPE_SCENERY":    11,
		"EMANUALTYPE_COLLECTION": 14,
		"EMANUALTYPE_RESEARCH":   15,
		"EMANUALTYPE_HAIRSTYLE":  16,
		"EMANUALTYPE_MATE":       17,
		"EMANUALTYPE_FOOD":       18,
		"EMANUALTYPE_PET":        19,
		"EMANUALTYPE_TOY":        20,
		"EMANUALTYPE_PRESTIGE":   21,
		"EMANUALTYPE_FURNITURE":  22,
		"EMANUALTYPE_MAX":        23,
	}
)

func (x EManualType) Enum() *EManualType {
	p := new(EManualType)
	*p = x
	return p
}

func (x EManualType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EManualType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[1].Descriptor()
}

func (EManualType) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[1]
}

func (x EManualType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EManualType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EManualType(num)
	return nil
}

// Deprecated: Use EManualType.Descriptor instead.
func (EManualType) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{1}
}

type EManualLockMethod int32

const (
	EManualLockMethod_EMANUALLOCKMETHOD_MIN     EManualLockMethod = 0
	EManualLockMethod_EMANUALLOCKMETHOD_KILL    EManualLockMethod = 1
	EManualLockMethod_EMANUALLOCKMETHOD_PICK    EManualLockMethod = 2
	EManualLockMethod_EMANUALLOCKMETHOD_PRODUCE EManualLockMethod = 3
	EManualLockMethod_EMANUALLOCKMETHOD_GET     EManualLockMethod = 4
	EManualLockMethod_EMANUALLOCKMETHOD_VISIT   EManualLockMethod = 5
	EManualLockMethod_EMANUALLOCKMETHOD_PHOTO   EManualLockMethod = 6
	EManualLockMethod_EMANUALLOCKMETHOD_USED    EManualLockMethod = 7
	EManualLockMethod_EMANUALLOCKMETHOD_DRAW    EManualLockMethod = 8
	EManualLockMethod_EMANUALLOCKMETHOD_MAX     EManualLockMethod = 9
)

// Enum value maps for EManualLockMethod.
var (
	EManualLockMethod_name = map[int32]string{
		0: "EMANUALLOCKMETHOD_MIN",
		1: "EMANUALLOCKMETHOD_KILL",
		2: "EMANUALLOCKMETHOD_PICK",
		3: "EMANUALLOCKMETHOD_PRODUCE",
		4: "EMANUALLOCKMETHOD_GET",
		5: "EMANUALLOCKMETHOD_VISIT",
		6: "EMANUALLOCKMETHOD_PHOTO",
		7: "EMANUALLOCKMETHOD_USED",
		8: "EMANUALLOCKMETHOD_DRAW",
		9: "EMANUALLOCKMETHOD_MAX",
	}
	EManualLockMethod_value = map[string]int32{
		"EMANUALLOCKMETHOD_MIN":     0,
		"EMANUALLOCKMETHOD_KILL":    1,
		"EMANUALLOCKMETHOD_PICK":    2,
		"EMANUALLOCKMETHOD_PRODUCE": 3,
		"EMANUALLOCKMETHOD_GET":     4,
		"EMANUALLOCKMETHOD_VISIT":   5,
		"EMANUALLOCKMETHOD_PHOTO":   6,
		"EMANUALLOCKMETHOD_USED":    7,
		"EMANUALLOCKMETHOD_DRAW":    8,
		"EMANUALLOCKMETHOD_MAX":     9,
	}
)

func (x EManualLockMethod) Enum() *EManualLockMethod {
	p := new(EManualLockMethod)
	*p = x
	return p
}

func (x EManualLockMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EManualLockMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[2].Descriptor()
}

func (EManualLockMethod) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[2]
}

func (x EManualLockMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EManualLockMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EManualLockMethod(num)
	return nil
}

// Deprecated: Use EManualLockMethod.Descriptor instead.
func (EManualLockMethod) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{2}
}

type EManualStatus int32

const (
	EManualStatus_EMANUALSTATUS_MIN           EManualStatus = 0
	EManualStatus_EMANUALSTATUS_DISPLAY       EManualStatus = 1
	EManualStatus_EMANUALSTATUS_UNLOCK_CLIENT EManualStatus = 2
	EManualStatus_EMANUALSTATUS_UNLOCK_STEP   EManualStatus = 3
	EManualStatus_EMANUALSTATUS_UNLOCK        EManualStatus = 4
	EManualStatus_EMANUALSTATUS_MAX           EManualStatus = 5
)

// Enum value maps for EManualStatus.
var (
	EManualStatus_name = map[int32]string{
		0: "EMANUALSTATUS_MIN",
		1: "EMANUALSTATUS_DISPLAY",
		2: "EMANUALSTATUS_UNLOCK_CLIENT",
		3: "EMANUALSTATUS_UNLOCK_STEP",
		4: "EMANUALSTATUS_UNLOCK",
		5: "EMANUALSTATUS_MAX",
	}
	EManualStatus_value = map[string]int32{
		"EMANUALSTATUS_MIN":           0,
		"EMANUALSTATUS_DISPLAY":       1,
		"EMANUALSTATUS_UNLOCK_CLIENT": 2,
		"EMANUALSTATUS_UNLOCK_STEP":   3,
		"EMANUALSTATUS_UNLOCK":        4,
		"EMANUALSTATUS_MAX":           5,
	}
)

func (x EManualStatus) Enum() *EManualStatus {
	p := new(EManualStatus)
	*p = x
	return p
}

func (x EManualStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EManualStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[3].Descriptor()
}

func (EManualStatus) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[3]
}

func (x EManualStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EManualStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EManualStatus(num)
	return nil
}

// Deprecated: Use EManualStatus.Descriptor instead.
func (EManualStatus) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{3}
}

type ECollectionStatus int32

const (
	ECollectionStatus_ECOLLECTIONSTATUS_NONE    ECollectionStatus = 0
	ECollectionStatus_ECOLLECTIONSTATUS_CAN_GET ECollectionStatus = 1
	ECollectionStatus_ECOLLECTIONSTATUS_GET     ECollectionStatus = 2
)

// Enum value maps for ECollectionStatus.
var (
	ECollectionStatus_name = map[int32]string{
		0: "ECOLLECTIONSTATUS_NONE",
		1: "ECOLLECTIONSTATUS_CAN_GET",
		2: "ECOLLECTIONSTATUS_GET",
	}
	ECollectionStatus_value = map[string]int32{
		"ECOLLECTIONSTATUS_NONE":    0,
		"ECOLLECTIONSTATUS_CAN_GET": 1,
		"ECOLLECTIONSTATUS_GET":     2,
	}
)

func (x ECollectionStatus) Enum() *ECollectionStatus {
	p := new(ECollectionStatus)
	*p = x
	return p
}

func (x ECollectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECollectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[4].Descriptor()
}

func (ECollectionStatus) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[4]
}

func (x ECollectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECollectionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECollectionStatus(num)
	return nil
}

// Deprecated: Use ECollectionStatus.Descriptor instead.
func (ECollectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{4}
}

type EGroupAction int32

const (
	EGroupAction_EGROUPACTION_MIN               EGroupAction = 0
	EGroupAction_EGROUPACTION_ENTER_END         EGroupAction = 1
	EGroupAction_EGROUPACTION_COLLECTION_REWARD EGroupAction = 2
	EGroupAction_EGROUPACTION_MAX               EGroupAction = 3
)

// Enum value maps for EGroupAction.
var (
	EGroupAction_name = map[int32]string{
		0: "EGROUPACTION_MIN",
		1: "EGROUPACTION_ENTER_END",
		2: "EGROUPACTION_COLLECTION_REWARD",
		3: "EGROUPACTION_MAX",
	}
	EGroupAction_value = map[string]int32{
		"EGROUPACTION_MIN":               0,
		"EGROUPACTION_ENTER_END":         1,
		"EGROUPACTION_COLLECTION_REWARD": 2,
		"EGROUPACTION_MAX":               3,
	}
)

func (x EGroupAction) Enum() *EGroupAction {
	p := new(EGroupAction)
	*p = x
	return p
}

func (x EGroupAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGroupAction) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[5].Descriptor()
}

func (EGroupAction) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[5]
}

func (x EGroupAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGroupAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGroupAction(num)
	return nil
}

// Deprecated: Use EGroupAction.Descriptor instead.
func (EGroupAction) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{5}
}

type EManualZoneRewardType int32

const (
	EManualZoneRewardType_EMANUALZoneReward_MIN     EManualZoneRewardType = 0
	EManualZoneRewardType_EMANUALZONEReward_NPC     EManualZoneRewardType = 1
	EManualZoneRewardType_EMANUALZONEREWARD_GOOD    EManualZoneRewardType = 2
	EManualZoneRewardType_EMANUALZONEREWARD_PERFECT EManualZoneRewardType = 3
	EManualZoneRewardType_EMANUALZONEReward_MAX     EManualZoneRewardType = 4
)

// Enum value maps for EManualZoneRewardType.
var (
	EManualZoneRewardType_name = map[int32]string{
		0: "EMANUALZoneReward_MIN",
		1: "EMANUALZONEReward_NPC",
		2: "EMANUALZONEREWARD_GOOD",
		3: "EMANUALZONEREWARD_PERFECT",
		4: "EMANUALZONEReward_MAX",
	}
	EManualZoneRewardType_value = map[string]int32{
		"EMANUALZoneReward_MIN":     0,
		"EMANUALZONEReward_NPC":     1,
		"EMANUALZONEREWARD_GOOD":    2,
		"EMANUALZONEREWARD_PERFECT": 3,
		"EMANUALZONEReward_MAX":     4,
	}
)

func (x EManualZoneRewardType) Enum() *EManualZoneRewardType {
	p := new(EManualZoneRewardType)
	*p = x
	return p
}

func (x EManualZoneRewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EManualZoneRewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneManual_proto_enumTypes[6].Descriptor()
}

func (EManualZoneRewardType) Type() protoreflect.EnumType {
	return &file_SceneManual_proto_enumTypes[6]
}

func (x EManualZoneRewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EManualZoneRewardType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EManualZoneRewardType(num)
	return nil
}

// Deprecated: Use EManualZoneRewardType.Descriptor instead.
func (EManualZoneRewardType) EnumDescriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{6}
}

type ManualQuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Process   *uint32 `protobuf:"varint,2,opt,name=process,def=0" json:"process,omitempty"`
	Finish    *bool   `protobuf:"varint,3,opt,name=finish,def=0" json:"finish,omitempty"`
	Rewardget *bool   `protobuf:"varint,4,opt,name=rewardget,def=0" json:"rewardget,omitempty"`
}

// Default values for ManualQuest fields.
const (
	Default_ManualQuest_Id        = uint32(0)
	Default_ManualQuest_Process   = uint32(0)
	Default_ManualQuest_Finish    = bool(false)
	Default_ManualQuest_Rewardget = bool(false)
)

func (x *ManualQuest) Reset() {
	*x = ManualQuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualQuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualQuest) ProtoMessage() {}

func (x *ManualQuest) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualQuest.ProtoReflect.Descriptor instead.
func (*ManualQuest) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{0}
}

func (x *ManualQuest) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ManualQuest_Id
}

func (x *ManualQuest) GetProcess() uint32 {
	if x != nil && x.Process != nil {
		return *x.Process
	}
	return Default_ManualQuest_Process
}

func (x *ManualQuest) GetFinish() bool {
	if x != nil && x.Finish != nil {
		return *x.Finish
	}
	return Default_ManualQuest_Finish
}

func (x *ManualQuest) GetRewardget() bool {
	if x != nil && x.Rewardget != nil {
		return *x.Rewardget
	}
	return Default_ManualQuest_Rewardget
}

type ManualSubItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *EManualStatus `protobuf:"varint,1,opt,name=status,enum=Cmd.EManualStatus,def=0" json:"status,omitempty"`
	Id          *uint32        `protobuf:"varint,2,opt,name=id,def=0" json:"id,omitempty"`
	Unlock      *bool          `protobuf:"varint,3,opt,name=unlock,def=0" json:"unlock,omitempty"`
	Quests      []*ManualQuest `protobuf:"bytes,4,rep,name=quests" json:"quests,omitempty"`
	Store       *bool          `protobuf:"varint,5,opt,name=store,def=0" json:"store,omitempty"`
	Params      []uint32       `protobuf:"varint,6,rep,name=params" json:"params,omitempty"`
	DataParams  []string       `protobuf:"bytes,7,rep,name=data_params,json=dataParams" json:"data_params,omitempty"`
	Storeid     *uint32        `protobuf:"varint,8,opt,name=storeid,def=0" json:"storeid,omitempty"`
	Item        *ItemData      `protobuf:"bytes,9,opt,name=item" json:"item,omitempty"`
	Storeditems []*ItemData    `protobuf:"bytes,10,rep,name=storeditems" json:"storeditems,omitempty"`
}

// Default values for ManualSubItem fields.
const (
	Default_ManualSubItem_Status  = EManualStatus_EMANUALSTATUS_MIN
	Default_ManualSubItem_Id      = uint32(0)
	Default_ManualSubItem_Unlock  = bool(false)
	Default_ManualSubItem_Store   = bool(false)
	Default_ManualSubItem_Storeid = uint32(0)
)

func (x *ManualSubItem) Reset() {
	*x = ManualSubItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualSubItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualSubItem) ProtoMessage() {}

func (x *ManualSubItem) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualSubItem.ProtoReflect.Descriptor instead.
func (*ManualSubItem) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{1}
}

func (x *ManualSubItem) GetStatus() EManualStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_ManualSubItem_Status
}

func (x *ManualSubItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ManualSubItem_Id
}

func (x *ManualSubItem) GetUnlock() bool {
	if x != nil && x.Unlock != nil {
		return *x.Unlock
	}
	return Default_ManualSubItem_Unlock
}

func (x *ManualSubItem) GetQuests() []*ManualQuest {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *ManualSubItem) GetStore() bool {
	if x != nil && x.Store != nil {
		return *x.Store
	}
	return Default_ManualSubItem_Store
}

func (x *ManualSubItem) GetParams() []uint32 {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ManualSubItem) GetDataParams() []string {
	if x != nil {
		return x.DataParams
	}
	return nil
}

func (x *ManualSubItem) GetStoreid() uint32 {
	if x != nil && x.Storeid != nil {
		return *x.Storeid
	}
	return Default_ManualSubItem_Storeid
}

func (x *ManualSubItem) GetItem() *ItemData {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ManualSubItem) GetStoreditems() []*ItemData {
	if x != nil {
		return x.Storeditems
	}
	return nil
}

type ManualItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *EManualType     `protobuf:"varint,1,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Version *uint32          `protobuf:"varint,2,opt,name=version,def=0" json:"version,omitempty"`
	Items   []*ManualSubItem `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	Quests  []*ManualQuest   `protobuf:"bytes,4,rep,name=quests" json:"quests,omitempty"`
}

// Default values for ManualItem fields.
const (
	Default_ManualItem_Type    = EManualType_EMANUALTYPE_MIN
	Default_ManualItem_Version = uint32(0)
)

func (x *ManualItem) Reset() {
	*x = ManualItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualItem) ProtoMessage() {}

func (x *ManualItem) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualItem.ProtoReflect.Descriptor instead.
func (*ManualItem) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{2}
}

func (x *ManualItem) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_ManualItem_Type
}

func (x *ManualItem) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_ManualItem_Version
}

func (x *ManualItem) GetItems() []*ManualSubItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ManualItem) GetQuests() []*ManualQuest {
	if x != nil {
		return x.Quests
	}
	return nil
}

type ManualGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *uint32            `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Status *ECollectionStatus `protobuf:"varint,2,opt,name=status,enum=Cmd.ECollectionStatus,def=0" json:"status,omitempty"`
}

// Default values for ManualGroup fields.
const (
	Default_ManualGroup_Id     = uint32(0)
	Default_ManualGroup_Status = ECollectionStatus_ECOLLECTIONSTATUS_NONE
)

func (x *ManualGroup) Reset() {
	*x = ManualGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualGroup) ProtoMessage() {}

func (x *ManualGroup) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualGroup.ProtoReflect.Descriptor instead.
func (*ManualGroup) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{3}
}

func (x *ManualGroup) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ManualGroup_Id
}

func (x *ManualGroup) GetStatus() ECollectionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_ManualGroup_Status
}

type ManualZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	VisitNum      *uint32 `protobuf:"varint,2,opt,name=visit_num,json=visitNum,def=0" json:"visit_num,omitempty"`
	KillNum       *uint32 `protobuf:"varint,3,opt,name=kill_num,json=killNum,def=0" json:"kill_num,omitempty"`
	PhotoNum      *uint32 `protobuf:"varint,4,opt,name=photo_num,json=photoNum,def=0" json:"photo_num,omitempty"`
	NpcReward     *bool   `protobuf:"varint,5,opt,name=npc_reward,json=npcReward,def=0" json:"npc_reward,omitempty"`
	GoodReward    *bool   `protobuf:"varint,6,opt,name=good_reward,json=goodReward,def=0" json:"good_reward,omitempty"`
	PerfectReward *bool   `protobuf:"varint,7,opt,name=perfect_reward,json=perfectReward,def=0" json:"perfect_reward,omitempty"`
}

// Default values for ManualZone fields.
const (
	Default_ManualZone_Id            = uint32(0)
	Default_ManualZone_VisitNum      = uint32(0)
	Default_ManualZone_KillNum       = uint32(0)
	Default_ManualZone_PhotoNum      = uint32(0)
	Default_ManualZone_NpcReward     = bool(false)
	Default_ManualZone_GoodReward    = bool(false)
	Default_ManualZone_PerfectReward = bool(false)
)

func (x *ManualZone) Reset() {
	*x = ManualZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualZone) ProtoMessage() {}

func (x *ManualZone) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualZone.ProtoReflect.Descriptor instead.
func (*ManualZone) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{4}
}

func (x *ManualZone) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ManualZone_Id
}

func (x *ManualZone) GetVisitNum() uint32 {
	if x != nil && x.VisitNum != nil {
		return *x.VisitNum
	}
	return Default_ManualZone_VisitNum
}

func (x *ManualZone) GetKillNum() uint32 {
	if x != nil && x.KillNum != nil {
		return *x.KillNum
	}
	return Default_ManualZone_KillNum
}

func (x *ManualZone) GetPhotoNum() uint32 {
	if x != nil && x.PhotoNum != nil {
		return *x.PhotoNum
	}
	return Default_ManualZone_PhotoNum
}

func (x *ManualZone) GetNpcReward() bool {
	if x != nil && x.NpcReward != nil {
		return *x.NpcReward
	}
	return Default_ManualZone_NpcReward
}

func (x *ManualZone) GetGoodReward() bool {
	if x != nil && x.GoodReward != nil {
		return *x.GoodReward
	}
	return Default_ManualZone_GoodReward
}

func (x *ManualZone) GetPerfectReward() bool {
	if x != nil && x.PerfectReward != nil {
		return *x.PerfectReward
	}
	return Default_ManualZone_PerfectReward
}

type ManualData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         *uint32        `protobuf:"varint,6,opt,name=version,def=0" json:"version,omitempty"`
	Point           *uint32        `protobuf:"varint,1,opt,name=point,def=0" json:"point,omitempty"`
	Level           *uint32        `protobuf:"varint,2,opt,name=level,def=0" json:"level,omitempty"`
	Skillpoint      *uint32        `protobuf:"varint,4,opt,name=skillpoint,def=0" json:"skillpoint,omitempty"`
	ExchangeTime    *uint32        `protobuf:"varint,8,opt,name=exchange_time,json=exchangeTime,def=0" json:"exchange_time,omitempty"`
	Items           []*ManualItem  `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	Groups          []*ManualGroup `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	Zones           []*ManualZone  `protobuf:"bytes,9,rep,name=zones" json:"zones,omitempty"`
	EquipedItems    []uint32       `protobuf:"varint,10,rep,name=equiped_items,json=equipedItems" json:"equiped_items,omitempty"`
	FunctionOperate *uint64        `protobuf:"varint,12,opt,name=function_operate,json=functionOperate" json:"function_operate,omitempty"`
}

// Default values for ManualData fields.
const (
	Default_ManualData_Version      = uint32(0)
	Default_ManualData_Point        = uint32(0)
	Default_ManualData_Level        = uint32(0)
	Default_ManualData_Skillpoint   = uint32(0)
	Default_ManualData_ExchangeTime = uint32(0)
)

func (x *ManualData) Reset() {
	*x = ManualData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualData) ProtoMessage() {}

func (x *ManualData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualData.ProtoReflect.Descriptor instead.
func (*ManualData) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{5}
}

func (x *ManualData) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_ManualData_Version
}

func (x *ManualData) GetPoint() uint32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return Default_ManualData_Point
}

func (x *ManualData) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_ManualData_Level
}

func (x *ManualData) GetSkillpoint() uint32 {
	if x != nil && x.Skillpoint != nil {
		return *x.Skillpoint
	}
	return Default_ManualData_Skillpoint
}

func (x *ManualData) GetExchangeTime() uint32 {
	if x != nil && x.ExchangeTime != nil {
		return *x.ExchangeTime
	}
	return Default_ManualData_ExchangeTime
}

func (x *ManualData) GetItems() []*ManualItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ManualData) GetGroups() []*ManualGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ManualData) GetZones() []*ManualZone {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *ManualData) GetEquipedItems() []uint32 {
	if x != nil {
		return x.EquipedItems
	}
	return nil
}

func (x *ManualData) GetFunctionOperate() uint64 {
	if x != nil && x.FunctionOperate != nil {
		return *x.FunctionOperate
	}
	return 0
}

type ManualVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *EManualType `protobuf:"varint,1,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Version *uint32      `protobuf:"varint,2,opt,name=version,def=0" json:"version,omitempty"`
}

// Default values for ManualVersion fields.
const (
	Default_ManualVersion_Type    = EManualType_EMANUALTYPE_MIN
	Default_ManualVersion_Version = uint32(0)
)

func (x *ManualVersion) Reset() {
	*x = ManualVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualVersion) ProtoMessage() {}

func (x *ManualVersion) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualVersion.ProtoReflect.Descriptor instead.
func (*ManualVersion) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{6}
}

func (x *ManualVersion) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_ManualVersion_Type
}

func (x *ManualVersion) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_ManualVersion_Version
}

type QueryVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param    *ManualParam     `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=1" json:"param,omitempty"`
	Versions []*ManualVersion `protobuf:"bytes,3,rep,name=versions" json:"versions,omitempty"`
}

// Default values for QueryVersion fields.
const (
	Default_QueryVersion_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_QueryVersion_Param = ManualParam_MANUALPARAM_QUERYVERSION
)

func (x *QueryVersion) Reset() {
	*x = QueryVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryVersion) ProtoMessage() {}

func (x *QueryVersion) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryVersion.ProtoReflect.Descriptor instead.
func (*QueryVersion) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{7}
}

func (x *QueryVersion) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryVersion_Cmd
}

func (x *QueryVersion) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryVersion_Param
}

func (x *QueryVersion) GetVersions() []*ManualVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type QueryManualData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=2" json:"param,omitempty"`
	Type  *EManualType `protobuf:"varint,3,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Item  *ManualItem  `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
}

// Default values for QueryManualData fields.
const (
	Default_QueryManualData_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_QueryManualData_Param = ManualParam_MANUALPARAM_QUERYDATA
	Default_QueryManualData_Type  = EManualType_EMANUALTYPE_MIN
)

func (x *QueryManualData) Reset() {
	*x = QueryManualData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryManualData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryManualData) ProtoMessage() {}

func (x *QueryManualData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryManualData.ProtoReflect.Descriptor instead.
func (*QueryManualData) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{8}
}

func (x *QueryManualData) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryManualData_Cmd
}

func (x *QueryManualData) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryManualData_Param
}

func (x *QueryManualData) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_QueryManualData_Type
}

func (x *QueryManualData) GetItem() *ManualItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type PointSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=3" json:"param,omitempty"`
	Point *uint32      `protobuf:"varint,3,opt,name=point,def=0" json:"point,omitempty"`
}

// Default values for PointSync fields.
const (
	Default_PointSync_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_PointSync_Param = ManualParam_MANUALPARAM_POINTSYNC
	Default_PointSync_Point = uint32(0)
)

func (x *PointSync) Reset() {
	*x = PointSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointSync) ProtoMessage() {}

func (x *PointSync) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointSync.ProtoReflect.Descriptor instead.
func (*PointSync) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{9}
}

func (x *PointSync) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PointSync_Cmd
}

func (x *PointSync) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PointSync_Param
}

func (x *PointSync) GetPoint() uint32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return Default_PointSync_Point
}

type ManualUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param  *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=4" json:"param,omitempty"`
	Update *ManualItem  `protobuf:"bytes,3,opt,name=update" json:"update,omitempty"`
}

// Default values for ManualUpdate fields.
const (
	Default_ManualUpdate_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_ManualUpdate_Param = ManualParam_MANUALPARAM_UPDATE
)

func (x *ManualUpdate) Reset() {
	*x = ManualUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualUpdate) ProtoMessage() {}

func (x *ManualUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualUpdate.ProtoReflect.Descriptor instead.
func (*ManualUpdate) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{10}
}

func (x *ManualUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ManualUpdate_Cmd
}

func (x *ManualUpdate) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ManualUpdate_Param
}

func (x *ManualUpdate) GetUpdate() *ManualItem {
	if x != nil {
		return x.Update
	}
	return nil
}

type GetAchieveReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=5" json:"param,omitempty"`
	Id    *uint32      `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for GetAchieveReward fields.
const (
	Default_GetAchieveReward_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_GetAchieveReward_Param = ManualParam_MANUALPARAM_GETREWARD
	Default_GetAchieveReward_Id    = uint32(0)
)

func (x *GetAchieveReward) Reset() {
	*x = GetAchieveReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchieveReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchieveReward) ProtoMessage() {}

func (x *GetAchieveReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchieveReward.ProtoReflect.Descriptor instead.
func (*GetAchieveReward) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{11}
}

func (x *GetAchieveReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetAchieveReward_Cmd
}

func (x *GetAchieveReward) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetAchieveReward_Param
}

func (x *GetAchieveReward) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_GetAchieveReward_Id
}

type Unlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=6" json:"param,omitempty"`
	Type  *EManualType `protobuf:"varint,3,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Id    *uint32      `protobuf:"varint,4,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for Unlock fields.
const (
	Default_Unlock_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_Unlock_Param = ManualParam_MANUALPARAM_UNLOCK
	Default_Unlock_Type  = EManualType_EMANUALTYPE_MIN
	Default_Unlock_Id    = uint32(0)
)

func (x *Unlock) Reset() {
	*x = Unlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unlock) ProtoMessage() {}

func (x *Unlock) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unlock.ProtoReflect.Descriptor instead.
func (*Unlock) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{12}
}

func (x *Unlock) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_Unlock_Cmd
}

func (x *Unlock) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_Unlock_Param
}

func (x *Unlock) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_Unlock_Type
}

func (x *Unlock) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_Unlock_Id
}

type SkillPointSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param      *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=7" json:"param,omitempty"`
	Skillpoint *uint32      `protobuf:"varint,3,opt,name=skillpoint,def=0" json:"skillpoint,omitempty"`
}

// Default values for SkillPointSync fields.
const (
	Default_SkillPointSync_Cmd        = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_SkillPointSync_Param      = ManualParam_MANUALPARAM_SKILLPOINTSYNC
	Default_SkillPointSync_Skillpoint = uint32(0)
)

func (x *SkillPointSync) Reset() {
	*x = SkillPointSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillPointSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillPointSync) ProtoMessage() {}

func (x *SkillPointSync) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillPointSync.ProtoReflect.Descriptor instead.
func (*SkillPointSync) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{13}
}

func (x *SkillPointSync) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SkillPointSync_Cmd
}

func (x *SkillPointSync) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SkillPointSync_Param
}

func (x *SkillPointSync) GetSkillpoint() uint32 {
	if x != nil && x.Skillpoint != nil {
		return *x.Skillpoint
	}
	return Default_SkillPointSync_Skillpoint
}

type LevelSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=8" json:"param,omitempty"`
	Level *uint32      `protobuf:"varint,3,opt,name=level,def=0" json:"level,omitempty"`
}

// Default values for LevelSync fields.
const (
	Default_LevelSync_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_LevelSync_Param = ManualParam_MANUALPARAM_LEVELSYNC
	Default_LevelSync_Level = uint32(0)
)

func (x *LevelSync) Reset() {
	*x = LevelSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelSync) ProtoMessage() {}

func (x *LevelSync) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelSync.ProtoReflect.Descriptor instead.
func (*LevelSync) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{14}
}

func (x *LevelSync) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_LevelSync_Cmd
}

func (x *LevelSync) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_LevelSync_Param
}

func (x *LevelSync) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_LevelSync_Level
}

type GetQuestReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param    *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=9" json:"param,omitempty"`
	Appendid *uint32      `protobuf:"varint,3,opt,name=appendid,def=0" json:"appendid,omitempty"`
}

// Default values for GetQuestReward fields.
const (
	Default_GetQuestReward_Cmd      = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_GetQuestReward_Param    = ManualParam_MANUALPARAM_GETQUESTREWARD
	Default_GetQuestReward_Appendid = uint32(0)
)

func (x *GetQuestReward) Reset() {
	*x = GetQuestReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestReward) ProtoMessage() {}

func (x *GetQuestReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestReward.ProtoReflect.Descriptor instead.
func (*GetQuestReward) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{15}
}

func (x *GetQuestReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetQuestReward_Cmd
}

func (x *GetQuestReward) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetQuestReward_Param
}

func (x *GetQuestReward) GetAppendid() uint32 {
	if x != nil && x.Appendid != nil {
		return *x.Appendid
	}
	return Default_GetQuestReward_Appendid
}

type StoreManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=10" json:"param,omitempty"`
	Type  *EManualType `protobuf:"varint,3,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Guid  *string      `protobuf:"bytes,4,opt,name=guid" json:"guid,omitempty"`
}

// Default values for StoreManualCmd fields.
const (
	Default_StoreManualCmd_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_StoreManualCmd_Param = ManualParam_MANUALPARAM_STOREITEM
	Default_StoreManualCmd_Type  = EManualType_EMANUALTYPE_MIN
)

func (x *StoreManualCmd) Reset() {
	*x = StoreManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreManualCmd) ProtoMessage() {}

func (x *StoreManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreManualCmd.ProtoReflect.Descriptor instead.
func (*StoreManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{16}
}

func (x *StoreManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StoreManualCmd_Cmd
}

func (x *StoreManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StoreManualCmd_Param
}

func (x *StoreManualCmd) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_StoreManualCmd_Type
}

func (x *StoreManualCmd) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type GetManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param  *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=11" json:"param,omitempty"`
	Type   *EManualType `protobuf:"varint,3,opt,name=type,enum=Cmd.EManualType,def=0" json:"type,omitempty"`
	Itemid *uint32      `protobuf:"varint,4,opt,name=itemid,def=0" json:"itemid,omitempty"`
}

// Default values for GetManualCmd fields.
const (
	Default_GetManualCmd_Cmd    = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_GetManualCmd_Param  = ManualParam_MANUALPARAM_GETITEM
	Default_GetManualCmd_Type   = EManualType_EMANUALTYPE_MIN
	Default_GetManualCmd_Itemid = uint32(0)
)

func (x *GetManualCmd) Reset() {
	*x = GetManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManualCmd) ProtoMessage() {}

func (x *GetManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManualCmd.ProtoReflect.Descriptor instead.
func (*GetManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{17}
}

func (x *GetManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetManualCmd_Cmd
}

func (x *GetManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetManualCmd_Param
}

func (x *GetManualCmd) GetType() EManualType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_GetManualCmd_Type
}

func (x *GetManualCmd) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return Default_GetManualCmd_Itemid
}

type GroupActionManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param   *ManualParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=12" json:"param,omitempty"`
	Action  *EGroupAction `protobuf:"varint,3,opt,name=action,enum=Cmd.EGroupAction,def=0" json:"action,omitempty"`
	GroupId *uint32       `protobuf:"varint,4,opt,name=group_id,json=groupId,def=0" json:"group_id,omitempty"`
}

// Default values for GroupActionManualCmd fields.
const (
	Default_GroupActionManualCmd_Cmd     = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_GroupActionManualCmd_Param   = ManualParam_MANUALPARAM_GROUPACTION
	Default_GroupActionManualCmd_Action  = EGroupAction_EGROUPACTION_MIN
	Default_GroupActionManualCmd_GroupId = uint32(0)
)

func (x *GroupActionManualCmd) Reset() {
	*x = GroupActionManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupActionManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupActionManualCmd) ProtoMessage() {}

func (x *GroupActionManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupActionManualCmd.ProtoReflect.Descriptor instead.
func (*GroupActionManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{18}
}

func (x *GroupActionManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GroupActionManualCmd_Cmd
}

func (x *GroupActionManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GroupActionManualCmd_Param
}

func (x *GroupActionManualCmd) GetAction() EGroupAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return Default_GroupActionManualCmd_Action
}

func (x *GroupActionManualCmd) GetGroupId() uint32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return Default_GroupActionManualCmd_GroupId
}

type UnsolvedPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *uint32 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Time   *uint32 `protobuf:"varint,2,opt,name=time,def=0" json:"time,omitempty"`
	Anglez *uint32 `protobuf:"varint,3,opt,name=anglez,def=0" json:"anglez,omitempty"`
}

// Default values for UnsolvedPhoto fields.
const (
	Default_UnsolvedPhoto_Id     = uint32(0)
	Default_UnsolvedPhoto_Time   = uint32(0)
	Default_UnsolvedPhoto_Anglez = uint32(0)
)

func (x *UnsolvedPhoto) Reset() {
	*x = UnsolvedPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsolvedPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsolvedPhoto) ProtoMessage() {}

func (x *UnsolvedPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsolvedPhoto.ProtoReflect.Descriptor instead.
func (*UnsolvedPhoto) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{19}
}

func (x *UnsolvedPhoto) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_UnsolvedPhoto_Id
}

func (x *UnsolvedPhoto) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_UnsolvedPhoto_Time
}

func (x *UnsolvedPhoto) GetAnglez() uint32 {
	if x != nil && x.Anglez != nil {
		return *x.Anglez
	}
	return Default_UnsolvedPhoto_Anglez
}

type UnsolvedUserPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid *uint64          `protobuf:"varint,1,opt,name=charid,def=0" json:"charid,omitempty"`
	Name   *string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Photos []*UnsolvedPhoto `protobuf:"bytes,3,rep,name=photos" json:"photos,omitempty"`
}

// Default values for UnsolvedUserPhoto fields.
const (
	Default_UnsolvedUserPhoto_Charid = uint64(0)
)

func (x *UnsolvedUserPhoto) Reset() {
	*x = UnsolvedUserPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsolvedUserPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsolvedUserPhoto) ProtoMessage() {}

func (x *UnsolvedUserPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsolvedUserPhoto.ProtoReflect.Descriptor instead.
func (*UnsolvedUserPhoto) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{20}
}

func (x *UnsolvedUserPhoto) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_UnsolvedUserPhoto_Charid
}

func (x *UnsolvedUserPhoto) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UnsolvedUserPhoto) GetPhotos() []*UnsolvedPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

type QueryUnsolvedPhotoManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command             `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param  *ManualParam         `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=13" json:"param,omitempty"`
	Photos []*UnsolvedUserPhoto `protobuf:"bytes,3,rep,name=photos" json:"photos,omitempty"`
	Time   *uint32              `protobuf:"varint,4,opt,name=time,def=0" json:"time,omitempty"`
}

// Default values for QueryUnsolvedPhotoManualCmd fields.
const (
	Default_QueryUnsolvedPhotoManualCmd_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_QueryUnsolvedPhotoManualCmd_Param = ManualParam_MANUALPARAM_QUERY_UNSOLVED_PHOTO
	Default_QueryUnsolvedPhotoManualCmd_Time  = uint32(0)
)

func (x *QueryUnsolvedPhotoManualCmd) Reset() {
	*x = QueryUnsolvedPhotoManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUnsolvedPhotoManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUnsolvedPhotoManualCmd) ProtoMessage() {}

func (x *QueryUnsolvedPhotoManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUnsolvedPhotoManualCmd.ProtoReflect.Descriptor instead.
func (*QueryUnsolvedPhotoManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{21}
}

func (x *QueryUnsolvedPhotoManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryUnsolvedPhotoManualCmd_Cmd
}

func (x *QueryUnsolvedPhotoManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryUnsolvedPhotoManualCmd_Param
}

func (x *QueryUnsolvedPhotoManualCmd) GetPhotos() []*UnsolvedUserPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *QueryUnsolvedPhotoManualCmd) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_QueryUnsolvedPhotoManualCmd_Time
}

type UpdateSolvedPhotoManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param     *ManualParam `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=14" json:"param,omitempty"`
	Charid    *uint64      `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Sceneryid *uint32      `protobuf:"varint,4,opt,name=sceneryid,def=0" json:"sceneryid,omitempty"`
}

// Default values for UpdateSolvedPhotoManualCmd fields.
const (
	Default_UpdateSolvedPhotoManualCmd_Cmd       = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_UpdateSolvedPhotoManualCmd_Param     = ManualParam_MANUALPARAM_UPDATE_UNSOLVED_PHOTO
	Default_UpdateSolvedPhotoManualCmd_Charid    = uint64(0)
	Default_UpdateSolvedPhotoManualCmd_Sceneryid = uint32(0)
)

func (x *UpdateSolvedPhotoManualCmd) Reset() {
	*x = UpdateSolvedPhotoManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSolvedPhotoManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSolvedPhotoManualCmd) ProtoMessage() {}

func (x *UpdateSolvedPhotoManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSolvedPhotoManualCmd.ProtoReflect.Descriptor instead.
func (*UpdateSolvedPhotoManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateSolvedPhotoManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateSolvedPhotoManualCmd_Cmd
}

func (x *UpdateSolvedPhotoManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateSolvedPhotoManualCmd_Param
}

func (x *UpdateSolvedPhotoManualCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_UpdateSolvedPhotoManualCmd_Charid
}

func (x *UpdateSolvedPhotoManualCmd) GetSceneryid() uint32 {
	if x != nil && x.Sceneryid != nil {
		return *x.Sceneryid
	}
	return Default_UpdateSolvedPhotoManualCmd_Sceneryid
}

type NpcZoneDataManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param   *ManualParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=15" json:"param,omitempty"`
	Datas   []*ManualZone `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	Bupdate *bool         `protobuf:"varint,4,opt,name=bupdate,def=0" json:"bupdate,omitempty"`
}

// Default values for NpcZoneDataManualCmd fields.
const (
	Default_NpcZoneDataManualCmd_Cmd     = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_NpcZoneDataManualCmd_Param   = ManualParam_MANUALPARAM_NPCZONE
	Default_NpcZoneDataManualCmd_Bupdate = bool(false)
)

func (x *NpcZoneDataManualCmd) Reset() {
	*x = NpcZoneDataManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpcZoneDataManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpcZoneDataManualCmd) ProtoMessage() {}

func (x *NpcZoneDataManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpcZoneDataManualCmd.ProtoReflect.Descriptor instead.
func (*NpcZoneDataManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{23}
}

func (x *NpcZoneDataManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NpcZoneDataManualCmd_Cmd
}

func (x *NpcZoneDataManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NpcZoneDataManualCmd_Param
}

func (x *NpcZoneDataManualCmd) GetDatas() []*ManualZone {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *NpcZoneDataManualCmd) GetBupdate() bool {
	if x != nil && x.Bupdate != nil {
		return *x.Bupdate
	}
	return Default_NpcZoneDataManualCmd_Bupdate
}

type NpcZoneRewardManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command               `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam           `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=16" json:"param,omitempty"`
	Id    *uint32                `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Type  *EManualZoneRewardType `protobuf:"varint,4,opt,name=type,enum=Cmd.EManualZoneRewardType,def=0" json:"type,omitempty"`
}

// Default values for NpcZoneRewardManualCmd fields.
const (
	Default_NpcZoneRewardManualCmd_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_NpcZoneRewardManualCmd_Param = ManualParam_MANUALPARAM_NPCZONE_REWARD
	Default_NpcZoneRewardManualCmd_Id    = uint32(0)
	Default_NpcZoneRewardManualCmd_Type  = EManualZoneRewardType_EMANUALZoneReward_MIN
)

func (x *NpcZoneRewardManualCmd) Reset() {
	*x = NpcZoneRewardManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpcZoneRewardManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpcZoneRewardManualCmd) ProtoMessage() {}

func (x *NpcZoneRewardManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpcZoneRewardManualCmd.ProtoReflect.Descriptor instead.
func (*NpcZoneRewardManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{24}
}

func (x *NpcZoneRewardManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NpcZoneRewardManualCmd_Cmd
}

func (x *NpcZoneRewardManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NpcZoneRewardManualCmd_Param
}

func (x *NpcZoneRewardManualCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_NpcZoneRewardManualCmd_Id
}

func (x *NpcZoneRewardManualCmd) GetType() EManualZoneRewardType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_NpcZoneRewardManualCmd_Type
}

type CollectionRewardManualCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=23" json:"cmd,omitempty"`
	Param *ManualParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.ManualParam,def=17" json:"param,omitempty"`
	Items []*ManualGroup `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

// Default values for CollectionRewardManualCmd fields.
const (
	Default_CollectionRewardManualCmd_Cmd   = Command_SCENE_USER_MANUAL_PROTOCMD
	Default_CollectionRewardManualCmd_Param = ManualParam_MANUALPARAM_COLLECTION_REWARD
)

func (x *CollectionRewardManualCmd) Reset() {
	*x = CollectionRewardManualCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneManual_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRewardManualCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRewardManualCmd) ProtoMessage() {}

func (x *CollectionRewardManualCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneManual_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRewardManualCmd.ProtoReflect.Descriptor instead.
func (*CollectionRewardManualCmd) Descriptor() ([]byte, []int) {
	return file_SceneManual_proto_rawDescGZIP(), []int{25}
}

func (x *CollectionRewardManualCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CollectionRewardManualCmd_Cmd
}

func (x *CollectionRewardManualCmd) GetParam() ManualParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CollectionRewardManualCmd_Param
}

func (x *CollectionRewardManualCmd) GetItems() []*ManualGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_SceneManual_proto protoreflect.FileDescriptor

var file_SceneManual_proto_rawDesc = []byte{
	0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x67, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x67, 0x65, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x0d, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a,
	0x11, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d,
	0x49, 0x4e, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x06,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb4, 0x01,
	0x0a, 0x0a, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x16,
	0x45, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf9,
	0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x1c, 0x0a, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1e,
	0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x24,
	0x0a, 0x0a, 0x6e, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x6e, 0x70, 0x63, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x0e,
	0x70, 0x65, 0x72, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xee, 0x02, 0x0a, 0x0a, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x0d, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2e, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xe8, 0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f,
	0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a,
	0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45,
	0x54, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xca, 0x01, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x0e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xaf, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54, 0x51, 0x55, 0x45, 0x53, 0x54, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x49, 0x54, 0x45, 0x4d, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43,
	0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x13, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54,
	0x49, 0x54, 0x45, 0x4d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x45, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x22, 0xee, 0x01,
	0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x17, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x3b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x10, 0x45, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x54,
	0x0a, 0x0d, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x7a, 0x22, 0x6e, 0x0a, 0x11, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55,
	0x6e, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x20, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0xdf, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x21, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x72, 0x79, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x72,
	0x79, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x14, 0x4e, 0x70, 0x63, 0x5a, 0x6f, 0x6e, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x50, 0x43, 0x5a, 0x4f, 0x4e, 0x45, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x1f, 0x0a, 0x07,
	0x62, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x62, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xf2, 0x01,
	0x0a, 0x16, 0x4e, 0x70, 0x63, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4e, 0x50, 0x43, 0x5a, 0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x6d, 0x64,
	0x12, 0x3a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1a, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x81, 0x04, 0x0a, 0x0b,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x18, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x45, 0x54, 0x51, 0x55, 0x45, 0x53, 0x54, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x0a,
	0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x4f,
	0x4c, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x10, 0x0d, 0x12, 0x25, 0x0a, 0x21,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x54,
	0x4f, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4e, 0x50, 0x43, 0x5a, 0x4f, 0x4e, 0x45, 0x10, 0x0f, 0x12, 0x1e, 0x0a, 0x1a,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x50, 0x43, 0x5a,
	0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x10, 0x12, 0x21, 0x0a, 0x1d,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x11, 0x2a,
	0x95, 0x04, 0x0a, 0x0b, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x53, 0x48, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x04,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x50, 0x43, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x10, 0x08, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x41, 0x50, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56, 0x45, 0x10, 0x0a, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x52, 0x59, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x0f, 0x12, 0x19, 0x0a, 0x15,
	0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x49, 0x52,
	0x53, 0x54, 0x59, 0x4c, 0x45, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x45, 0x10, 0x11, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4f,
	0x44, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x45, 0x54, 0x10, 0x13, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x59, 0x10, 0x14, 0x12, 0x18, 0x0a,
	0x14, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x54, 0x49, 0x47, 0x45, 0x10, 0x15, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x55, 0x52, 0x4e, 0x49, 0x54, 0x55, 0x52, 0x45,
	0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x17, 0x2a, 0xad, 0x02, 0x0a, 0x11, 0x45, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4b, 0x49,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c,
	0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x10, 0x03, 0x12,
	0x19, 0x0a, 0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x56, 0x49, 0x53, 0x49, 0x54, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x48, 0x4f,
	0x54, 0x4f, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c,
	0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15,
	0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x09, 0x2a, 0xb2, 0x01, 0x0a, 0x0d, 0x45, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x45,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4c,
	0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x45,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x2a, 0x69, 0x0a, 0x11,
	0x45, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x45, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x45, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x02, 0x2a, 0x7a, 0x0a, 0x0c, 0x45, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x45, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41,
	0x58, 0x10, 0x03, 0x2a, 0xa3, 0x01, 0x0a, 0x15, 0x45, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x5a, 0x4f, 0x4e, 0x45, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x4e, 0x50,
	0x43, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5a, 0x4f,
	0x4e, 0x45, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5a, 0x4f, 0x4e, 0x45, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5a, 0x4f, 0x4e, 0x45, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x04,
}

var (
	file_SceneManual_proto_rawDescOnce sync.Once
	file_SceneManual_proto_rawDescData = file_SceneManual_proto_rawDesc
)

func file_SceneManual_proto_rawDescGZIP() []byte {
	file_SceneManual_proto_rawDescOnce.Do(func() {
		file_SceneManual_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneManual_proto_rawDescData)
	})
	return file_SceneManual_proto_rawDescData
}

var file_SceneManual_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_SceneManual_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_SceneManual_proto_goTypes = []interface{}{
	(ManualParam)(0),                    // 0: Cmd.ManualParam
	(EManualType)(0),                    // 1: Cmd.EManualType
	(EManualLockMethod)(0),              // 2: Cmd.EManualLockMethod
	(EManualStatus)(0),                  // 3: Cmd.EManualStatus
	(ECollectionStatus)(0),              // 4: Cmd.ECollectionStatus
	(EGroupAction)(0),                   // 5: Cmd.EGroupAction
	(EManualZoneRewardType)(0),          // 6: Cmd.EManualZoneRewardType
	(*ManualQuest)(nil),                 // 7: Cmd.ManualQuest
	(*ManualSubItem)(nil),               // 8: Cmd.ManualSubItem
	(*ManualItem)(nil),                  // 9: Cmd.ManualItem
	(*ManualGroup)(nil),                 // 10: Cmd.ManualGroup
	(*ManualZone)(nil),                  // 11: Cmd.ManualZone
	(*ManualData)(nil),                  // 12: Cmd.ManualData
	(*ManualVersion)(nil),               // 13: Cmd.ManualVersion
	(*QueryVersion)(nil),                // 14: Cmd.QueryVersion
	(*QueryManualData)(nil),             // 15: Cmd.QueryManualData
	(*PointSync)(nil),                   // 16: Cmd.PointSync
	(*ManualUpdate)(nil),                // 17: Cmd.ManualUpdate
	(*GetAchieveReward)(nil),            // 18: Cmd.GetAchieveReward
	(*Unlock)(nil),                      // 19: Cmd.Unlock
	(*SkillPointSync)(nil),              // 20: Cmd.SkillPointSync
	(*LevelSync)(nil),                   // 21: Cmd.LevelSync
	(*GetQuestReward)(nil),              // 22: Cmd.GetQuestReward
	(*StoreManualCmd)(nil),              // 23: Cmd.StoreManualCmd
	(*GetManualCmd)(nil),                // 24: Cmd.GetManualCmd
	(*GroupActionManualCmd)(nil),        // 25: Cmd.GroupActionManualCmd
	(*UnsolvedPhoto)(nil),               // 26: Cmd.UnsolvedPhoto
	(*UnsolvedUserPhoto)(nil),           // 27: Cmd.UnsolvedUserPhoto
	(*QueryUnsolvedPhotoManualCmd)(nil), // 28: Cmd.QueryUnsolvedPhotoManualCmd
	(*UpdateSolvedPhotoManualCmd)(nil),  // 29: Cmd.UpdateSolvedPhotoManualCmd
	(*NpcZoneDataManualCmd)(nil),        // 30: Cmd.NpcZoneDataManualCmd
	(*NpcZoneRewardManualCmd)(nil),      // 31: Cmd.NpcZoneRewardManualCmd
	(*CollectionRewardManualCmd)(nil),   // 32: Cmd.CollectionRewardManualCmd
	(*ItemData)(nil),                    // 33: Cmd.ItemData
	(Command)(0),                        // 34: Cmd.Command
}
var file_SceneManual_proto_depIdxs = []int32{
	3,  // 0: Cmd.ManualSubItem.status:type_name -> Cmd.EManualStatus
	7,  // 1: Cmd.ManualSubItem.quests:type_name -> Cmd.ManualQuest
	33, // 2: Cmd.ManualSubItem.item:type_name -> Cmd.ItemData
	33, // 3: Cmd.ManualSubItem.storeditems:type_name -> Cmd.ItemData
	1,  // 4: Cmd.ManualItem.type:type_name -> Cmd.EManualType
	8,  // 5: Cmd.ManualItem.items:type_name -> Cmd.ManualSubItem
	7,  // 6: Cmd.ManualItem.quests:type_name -> Cmd.ManualQuest
	4,  // 7: Cmd.ManualGroup.status:type_name -> Cmd.ECollectionStatus
	9,  // 8: Cmd.ManualData.items:type_name -> Cmd.ManualItem
	10, // 9: Cmd.ManualData.groups:type_name -> Cmd.ManualGroup
	11, // 10: Cmd.ManualData.zones:type_name -> Cmd.ManualZone
	1,  // 11: Cmd.ManualVersion.type:type_name -> Cmd.EManualType
	34, // 12: Cmd.QueryVersion.cmd:type_name -> Cmd.Command
	0,  // 13: Cmd.QueryVersion.param:type_name -> Cmd.ManualParam
	13, // 14: Cmd.QueryVersion.versions:type_name -> Cmd.ManualVersion
	34, // 15: Cmd.QueryManualData.cmd:type_name -> Cmd.Command
	0,  // 16: Cmd.QueryManualData.param:type_name -> Cmd.ManualParam
	1,  // 17: Cmd.QueryManualData.type:type_name -> Cmd.EManualType
	9,  // 18: Cmd.QueryManualData.item:type_name -> Cmd.ManualItem
	34, // 19: Cmd.PointSync.cmd:type_name -> Cmd.Command
	0,  // 20: Cmd.PointSync.param:type_name -> Cmd.ManualParam
	34, // 21: Cmd.ManualUpdate.cmd:type_name -> Cmd.Command
	0,  // 22: Cmd.ManualUpdate.param:type_name -> Cmd.ManualParam
	9,  // 23: Cmd.ManualUpdate.update:type_name -> Cmd.ManualItem
	34, // 24: Cmd.GetAchieveReward.cmd:type_name -> Cmd.Command
	0,  // 25: Cmd.GetAchieveReward.param:type_name -> Cmd.ManualParam
	34, // 26: Cmd.Unlock.cmd:type_name -> Cmd.Command
	0,  // 27: Cmd.Unlock.param:type_name -> Cmd.ManualParam
	1,  // 28: Cmd.Unlock.type:type_name -> Cmd.EManualType
	34, // 29: Cmd.SkillPointSync.cmd:type_name -> Cmd.Command
	0,  // 30: Cmd.SkillPointSync.param:type_name -> Cmd.ManualParam
	34, // 31: Cmd.LevelSync.cmd:type_name -> Cmd.Command
	0,  // 32: Cmd.LevelSync.param:type_name -> Cmd.ManualParam
	34, // 33: Cmd.GetQuestReward.cmd:type_name -> Cmd.Command
	0,  // 34: Cmd.GetQuestReward.param:type_name -> Cmd.ManualParam
	34, // 35: Cmd.StoreManualCmd.cmd:type_name -> Cmd.Command
	0,  // 36: Cmd.StoreManualCmd.param:type_name -> Cmd.ManualParam
	1,  // 37: Cmd.StoreManualCmd.type:type_name -> Cmd.EManualType
	34, // 38: Cmd.GetManualCmd.cmd:type_name -> Cmd.Command
	0,  // 39: Cmd.GetManualCmd.param:type_name -> Cmd.ManualParam
	1,  // 40: Cmd.GetManualCmd.type:type_name -> Cmd.EManualType
	34, // 41: Cmd.GroupActionManualCmd.cmd:type_name -> Cmd.Command
	0,  // 42: Cmd.GroupActionManualCmd.param:type_name -> Cmd.ManualParam
	5,  // 43: Cmd.GroupActionManualCmd.action:type_name -> Cmd.EGroupAction
	26, // 44: Cmd.UnsolvedUserPhoto.photos:type_name -> Cmd.UnsolvedPhoto
	34, // 45: Cmd.QueryUnsolvedPhotoManualCmd.cmd:type_name -> Cmd.Command
	0,  // 46: Cmd.QueryUnsolvedPhotoManualCmd.param:type_name -> Cmd.ManualParam
	27, // 47: Cmd.QueryUnsolvedPhotoManualCmd.photos:type_name -> Cmd.UnsolvedUserPhoto
	34, // 48: Cmd.UpdateSolvedPhotoManualCmd.cmd:type_name -> Cmd.Command
	0,  // 49: Cmd.UpdateSolvedPhotoManualCmd.param:type_name -> Cmd.ManualParam
	34, // 50: Cmd.NpcZoneDataManualCmd.cmd:type_name -> Cmd.Command
	0,  // 51: Cmd.NpcZoneDataManualCmd.param:type_name -> Cmd.ManualParam
	11, // 52: Cmd.NpcZoneDataManualCmd.datas:type_name -> Cmd.ManualZone
	34, // 53: Cmd.NpcZoneRewardManualCmd.cmd:type_name -> Cmd.Command
	0,  // 54: Cmd.NpcZoneRewardManualCmd.param:type_name -> Cmd.ManualParam
	6,  // 55: Cmd.NpcZoneRewardManualCmd.type:type_name -> Cmd.EManualZoneRewardType
	34, // 56: Cmd.CollectionRewardManualCmd.cmd:type_name -> Cmd.Command
	0,  // 57: Cmd.CollectionRewardManualCmd.param:type_name -> Cmd.ManualParam
	10, // 58: Cmd.CollectionRewardManualCmd.items:type_name -> Cmd.ManualGroup
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_SceneManual_proto_init() }
func file_SceneManual_proto_init() {
	if File_SceneManual_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneItem_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneManual_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualQuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualSubItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryManualData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchieveReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillPointSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupActionManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsolvedPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsolvedUserPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUnsolvedPhotoManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSolvedPhotoManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpcZoneDataManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpcZoneRewardManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneManual_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRewardManualCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneManual_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneManual_proto_goTypes,
		DependencyIndexes: file_SceneManual_proto_depIdxs,
		EnumInfos:         file_SceneManual_proto_enumTypes,
		MessageInfos:      file_SceneManual_proto_msgTypes,
	}.Build()
	File_SceneManual_proto = out.File
	file_SceneManual_proto_rawDesc = nil
	file_SceneManual_proto_goTypes = nil
	file_SceneManual_proto_depIdxs = nil
}
