// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: BattlePass.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EBattlePassParam int32

const (
	EBattlePassParam_BATTLEPASS_GET_REWAD     EBattlePassParam = 1
	EBattlePassParam_BATTLEPASS_UPDATE_REWARD EBattlePassParam = 2
	EBattlePassParam_BATTLEPASS_BUY_LEVEL     EBattlePassParam = 3
	EBattlePassParam_BATTLEPASS_BUY_ADVANCE   EBattlePassParam = 4
	EBattlePassParam_BATTLEPASS_SYNC_INFO     EBattlePassParam = 5
)

// Enum value maps for EBattlePassParam.
var (
	EBattlePassParam_name = map[int32]string{
		1: "BATTLEPASS_GET_REWAD",
		2: "BATTLEPASS_UPDATE_REWARD",
		3: "BATTLEPASS_BUY_LEVEL",
		4: "BATTLEPASS_BUY_ADVANCE",
		5: "BATTLEPASS_SYNC_INFO",
	}
	EBattlePassParam_value = map[string]int32{
		"BATTLEPASS_GET_REWAD":     1,
		"BATTLEPASS_UPDATE_REWARD": 2,
		"BATTLEPASS_BUY_LEVEL":     3,
		"BATTLEPASS_BUY_ADVANCE":   4,
		"BATTLEPASS_SYNC_INFO":     5,
	}
)

func (x EBattlePassParam) Enum() *EBattlePassParam {
	p := new(EBattlePassParam)
	*p = x
	return p
}

func (x EBattlePassParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBattlePassParam) Descriptor() protoreflect.EnumDescriptor {
	return file_BattlePass_proto_enumTypes[0].Descriptor()
}

func (EBattlePassParam) Type() protoreflect.EnumType {
	return &file_BattlePass_proto_enumTypes[0]
}

func (x EBattlePassParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBattlePassParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBattlePassParam(num)
	return nil
}

// Deprecated: Use EBattlePassParam.Descriptor instead.
func (EBattlePassParam) EnumDescriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{0}
}

type GetRewardBattlePassCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=222" json:"cmd,omitempty"`
	Param    *EBattlePassParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EBattlePassParam,def=1" json:"param,omitempty"`
	All      *bool             `protobuf:"varint,3,opt,name=all,def=0" json:"all,omitempty"`
	NormalLv *uint32           `protobuf:"varint,4,opt,name=normal_lv,json=normalLv,def=0" json:"normal_lv,omitempty"`
	ProLv    *uint32           `protobuf:"varint,5,opt,name=pro_lv,json=proLv,def=0" json:"pro_lv,omitempty"`
	SuLv     *uint32           `protobuf:"varint,6,opt,name=su_lv,json=suLv,def=0" json:"su_lv,omitempty"`
}

// Default values for GetRewardBattlePassCmd fields.
const (
	Default_GetRewardBattlePassCmd_Cmd      = Command_BATTLEPASS_PROTOCMD
	Default_GetRewardBattlePassCmd_Param    = EBattlePassParam_BATTLEPASS_GET_REWAD
	Default_GetRewardBattlePassCmd_All      = bool(false)
	Default_GetRewardBattlePassCmd_NormalLv = uint32(0)
	Default_GetRewardBattlePassCmd_ProLv    = uint32(0)
	Default_GetRewardBattlePassCmd_SuLv     = uint32(0)
)

func (x *GetRewardBattlePassCmd) Reset() {
	*x = GetRewardBattlePassCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BattlePass_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardBattlePassCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardBattlePassCmd) ProtoMessage() {}

func (x *GetRewardBattlePassCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BattlePass_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardBattlePassCmd.ProtoReflect.Descriptor instead.
func (*GetRewardBattlePassCmd) Descriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{0}
}

func (x *GetRewardBattlePassCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetRewardBattlePassCmd_Cmd
}

func (x *GetRewardBattlePassCmd) GetParam() EBattlePassParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetRewardBattlePassCmd_Param
}

func (x *GetRewardBattlePassCmd) GetAll() bool {
	if x != nil && x.All != nil {
		return *x.All
	}
	return Default_GetRewardBattlePassCmd_All
}

func (x *GetRewardBattlePassCmd) GetNormalLv() uint32 {
	if x != nil && x.NormalLv != nil {
		return *x.NormalLv
	}
	return Default_GetRewardBattlePassCmd_NormalLv
}

func (x *GetRewardBattlePassCmd) GetProLv() uint32 {
	if x != nil && x.ProLv != nil {
		return *x.ProLv
	}
	return Default_GetRewardBattlePassCmd_ProLv
}

func (x *GetRewardBattlePassCmd) GetSuLv() uint32 {
	if x != nil && x.SuLv != nil {
		return *x.SuLv
	}
	return Default_GetRewardBattlePassCmd_SuLv
}

type UpdateRewardBattlePassCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=222" json:"cmd,omitempty"`
	Param     *EBattlePassParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EBattlePassParam,def=2" json:"param,omitempty"`
	Levels    []uint32          `protobuf:"varint,3,rep,name=levels" json:"levels,omitempty"`
	Prolevels []uint32          `protobuf:"varint,4,rep,name=prolevels" json:"prolevels,omitempty"`
	Sulevels  []uint32          `protobuf:"varint,5,rep,name=sulevels" json:"sulevels,omitempty"`
}

// Default values for UpdateRewardBattlePassCmd fields.
const (
	Default_UpdateRewardBattlePassCmd_Cmd   = Command_BATTLEPASS_PROTOCMD
	Default_UpdateRewardBattlePassCmd_Param = EBattlePassParam_BATTLEPASS_UPDATE_REWARD
)

func (x *UpdateRewardBattlePassCmd) Reset() {
	*x = UpdateRewardBattlePassCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BattlePass_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRewardBattlePassCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRewardBattlePassCmd) ProtoMessage() {}

func (x *UpdateRewardBattlePassCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BattlePass_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRewardBattlePassCmd.ProtoReflect.Descriptor instead.
func (*UpdateRewardBattlePassCmd) Descriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRewardBattlePassCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateRewardBattlePassCmd_Cmd
}

func (x *UpdateRewardBattlePassCmd) GetParam() EBattlePassParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateRewardBattlePassCmd_Param
}

func (x *UpdateRewardBattlePassCmd) GetLevels() []uint32 {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *UpdateRewardBattlePassCmd) GetProlevels() []uint32 {
	if x != nil {
		return x.Prolevels
	}
	return nil
}

func (x *UpdateRewardBattlePassCmd) GetSulevels() []uint32 {
	if x != nil {
		return x.Sulevels
	}
	return nil
}

type BuyLevelBattlePassCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=222" json:"cmd,omitempty"`
	Param *EBattlePassParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EBattlePassParam,def=3" json:"param,omitempty"`
	Level *uint32           `protobuf:"varint,3,opt,name=level,def=0" json:"level,omitempty"`
}

// Default values for BuyLevelBattlePassCmd fields.
const (
	Default_BuyLevelBattlePassCmd_Cmd   = Command_BATTLEPASS_PROTOCMD
	Default_BuyLevelBattlePassCmd_Param = EBattlePassParam_BATTLEPASS_BUY_LEVEL
	Default_BuyLevelBattlePassCmd_Level = uint32(0)
)

func (x *BuyLevelBattlePassCmd) Reset() {
	*x = BuyLevelBattlePassCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BattlePass_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyLevelBattlePassCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyLevelBattlePassCmd) ProtoMessage() {}

func (x *BuyLevelBattlePassCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BattlePass_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyLevelBattlePassCmd.ProtoReflect.Descriptor instead.
func (*BuyLevelBattlePassCmd) Descriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{2}
}

func (x *BuyLevelBattlePassCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BuyLevelBattlePassCmd_Cmd
}

func (x *BuyLevelBattlePassCmd) GetParam() EBattlePassParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BuyLevelBattlePassCmd_Param
}

func (x *BuyLevelBattlePassCmd) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_BuyLevelBattlePassCmd_Level
}

type AdvanceBattlePassCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=222" json:"cmd,omitempty"`
	Param *EBattlePassParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EBattlePassParam,def=4" json:"param,omitempty"`
	Level *uint32           `protobuf:"varint,3,opt,name=level,def=0" json:"level,omitempty"`
	Super *bool             `protobuf:"varint,4,opt,name=super,def=0" json:"super,omitempty"`
}

// Default values for AdvanceBattlePassCmd fields.
const (
	Default_AdvanceBattlePassCmd_Cmd   = Command_BATTLEPASS_PROTOCMD
	Default_AdvanceBattlePassCmd_Param = EBattlePassParam_BATTLEPASS_BUY_ADVANCE
	Default_AdvanceBattlePassCmd_Level = uint32(0)
	Default_AdvanceBattlePassCmd_Super = bool(false)
)

func (x *AdvanceBattlePassCmd) Reset() {
	*x = AdvanceBattlePassCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BattlePass_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvanceBattlePassCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvanceBattlePassCmd) ProtoMessage() {}

func (x *AdvanceBattlePassCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BattlePass_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvanceBattlePassCmd.ProtoReflect.Descriptor instead.
func (*AdvanceBattlePassCmd) Descriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{3}
}

func (x *AdvanceBattlePassCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AdvanceBattlePassCmd_Cmd
}

func (x *AdvanceBattlePassCmd) GetParam() EBattlePassParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AdvanceBattlePassCmd_Param
}

func (x *AdvanceBattlePassCmd) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_AdvanceBattlePassCmd_Level
}

func (x *AdvanceBattlePassCmd) GetSuper() bool {
	if x != nil && x.Super != nil {
		return *x.Super
	}
	return Default_AdvanceBattlePassCmd_Super
}

type SyncInfoBattlePassCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=222" json:"cmd,omitempty"`
	Param        *EBattlePassParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EBattlePassParam,def=5" json:"param,omitempty"`
	Level        *uint32           `protobuf:"varint,3,opt,name=level,def=0" json:"level,omitempty"`
	ProLevel     *uint32           `protobuf:"varint,4,opt,name=pro_level,json=proLevel,def=0" json:"pro_level,omitempty"`
	Rewardlvs    []uint32          `protobuf:"varint,5,rep,name=rewardlvs" json:"rewardlvs,omitempty"`
	RewardProlvs []uint32          `protobuf:"varint,6,rep,name=reward_prolvs,json=rewardProlvs" json:"reward_prolvs,omitempty"`
	Exp          *uint32           `protobuf:"varint,7,opt,name=exp,def=0" json:"exp,omitempty"`
	SuLevel      *uint32           `protobuf:"varint,8,opt,name=su_level,json=suLevel" json:"su_level,omitempty"`
	RewardSulvs  []uint32          `protobuf:"varint,9,rep,name=reward_sulvs,json=rewardSulvs" json:"reward_sulvs,omitempty"`
	Version      *uint32           `protobuf:"varint,10,opt,name=version,def=0" json:"version,omitempty"`
}

// Default values for SyncInfoBattlePassCmd fields.
const (
	Default_SyncInfoBattlePassCmd_Cmd      = Command_BATTLEPASS_PROTOCMD
	Default_SyncInfoBattlePassCmd_Param    = EBattlePassParam_BATTLEPASS_SYNC_INFO
	Default_SyncInfoBattlePassCmd_Level    = uint32(0)
	Default_SyncInfoBattlePassCmd_ProLevel = uint32(0)
	Default_SyncInfoBattlePassCmd_Exp      = uint32(0)
	Default_SyncInfoBattlePassCmd_Version  = uint32(0)
)

func (x *SyncInfoBattlePassCmd) Reset() {
	*x = SyncInfoBattlePassCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BattlePass_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInfoBattlePassCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInfoBattlePassCmd) ProtoMessage() {}

func (x *SyncInfoBattlePassCmd) ProtoReflect() protoreflect.Message {
	mi := &file_BattlePass_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInfoBattlePassCmd.ProtoReflect.Descriptor instead.
func (*SyncInfoBattlePassCmd) Descriptor() ([]byte, []int) {
	return file_BattlePass_proto_rawDescGZIP(), []int{4}
}

func (x *SyncInfoBattlePassCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SyncInfoBattlePassCmd_Cmd
}

func (x *SyncInfoBattlePassCmd) GetParam() EBattlePassParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SyncInfoBattlePassCmd_Param
}

func (x *SyncInfoBattlePassCmd) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_SyncInfoBattlePassCmd_Level
}

func (x *SyncInfoBattlePassCmd) GetProLevel() uint32 {
	if x != nil && x.ProLevel != nil {
		return *x.ProLevel
	}
	return Default_SyncInfoBattlePassCmd_ProLevel
}

func (x *SyncInfoBattlePassCmd) GetRewardlvs() []uint32 {
	if x != nil {
		return x.Rewardlvs
	}
	return nil
}

func (x *SyncInfoBattlePassCmd) GetRewardProlvs() []uint32 {
	if x != nil {
		return x.RewardProlvs
	}
	return nil
}

func (x *SyncInfoBattlePassCmd) GetExp() uint32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return Default_SyncInfoBattlePassCmd_Exp
}

func (x *SyncInfoBattlePassCmd) GetSuLevel() uint32 {
	if x != nil && x.SuLevel != nil {
		return *x.SuLevel
	}
	return 0
}

func (x *SyncInfoBattlePassCmd) GetRewardSulvs() []uint32 {
	if x != nil {
		return x.RewardSulvs
	}
	return nil
}

func (x *SyncInfoBattlePassCmd) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_SyncInfoBattlePassCmd_Version
}

var File_BattlePass_proto protoreflect.FileDescriptor

var file_BattlePass_proto_rawDesc = []byte{
	0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x44, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12,
	0x1e, 0x0a, 0x09, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4c, 0x76, 0x12,
	0x18, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x5f, 0x6c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x4c, 0x76, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x75, 0x5f,
	0x6c, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x73, 0x75, 0x4c,
	0x76, 0x22, 0xe9, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x22, 0xa8, 0x01,
	0x0a, 0x15, 0x42, 0x75, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x42,
	0x55, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x17, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x43, 0x6d,
	0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x42, 0x41,
	0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x42, 0x41,
	0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x41, 0x44, 0x56,
	0x41, 0x4e, 0x43, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x22, 0xfb, 0x02, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41,
	0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41,
	0x53, 0x53, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x6c, 0x76, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x6c, 0x76, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6c, 0x76, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6c, 0x76, 0x73, 0x12,
	0x13, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x75, 0x6c, 0x76, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x75, 0x6c,
	0x76, 0x73, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a,
	0x9a, 0x01, 0x0a, 0x10, 0x45, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41,
	0x53, 0x53, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x44, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x50, 0x41, 0x53, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x05,
}

var (
	file_BattlePass_proto_rawDescOnce sync.Once
	file_BattlePass_proto_rawDescData = file_BattlePass_proto_rawDesc
)

func file_BattlePass_proto_rawDescGZIP() []byte {
	file_BattlePass_proto_rawDescOnce.Do(func() {
		file_BattlePass_proto_rawDescData = protoimpl.X.CompressGZIP(file_BattlePass_proto_rawDescData)
	})
	return file_BattlePass_proto_rawDescData
}

var file_BattlePass_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_BattlePass_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_BattlePass_proto_goTypes = []interface{}{
	(EBattlePassParam)(0),             // 0: Cmd.EBattlePassParam
	(*GetRewardBattlePassCmd)(nil),    // 1: Cmd.GetRewardBattlePassCmd
	(*UpdateRewardBattlePassCmd)(nil), // 2: Cmd.UpdateRewardBattlePassCmd
	(*BuyLevelBattlePassCmd)(nil),     // 3: Cmd.BuyLevelBattlePassCmd
	(*AdvanceBattlePassCmd)(nil),      // 4: Cmd.AdvanceBattlePassCmd
	(*SyncInfoBattlePassCmd)(nil),     // 5: Cmd.SyncInfoBattlePassCmd
	(Command)(0),                      // 6: Cmd.Command
}
var file_BattlePass_proto_depIdxs = []int32{
	6,  // 0: Cmd.GetRewardBattlePassCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.GetRewardBattlePassCmd.param:type_name -> Cmd.EBattlePassParam
	6,  // 2: Cmd.UpdateRewardBattlePassCmd.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.UpdateRewardBattlePassCmd.param:type_name -> Cmd.EBattlePassParam
	6,  // 4: Cmd.BuyLevelBattlePassCmd.cmd:type_name -> Cmd.Command
	0,  // 5: Cmd.BuyLevelBattlePassCmd.param:type_name -> Cmd.EBattlePassParam
	6,  // 6: Cmd.AdvanceBattlePassCmd.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.AdvanceBattlePassCmd.param:type_name -> Cmd.EBattlePassParam
	6,  // 8: Cmd.SyncInfoBattlePassCmd.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.SyncInfoBattlePassCmd.param:type_name -> Cmd.EBattlePassParam
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_BattlePass_proto_init() }
func file_BattlePass_proto_init() {
	if File_BattlePass_proto != nil {
		return
	}
	file_xCmd_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_BattlePass_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardBattlePassCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BattlePass_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRewardBattlePassCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BattlePass_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyLevelBattlePassCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BattlePass_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvanceBattlePassCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BattlePass_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInfoBattlePassCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BattlePass_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BattlePass_proto_goTypes,
		DependencyIndexes: file_BattlePass_proto_depIdxs,
		EnumInfos:         file_BattlePass_proto_enumTypes,
		MessageInfos:      file_BattlePass_proto_msgTypes,
	}.Build()
	File_BattlePass_proto = out.File
	file_BattlePass_proto_rawDesc = nil
	file_BattlePass_proto_goTypes = nil
	file_BattlePass_proto_depIdxs = nil
}
