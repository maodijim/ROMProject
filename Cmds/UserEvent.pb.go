// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: UserEvent.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventParam int32

const (
	EventParam_USER_EVENT_FIRST_ACTION            EventParam = 1
	EventParam_USER_EVENT_ATTACK_NPC              EventParam = 2
	EventParam_USER_EVENT_NEW_TITLE               EventParam = 3
	EventParam_USER_EVENT_ALL_TITLE               EventParam = 4
	EventParam_USER_EVENT_UPDATE_RANDOM           EventParam = 5
	EventParam_USER_EVENT_BUFF_DAMAGE             EventParam = 6
	EventParam_USER_EVENT_CHARGE_NTF              EventParam = 7
	EventParam_USER_EVENT_CHARGE_QUERY            EventParam = 8
	EventParam_USER_EVENT_DEPOSIT_CARD_INFO       EventParam = 9
	EventParam_USER_EVENT_DEL_TRANSFORM           EventParam = 10
	EventParam_USER_EVENT_INVITECAT_FAIL          EventParam = 11
	EventParam_USER_EVENT_NPC_FUNCTION            EventParam = 12
	EventParam_USER_EVENT_SYSTEM_STRING           EventParam = 13
	EventParam_USER_EVENT_HAND_CAT                EventParam = 14
	EventParam_USER_EVENT_CHANGE_TITLE            EventParam = 15
	EventParam_USER_EVENT_QUERY_CHARGE_CNT        EventParam = 16
	EventParam_USER_EVENT_NTF_MONTHCARD_END       EventParam = 17
	EventParam_USER_EVENT_LOVELETTER_USE          EventParam = 18
	EventParam_USER_EVENT_QUERY_ACTIVITY_CNT      EventParam = 19
	EventParam_USER_EVENT_UPDATE_ACTIVITY_CNT     EventParam = 20
	EventParam_USER_EVENT_GET_RECALL_SHARE_REWARD EventParam = 22
	EventParam_USER_EVENT_NTF_VERSION_CARD        EventParam = 23
	EventParam_USER_EVENT_WAIT_RELIVE             EventParam = 24
	EventParam_USER_EVENT_QUERY_RESETTIME         EventParam = 25
	EventParam_USER_EVENT_INOUT_ACT               EventParam = 26
	EventParam_USER_EVENT_MAIL                    EventParam = 27
	EventParam_USER_EVENT_LEVELUP_DEAD            EventParam = 28
)

// Enum value maps for EventParam.
var (
	EventParam_name = map[int32]string{
		1:  "USER_EVENT_FIRST_ACTION",
		2:  "USER_EVENT_ATTACK_NPC",
		3:  "USER_EVENT_NEW_TITLE",
		4:  "USER_EVENT_ALL_TITLE",
		5:  "USER_EVENT_UPDATE_RANDOM",
		6:  "USER_EVENT_BUFF_DAMAGE",
		7:  "USER_EVENT_CHARGE_NTF",
		8:  "USER_EVENT_CHARGE_QUERY",
		9:  "USER_EVENT_DEPOSIT_CARD_INFO",
		10: "USER_EVENT_DEL_TRANSFORM",
		11: "USER_EVENT_INVITECAT_FAIL",
		12: "USER_EVENT_NPC_FUNCTION",
		13: "USER_EVENT_SYSTEM_STRING",
		14: "USER_EVENT_HAND_CAT",
		15: "USER_EVENT_CHANGE_TITLE",
		16: "USER_EVENT_QUERY_CHARGE_CNT",
		17: "USER_EVENT_NTF_MONTHCARD_END",
		18: "USER_EVENT_LOVELETTER_USE",
		19: "USER_EVENT_QUERY_ACTIVITY_CNT",
		20: "USER_EVENT_UPDATE_ACTIVITY_CNT",
		22: "USER_EVENT_GET_RECALL_SHARE_REWARD",
		23: "USER_EVENT_NTF_VERSION_CARD",
		24: "USER_EVENT_WAIT_RELIVE",
		25: "USER_EVENT_QUERY_RESETTIME",
		26: "USER_EVENT_INOUT_ACT",
		27: "USER_EVENT_MAIL",
		28: "USER_EVENT_LEVELUP_DEAD",
	}
	EventParam_value = map[string]int32{
		"USER_EVENT_FIRST_ACTION":            1,
		"USER_EVENT_ATTACK_NPC":              2,
		"USER_EVENT_NEW_TITLE":               3,
		"USER_EVENT_ALL_TITLE":               4,
		"USER_EVENT_UPDATE_RANDOM":           5,
		"USER_EVENT_BUFF_DAMAGE":             6,
		"USER_EVENT_CHARGE_NTF":              7,
		"USER_EVENT_CHARGE_QUERY":            8,
		"USER_EVENT_DEPOSIT_CARD_INFO":       9,
		"USER_EVENT_DEL_TRANSFORM":           10,
		"USER_EVENT_INVITECAT_FAIL":          11,
		"USER_EVENT_NPC_FUNCTION":            12,
		"USER_EVENT_SYSTEM_STRING":           13,
		"USER_EVENT_HAND_CAT":                14,
		"USER_EVENT_CHANGE_TITLE":            15,
		"USER_EVENT_QUERY_CHARGE_CNT":        16,
		"USER_EVENT_NTF_MONTHCARD_END":       17,
		"USER_EVENT_LOVELETTER_USE":          18,
		"USER_EVENT_QUERY_ACTIVITY_CNT":      19,
		"USER_EVENT_UPDATE_ACTIVITY_CNT":     20,
		"USER_EVENT_GET_RECALL_SHARE_REWARD": 22,
		"USER_EVENT_NTF_VERSION_CARD":        23,
		"USER_EVENT_WAIT_RELIVE":             24,
		"USER_EVENT_QUERY_RESETTIME":         25,
		"USER_EVENT_INOUT_ACT":               26,
		"USER_EVENT_MAIL":                    27,
		"USER_EVENT_LEVELUP_DEAD":            28,
	}
)

func (x EventParam) Enum() *EventParam {
	p := new(EventParam)
	*p = x
	return p
}

func (x EventParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventParam) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[0].Descriptor()
}

func (EventParam) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[0]
}

func (x EventParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EventParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EventParam(num)
	return nil
}

// Deprecated: Use EventParam.Descriptor instead.
func (EventParam) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{0}
}

type EFirstActionType int32

const (
	EFirstActionType_EFIRSTACTION_MIN            EFirstActionType = 0
	EFirstActionType_EFIRSTACTION_SKILL_OVERFLOW EFirstActionType = 1
	EFirstActionType_EFIRSTACTION_EXCHANGECARD   EFirstActionType = 2
	EFirstActionType_EFIRSTACTION_COMPOSECARD    EFirstActionType = 3
	EFirstActionType_EFIRSTACTION_COOKFOOD       EFirstActionType = 4
	EFirstActionType_EFIRSTACTION_LOTTERY        EFirstActionType = 5
	EFirstActionType_EFIRSTACTION_FOOD_MAIL      EFirstActionType = 6
	EFirstActionType_EFIRSTACTION_LOTTERY_EQUIP  EFirstActionType = 7
	EFirstActionType_EFIRSTACTION_LOTTERY_CARD   EFirstActionType = 8
	EFirstActionType_EFIRSTACTION_LOTTERY_MAGIC  EFirstActionType = 9
	EFirstActionType_EFIRSTACTION_RECALL_SHARE   EFirstActionType = 10
	EFirstActionType_EFIRSTACTION_DECOMPOSECARD  EFirstActionType = 11
	EFirstActionType_EFIRSTACTION_KFC_SHARE      EFirstActionType = 12
)

// Enum value maps for EFirstActionType.
var (
	EFirstActionType_name = map[int32]string{
		0:  "EFIRSTACTION_MIN",
		1:  "EFIRSTACTION_SKILL_OVERFLOW",
		2:  "EFIRSTACTION_EXCHANGECARD",
		3:  "EFIRSTACTION_COMPOSECARD",
		4:  "EFIRSTACTION_COOKFOOD",
		5:  "EFIRSTACTION_LOTTERY",
		6:  "EFIRSTACTION_FOOD_MAIL",
		7:  "EFIRSTACTION_LOTTERY_EQUIP",
		8:  "EFIRSTACTION_LOTTERY_CARD",
		9:  "EFIRSTACTION_LOTTERY_MAGIC",
		10: "EFIRSTACTION_RECALL_SHARE",
		11: "EFIRSTACTION_DECOMPOSECARD",
		12: "EFIRSTACTION_KFC_SHARE",
	}
	EFirstActionType_value = map[string]int32{
		"EFIRSTACTION_MIN":            0,
		"EFIRSTACTION_SKILL_OVERFLOW": 1,
		"EFIRSTACTION_EXCHANGECARD":   2,
		"EFIRSTACTION_COMPOSECARD":    3,
		"EFIRSTACTION_COOKFOOD":       4,
		"EFIRSTACTION_LOTTERY":        5,
		"EFIRSTACTION_FOOD_MAIL":      6,
		"EFIRSTACTION_LOTTERY_EQUIP":  7,
		"EFIRSTACTION_LOTTERY_CARD":   8,
		"EFIRSTACTION_LOTTERY_MAGIC":  9,
		"EFIRSTACTION_RECALL_SHARE":   10,
		"EFIRSTACTION_DECOMPOSECARD":  11,
		"EFIRSTACTION_KFC_SHARE":      12,
	}
)

func (x EFirstActionType) Enum() *EFirstActionType {
	p := new(EFirstActionType)
	*p = x
	return p
}

func (x EFirstActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EFirstActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[1].Descriptor()
}

func (EFirstActionType) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[1]
}

func (x EFirstActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EFirstActionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EFirstActionType(num)
	return nil
}

// Deprecated: Use EFirstActionType.Descriptor instead.
func (EFirstActionType) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{1}
}

type ETitleType int32

const (
	ETitleType_ETITLE_TYPE_MIN               ETitleType = 0
	ETitleType_ETITLE_TYPE_MANNUAL           ETitleType = 1
	ETitleType_ETITLE_TYPE_ACHIEVEMENT       ETitleType = 2
	ETitleType_ETITLE_TYPE_ACHIEVEMENT_ORDER ETitleType = 3
	ETitleType_ETITLE_TYPE_FOODCOOKER        ETitleType = 7
	ETitleType_ETITLE_TYPE_FOODTASTER        ETitleType = 8
	ETitleType_ETITLE_TYPE_MAX               ETitleType = 9
)

// Enum value maps for ETitleType.
var (
	ETitleType_name = map[int32]string{
		0: "ETITLE_TYPE_MIN",
		1: "ETITLE_TYPE_MANNUAL",
		2: "ETITLE_TYPE_ACHIEVEMENT",
		3: "ETITLE_TYPE_ACHIEVEMENT_ORDER",
		7: "ETITLE_TYPE_FOODCOOKER",
		8: "ETITLE_TYPE_FOODTASTER",
		9: "ETITLE_TYPE_MAX",
	}
	ETitleType_value = map[string]int32{
		"ETITLE_TYPE_MIN":               0,
		"ETITLE_TYPE_MANNUAL":           1,
		"ETITLE_TYPE_ACHIEVEMENT":       2,
		"ETITLE_TYPE_ACHIEVEMENT_ORDER": 3,
		"ETITLE_TYPE_FOODCOOKER":        7,
		"ETITLE_TYPE_FOODTASTER":        8,
		"ETITLE_TYPE_MAX":               9,
	}
)

func (x ETitleType) Enum() *ETitleType {
	p := new(ETitleType)
	*p = x
	return p
}

func (x ETitleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETitleType) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[2].Descriptor()
}

func (ETitleType) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[2]
}

func (x ETitleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETitleType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETitleType(num)
	return nil
}

// Deprecated: Use ETitleType.Descriptor instead.
func (ETitleType) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{2}
}

type EDepositState int32

const (
	EDepositState_EDEPOSITSTAT_NONE    EDepositState = 0
	EDepositState_EDEPOSITSTAT_VALID   EDepositState = 1
	EDepositState_EDEPOSITSTAT_INVALID EDepositState = 2
)

// Enum value maps for EDepositState.
var (
	EDepositState_name = map[int32]string{
		0: "EDEPOSITSTAT_NONE",
		1: "EDEPOSITSTAT_VALID",
		2: "EDEPOSITSTAT_INVALID",
	}
	EDepositState_value = map[string]int32{
		"EDEPOSITSTAT_NONE":    0,
		"EDEPOSITSTAT_VALID":   1,
		"EDEPOSITSTAT_INVALID": 2,
	}
)

func (x EDepositState) Enum() *EDepositState {
	p := new(EDepositState)
	*p = x
	return p
}

func (x EDepositState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDepositState) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[3].Descriptor()
}

func (EDepositState) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[3]
}

func (x EDepositState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EDepositState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EDepositState(num)
	return nil
}

// Deprecated: Use EDepositState.Descriptor instead.
func (EDepositState) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{3}
}

type ESystemStringType int32

const (
	ESystemStringType_ESYSTEMSTRING_MIN  ESystemStringType = 0
	ESystemStringType_ESYSTEMSTRING_MEMO ESystemStringType = 1
)

// Enum value maps for ESystemStringType.
var (
	ESystemStringType_name = map[int32]string{
		0: "ESYSTEMSTRING_MIN",
		1: "ESYSTEMSTRING_MEMO",
	}
	ESystemStringType_value = map[string]int32{
		"ESYSTEMSTRING_MIN":  0,
		"ESYSTEMSTRING_MEMO": 1,
	}
)

func (x ESystemStringType) Enum() *ESystemStringType {
	p := new(ESystemStringType)
	*p = x
	return p
}

func (x ESystemStringType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESystemStringType) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[4].Descriptor()
}

func (ESystemStringType) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[4]
}

func (x ESystemStringType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESystemStringType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESystemStringType(num)
	return nil
}

// Deprecated: Use ESystemStringType.Descriptor instead.
func (ESystemStringType) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{4}
}

type EEventMailType int32

const (
	EEventMailType_EEVENTMAILTYPE_MIN     EEventMailType = 0
	EEventMailType_EEVENTMAILTYPE_DELCAHR EEventMailType = 1
)

// Enum value maps for EEventMailType.
var (
	EEventMailType_name = map[int32]string{
		0: "EEVENTMAILTYPE_MIN",
		1: "EEVENTMAILTYPE_DELCAHR",
	}
	EEventMailType_value = map[string]int32{
		"EEVENTMAILTYPE_MIN":     0,
		"EEVENTMAILTYPE_DELCAHR": 1,
	}
)

func (x EEventMailType) Enum() *EEventMailType {
	p := new(EEventMailType)
	*p = x
	return p
}

func (x EEventMailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EEventMailType) Descriptor() protoreflect.EnumDescriptor {
	return file_UserEvent_proto_enumTypes[5].Descriptor()
}

func (EEventMailType) Type() protoreflect.EnumType {
	return &file_UserEvent_proto_enumTypes[5]
}

func (x EEventMailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EEventMailType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EEventMailType(num)
	return nil
}

// Deprecated: Use EEventMailType.Descriptor instead.
func (EEventMailType) EnumDescriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{5}
}

type FirstActionUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param       *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=1" json:"param,omitempty"`
	Firstaction *uint32     `protobuf:"varint,3,opt,name=firstaction,def=0" json:"firstaction,omitempty"`
}

// Default values for FirstActionUserEvent fields.
const (
	Default_FirstActionUserEvent_Cmd         = Command_USER_EVENT_PROTOCMD
	Default_FirstActionUserEvent_Param       = EventParam_USER_EVENT_FIRST_ACTION
	Default_FirstActionUserEvent_Firstaction = uint32(0)
)

func (x *FirstActionUserEvent) Reset() {
	*x = FirstActionUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstActionUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstActionUserEvent) ProtoMessage() {}

func (x *FirstActionUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstActionUserEvent.ProtoReflect.Descriptor instead.
func (*FirstActionUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{0}
}

func (x *FirstActionUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FirstActionUserEvent_Cmd
}

func (x *FirstActionUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FirstActionUserEvent_Param
}

func (x *FirstActionUserEvent) GetFirstaction() uint32 {
	if x != nil && x.Firstaction != nil {
		return *x.Firstaction
	}
	return Default_FirstActionUserEvent_Firstaction
}

type DamageNpcUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param   *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=2" json:"param,omitempty"`
	Npcguid *uint64     `protobuf:"varint,3,opt,name=npcguid,def=0" json:"npcguid,omitempty"`
	Userid  *uint64     `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for DamageNpcUserEvent fields.
const (
	Default_DamageNpcUserEvent_Cmd     = Command_USER_EVENT_PROTOCMD
	Default_DamageNpcUserEvent_Param   = EventParam_USER_EVENT_ATTACK_NPC
	Default_DamageNpcUserEvent_Npcguid = uint64(0)
	Default_DamageNpcUserEvent_Userid  = uint64(0)
)

func (x *DamageNpcUserEvent) Reset() {
	*x = DamageNpcUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DamageNpcUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DamageNpcUserEvent) ProtoMessage() {}

func (x *DamageNpcUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DamageNpcUserEvent.ProtoReflect.Descriptor instead.
func (*DamageNpcUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{1}
}

func (x *DamageNpcUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DamageNpcUserEvent_Cmd
}

func (x *DamageNpcUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DamageNpcUserEvent_Param
}

func (x *DamageNpcUserEvent) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return Default_DamageNpcUserEvent_Npcguid
}

func (x *DamageNpcUserEvent) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_DamageNpcUserEvent_Userid
}

type TitleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleType  *ETitleType `protobuf:"varint,1,opt,name=title_type,json=titleType,enum=Cmd.ETitleType" json:"title_type,omitempty"`
	Id         *uint32     `protobuf:"varint,2,opt,name=id,def=0" json:"id,omitempty"`
	Createtime *uint32     `protobuf:"varint,3,opt,name=createtime,def=0" json:"createtime,omitempty"`
}

// Default values for TitleData fields.
const (
	Default_TitleData_Id         = uint32(0)
	Default_TitleData_Createtime = uint32(0)
)

func (x *TitleData) Reset() {
	*x = TitleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleData) ProtoMessage() {}

func (x *TitleData) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleData.ProtoReflect.Descriptor instead.
func (*TitleData) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{2}
}

func (x *TitleData) GetTitleType() ETitleType {
	if x != nil && x.TitleType != nil {
		return *x.TitleType
	}
	return ETitleType_ETITLE_TYPE_MIN
}

func (x *TitleData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_TitleData_Id
}

func (x *TitleData) GetCreatetime() uint32 {
	if x != nil && x.Createtime != nil {
		return *x.Createtime
	}
	return Default_TitleData_Createtime
}

type NewTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param     *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=3" json:"param,omitempty"`
	TitleData *TitleData  `protobuf:"bytes,3,opt,name=title_data,json=titleData" json:"title_data,omitempty"`
	Charid    *uint64     `protobuf:"varint,4,opt,name=charid" json:"charid,omitempty"`
}

// Default values for NewTitle fields.
const (
	Default_NewTitle_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_NewTitle_Param = EventParam_USER_EVENT_NEW_TITLE
)

func (x *NewTitle) Reset() {
	*x = NewTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTitle) ProtoMessage() {}

func (x *NewTitle) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTitle.ProtoReflect.Descriptor instead.
func (*NewTitle) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{3}
}

func (x *NewTitle) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NewTitle_Cmd
}

func (x *NewTitle) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NewTitle_Param
}

func (x *NewTitle) GetTitleData() *TitleData {
	if x != nil {
		return x.TitleData
	}
	return nil
}

func (x *NewTitle) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

type AllTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param      *EventParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=4" json:"param,omitempty"`
	TitleDatas []*TitleData `protobuf:"bytes,3,rep,name=title_datas,json=titleDatas" json:"title_datas,omitempty"`
}

// Default values for AllTitle fields.
const (
	Default_AllTitle_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_AllTitle_Param = EventParam_USER_EVENT_ALL_TITLE
)

func (x *AllTitle) Reset() {
	*x = AllTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTitle) ProtoMessage() {}

func (x *AllTitle) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTitle.ProtoReflect.Descriptor instead.
func (*AllTitle) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{4}
}

func (x *AllTitle) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AllTitle_Cmd
}

func (x *AllTitle) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AllTitle_Param
}

func (x *AllTitle) GetTitleDatas() []*TitleData {
	if x != nil {
		return x.TitleDatas
	}
	return nil
}

type UpdateRandomUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param      *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=5" json:"param,omitempty"`
	Beginindex *uint32     `protobuf:"varint,3,opt,name=beginindex,def=0" json:"beginindex,omitempty"`
	Endindex   *uint32     `protobuf:"varint,4,opt,name=endindex,def=0" json:"endindex,omitempty"`
	Randoms    []uint32    `protobuf:"varint,5,rep,name=randoms" json:"randoms,omitempty"`
}

// Default values for UpdateRandomUserEvent fields.
const (
	Default_UpdateRandomUserEvent_Cmd        = Command_USER_EVENT_PROTOCMD
	Default_UpdateRandomUserEvent_Param      = EventParam_USER_EVENT_UPDATE_RANDOM
	Default_UpdateRandomUserEvent_Beginindex = uint32(0)
	Default_UpdateRandomUserEvent_Endindex   = uint32(0)
)

func (x *UpdateRandomUserEvent) Reset() {
	*x = UpdateRandomUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRandomUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRandomUserEvent) ProtoMessage() {}

func (x *UpdateRandomUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRandomUserEvent.ProtoReflect.Descriptor instead.
func (*UpdateRandomUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRandomUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateRandomUserEvent_Cmd
}

func (x *UpdateRandomUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateRandomUserEvent_Param
}

func (x *UpdateRandomUserEvent) GetBeginindex() uint32 {
	if x != nil && x.Beginindex != nil {
		return *x.Beginindex
	}
	return Default_UpdateRandomUserEvent_Beginindex
}

func (x *UpdateRandomUserEvent) GetEndindex() uint32 {
	if x != nil && x.Endindex != nil {
		return *x.Endindex
	}
	return Default_UpdateRandomUserEvent_Endindex
}

func (x *UpdateRandomUserEvent) GetRandoms() []uint32 {
	if x != nil {
		return x.Randoms
	}
	return nil
}

type BuffDamageUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param  *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=6" json:"param,omitempty"`
	Charid *uint64     `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Damage *int32      `protobuf:"varint,4,opt,name=damage,def=0" json:"damage,omitempty"`
	Etype  *DamageType `protobuf:"varint,5,opt,name=etype,enum=Cmd.DamageType,def=1" json:"etype,omitempty"`
	Fromid *uint64     `protobuf:"varint,6,opt,name=fromid,def=0" json:"fromid,omitempty"`
}

// Default values for BuffDamageUserEvent fields.
const (
	Default_BuffDamageUserEvent_Cmd    = Command_USER_EVENT_PROTOCMD
	Default_BuffDamageUserEvent_Param  = EventParam_USER_EVENT_BUFF_DAMAGE
	Default_BuffDamageUserEvent_Charid = uint64(0)
	Default_BuffDamageUserEvent_Damage = int32(0)
	Default_BuffDamageUserEvent_Etype  = DamageType_DAMAGE_TYPE_NORMAL
	Default_BuffDamageUserEvent_Fromid = uint64(0)
)

func (x *BuffDamageUserEvent) Reset() {
	*x = BuffDamageUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffDamageUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffDamageUserEvent) ProtoMessage() {}

func (x *BuffDamageUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffDamageUserEvent.ProtoReflect.Descriptor instead.
func (*BuffDamageUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{6}
}

func (x *BuffDamageUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BuffDamageUserEvent_Cmd
}

func (x *BuffDamageUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BuffDamageUserEvent_Param
}

func (x *BuffDamageUserEvent) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_BuffDamageUserEvent_Charid
}

func (x *BuffDamageUserEvent) GetDamage() int32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return Default_BuffDamageUserEvent_Damage
}

func (x *BuffDamageUserEvent) GetEtype() DamageType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_BuffDamageUserEvent_Etype
}

func (x *BuffDamageUserEvent) GetFromid() uint64 {
	if x != nil && x.Fromid != nil {
		return *x.Fromid
	}
	return Default_BuffDamageUserEvent_Fromid
}

type ChargeNtfUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param  *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=7" json:"param,omitempty"`
	Charid *uint64     `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Dataid *uint32     `protobuf:"varint,4,opt,name=dataid,def=0" json:"dataid,omitempty"`
}

// Default values for ChargeNtfUserEvent fields.
const (
	Default_ChargeNtfUserEvent_Cmd    = Command_USER_EVENT_PROTOCMD
	Default_ChargeNtfUserEvent_Param  = EventParam_USER_EVENT_CHARGE_NTF
	Default_ChargeNtfUserEvent_Charid = uint64(0)
	Default_ChargeNtfUserEvent_Dataid = uint32(0)
)

func (x *ChargeNtfUserEvent) Reset() {
	*x = ChargeNtfUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeNtfUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeNtfUserEvent) ProtoMessage() {}

func (x *ChargeNtfUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeNtfUserEvent.ProtoReflect.Descriptor instead.
func (*ChargeNtfUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{7}
}

func (x *ChargeNtfUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChargeNtfUserEvent_Cmd
}

func (x *ChargeNtfUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChargeNtfUserEvent_Param
}

func (x *ChargeNtfUserEvent) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_ChargeNtfUserEvent_Charid
}

func (x *ChargeNtfUserEvent) GetDataid() uint32 {
	if x != nil && x.Dataid != nil {
		return *x.Dataid
	}
	return Default_ChargeNtfUserEvent_Dataid
}

type DepositTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *EDepositCardType `protobuf:"varint,1,opt,name=type,enum=Cmd.EDepositCardType" json:"type,omitempty"`
	Expiretime *uint32           `protobuf:"varint,2,opt,name=expiretime" json:"expiretime,omitempty"`
	Starttime  *uint32           `protobuf:"varint,3,opt,name=starttime" json:"starttime,omitempty"`
	State      *EDepositState    `protobuf:"varint,4,opt,name=state,enum=Cmd.EDepositState" json:"state,omitempty"`
	Invalid    *bool             `protobuf:"varint,5,opt,name=invalid,def=0" json:"invalid,omitempty"`
}

// Default values for DepositTypeData fields.
const (
	Default_DepositTypeData_Invalid = bool(false)
)

func (x *DepositTypeData) Reset() {
	*x = DepositTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTypeData) ProtoMessage() {}

func (x *DepositTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTypeData.ProtoReflect.Descriptor instead.
func (*DepositTypeData) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{8}
}

func (x *DepositTypeData) GetType() EDepositCardType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EDepositCardType_ETITLE_TYPE_MONEY
}

func (x *DepositTypeData) GetExpiretime() uint32 {
	if x != nil && x.Expiretime != nil {
		return *x.Expiretime
	}
	return 0
}

func (x *DepositTypeData) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return 0
}

func (x *DepositTypeData) GetState() EDepositState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EDepositState_EDEPOSITSTAT_NONE
}

func (x *DepositTypeData) GetInvalid() bool {
	if x != nil && x.Invalid != nil {
		return *x.Invalid
	}
	return Default_DepositTypeData_Invalid
}

type DepositCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itemid *uint32 `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	Isused *bool   `protobuf:"varint,2,opt,name=isused,def=0" json:"isused,omitempty"`
}

// Default values for DepositCardData fields.
const (
	Default_DepositCardData_Isused = bool(false)
)

func (x *DepositCardData) Reset() {
	*x = DepositCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCardData) ProtoMessage() {}

func (x *DepositCardData) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCardData.ProtoReflect.Descriptor instead.
func (*DepositCardData) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{9}
}

func (x *DepositCardData) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *DepositCardData) GetIsused() bool {
	if x != nil && x.Isused != nil {
		return *x.Isused
	}
	return Default_DepositCardData_Isused
}

type ChargeQueryCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param        *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=8" json:"param,omitempty"`
	DataId       *uint32     `protobuf:"varint,3,opt,name=data_id,json=dataId" json:"data_id,omitempty"`
	Ret          *bool       `protobuf:"varint,4,opt,name=ret" json:"ret,omitempty"`
	ChargedCount *uint32     `protobuf:"varint,5,opt,name=charged_count,json=chargedCount" json:"charged_count,omitempty"`
}

// Default values for ChargeQueryCmd fields.
const (
	Default_ChargeQueryCmd_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_ChargeQueryCmd_Param = EventParam_USER_EVENT_CHARGE_QUERY
)

func (x *ChargeQueryCmd) Reset() {
	*x = ChargeQueryCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeQueryCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeQueryCmd) ProtoMessage() {}

func (x *ChargeQueryCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeQueryCmd.ProtoReflect.Descriptor instead.
func (*ChargeQueryCmd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{10}
}

func (x *ChargeQueryCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChargeQueryCmd_Cmd
}

func (x *ChargeQueryCmd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChargeQueryCmd_Param
}

func (x *ChargeQueryCmd) GetDataId() uint32 {
	if x != nil && x.DataId != nil {
		return *x.DataId
	}
	return 0
}

func (x *ChargeQueryCmd) GetRet() bool {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return false
}

func (x *ChargeQueryCmd) GetChargedCount() uint32 {
	if x != nil && x.ChargedCount != nil {
		return *x.ChargedCount
	}
	return 0
}

type DepositCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param     *EventParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=9" json:"param,omitempty"`
	CardDatas []*DepositTypeData `protobuf:"bytes,3,rep,name=card_datas,json=cardDatas" json:"card_datas,omitempty"`
}

// Default values for DepositCardInfo fields.
const (
	Default_DepositCardInfo_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_DepositCardInfo_Param = EventParam_USER_EVENT_DEPOSIT_CARD_INFO
)

func (x *DepositCardInfo) Reset() {
	*x = DepositCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCardInfo) ProtoMessage() {}

func (x *DepositCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCardInfo.ProtoReflect.Descriptor instead.
func (*DepositCardInfo) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{11}
}

func (x *DepositCardInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DepositCardInfo_Cmd
}

func (x *DepositCardInfo) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DepositCardInfo_Param
}

func (x *DepositCardInfo) GetCardDatas() []*DepositTypeData {
	if x != nil {
		return x.CardDatas
	}
	return nil
}

type DelTransformUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=10" json:"param,omitempty"`
}

// Default values for DelTransformUserEvent fields.
const (
	Default_DelTransformUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_DelTransformUserEvent_Param = EventParam_USER_EVENT_DEL_TRANSFORM
)

func (x *DelTransformUserEvent) Reset() {
	*x = DelTransformUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTransformUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTransformUserEvent) ProtoMessage() {}

func (x *DelTransformUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTransformUserEvent.ProtoReflect.Descriptor instead.
func (*DelTransformUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{12}
}

func (x *DelTransformUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DelTransformUserEvent_Cmd
}

func (x *DelTransformUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DelTransformUserEvent_Param
}

type InviteCatFailUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=11" json:"param,omitempty"`
}

// Default values for InviteCatFailUserEvent fields.
const (
	Default_InviteCatFailUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_InviteCatFailUserEvent_Param = EventParam_USER_EVENT_INVITECAT_FAIL
)

func (x *InviteCatFailUserEvent) Reset() {
	*x = InviteCatFailUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteCatFailUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteCatFailUserEvent) ProtoMessage() {}

func (x *InviteCatFailUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteCatFailUserEvent.ProtoReflect.Descriptor instead.
func (*InviteCatFailUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{13}
}

func (x *InviteCatFailUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_InviteCatFailUserEvent_Cmd
}

func (x *InviteCatFailUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_InviteCatFailUserEvent_Param
}

type TrigNpcFuncUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param   *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=12" json:"param,omitempty"`
	Npcguid *uint64     `protobuf:"varint,3,req,name=npcguid" json:"npcguid,omitempty"`
	Funcid  *uint32     `protobuf:"varint,4,req,name=funcid" json:"funcid,omitempty"`
}

// Default values for TrigNpcFuncUserEvent fields.
const (
	Default_TrigNpcFuncUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_TrigNpcFuncUserEvent_Param = EventParam_USER_EVENT_NPC_FUNCTION
)

func (x *TrigNpcFuncUserEvent) Reset() {
	*x = TrigNpcFuncUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrigNpcFuncUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrigNpcFuncUserEvent) ProtoMessage() {}

func (x *TrigNpcFuncUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrigNpcFuncUserEvent.ProtoReflect.Descriptor instead.
func (*TrigNpcFuncUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{14}
}

func (x *TrigNpcFuncUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TrigNpcFuncUserEvent_Cmd
}

func (x *TrigNpcFuncUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TrigNpcFuncUserEvent_Param
}

func (x *TrigNpcFuncUserEvent) GetNpcguid() uint64 {
	if x != nil && x.Npcguid != nil {
		return *x.Npcguid
	}
	return 0
}

func (x *TrigNpcFuncUserEvent) GetFuncid() uint32 {
	if x != nil && x.Funcid != nil {
		return *x.Funcid
	}
	return 0
}

type SystemStringUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=13" json:"param,omitempty"`
	Etype *ESystemStringType `protobuf:"varint,3,opt,name=etype,enum=Cmd.ESystemStringType,def=0" json:"etype,omitempty"`
}

// Default values for SystemStringUserEvent fields.
const (
	Default_SystemStringUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_SystemStringUserEvent_Param = EventParam_USER_EVENT_SYSTEM_STRING
	Default_SystemStringUserEvent_Etype = ESystemStringType_ESYSTEMSTRING_MIN
)

func (x *SystemStringUserEvent) Reset() {
	*x = SystemStringUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStringUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStringUserEvent) ProtoMessage() {}

func (x *SystemStringUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStringUserEvent.ProtoReflect.Descriptor instead.
func (*SystemStringUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{15}
}

func (x *SystemStringUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SystemStringUserEvent_Cmd
}

func (x *SystemStringUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SystemStringUserEvent_Param
}

func (x *SystemStringUserEvent) GetEtype() ESystemStringType {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_SystemStringUserEvent_Etype
}

type HandCatUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param   *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=14" json:"param,omitempty"`
	Catguid *uint64     `protobuf:"varint,3,req,name=catguid" json:"catguid,omitempty"`
	Breakup *bool       `protobuf:"varint,4,opt,name=breakup,def=0" json:"breakup,omitempty"`
}

// Default values for HandCatUserEvent fields.
const (
	Default_HandCatUserEvent_Cmd     = Command_USER_EVENT_PROTOCMD
	Default_HandCatUserEvent_Param   = EventParam_USER_EVENT_HAND_CAT
	Default_HandCatUserEvent_Breakup = bool(false)
)

func (x *HandCatUserEvent) Reset() {
	*x = HandCatUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandCatUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandCatUserEvent) ProtoMessage() {}

func (x *HandCatUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandCatUserEvent.ProtoReflect.Descriptor instead.
func (*HandCatUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{16}
}

func (x *HandCatUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HandCatUserEvent_Cmd
}

func (x *HandCatUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HandCatUserEvent_Param
}

func (x *HandCatUserEvent) GetCatguid() uint64 {
	if x != nil && x.Catguid != nil {
		return *x.Catguid
	}
	return 0
}

func (x *HandCatUserEvent) GetBreakup() bool {
	if x != nil && x.Breakup != nil {
		return *x.Breakup
	}
	return Default_HandCatUserEvent_Breakup
}

type ChangeTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param     *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=15" json:"param,omitempty"`
	TitleData *TitleData  `protobuf:"bytes,3,opt,name=title_data,json=titleData" json:"title_data,omitempty"`
	Charid    *uint64     `protobuf:"varint,4,opt,name=charid" json:"charid,omitempty"`
}

// Default values for ChangeTitle fields.
const (
	Default_ChangeTitle_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_ChangeTitle_Param = EventParam_USER_EVENT_CHANGE_TITLE
)

func (x *ChangeTitle) Reset() {
	*x = ChangeTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTitle) ProtoMessage() {}

func (x *ChangeTitle) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTitle.ProtoReflect.Descriptor instead.
func (*ChangeTitle) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{17}
}

func (x *ChangeTitle) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeTitle_Cmd
}

func (x *ChangeTitle) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeTitle_Param
}

func (x *ChangeTitle) GetTitleData() *TitleData {
	if x != nil {
		return x.TitleData
	}
	return nil
}

func (x *ChangeTitle) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

type ChargeCntInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataid     *uint32 `protobuf:"varint,1,opt,name=dataid" json:"dataid,omitempty"`
	Count      *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Limit      *uint32 `protobuf:"varint,3,opt,name=limit,def=0" json:"limit,omitempty"`
	Dailycount *uint32 `protobuf:"varint,4,opt,name=dailycount" json:"dailycount,omitempty"`
}

// Default values for ChargeCntInfo fields.
const (
	Default_ChargeCntInfo_Limit = uint32(0)
)

func (x *ChargeCntInfo) Reset() {
	*x = ChargeCntInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeCntInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeCntInfo) ProtoMessage() {}

func (x *ChargeCntInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeCntInfo.ProtoReflect.Descriptor instead.
func (*ChargeCntInfo) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{18}
}

func (x *ChargeCntInfo) GetDataid() uint32 {
	if x != nil && x.Dataid != nil {
		return *x.Dataid
	}
	return 0
}

func (x *ChargeCntInfo) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ChargeCntInfo) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return Default_ChargeCntInfo_Limit
}

func (x *ChargeCntInfo) GetDailycount() uint32 {
	if x != nil && x.Dailycount != nil {
		return *x.Dailycount
	}
	return 0
}

type QueryChargeCnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=16" json:"param,omitempty"`
	Info  []*ChargeCntInfo `protobuf:"bytes,3,rep,name=info" json:"info,omitempty"`
}

// Default values for QueryChargeCnt fields.
const (
	Default_QueryChargeCnt_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_QueryChargeCnt_Param = EventParam_USER_EVENT_QUERY_CHARGE_CNT
)

func (x *QueryChargeCnt) Reset() {
	*x = QueryChargeCnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChargeCnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChargeCnt) ProtoMessage() {}

func (x *QueryChargeCnt) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChargeCnt.ProtoReflect.Descriptor instead.
func (*QueryChargeCnt) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{19}
}

func (x *QueryChargeCnt) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryChargeCnt_Cmd
}

func (x *QueryChargeCnt) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryChargeCnt_Param
}

func (x *QueryChargeCnt) GetInfo() []*ChargeCntInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type NTFMonthCardEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=17" json:"param,omitempty"`
}

// Default values for NTFMonthCardEnd fields.
const (
	Default_NTFMonthCardEnd_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_NTFMonthCardEnd_Param = EventParam_USER_EVENT_NTF_MONTHCARD_END
)

func (x *NTFMonthCardEnd) Reset() {
	*x = NTFMonthCardEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFMonthCardEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFMonthCardEnd) ProtoMessage() {}

func (x *NTFMonthCardEnd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFMonthCardEnd.ProtoReflect.Descriptor instead.
func (*NTFMonthCardEnd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{20}
}

func (x *NTFMonthCardEnd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NTFMonthCardEnd_Cmd
}

func (x *NTFMonthCardEnd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NTFMonthCardEnd_Param
}

type LoveLetterUse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param    *EventParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=18" json:"param,omitempty"`
	Itemguid *string      `protobuf:"bytes,3,opt,name=itemguid" json:"itemguid,omitempty"`
	Targets  *uint64      `protobuf:"varint,4,opt,name=targets" json:"targets,omitempty"`
	Content  *string      `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Type     *ELetterType `protobuf:"varint,6,opt,name=type,enum=Cmd.ELetterType,def=3" json:"type,omitempty"`
}

// Default values for LoveLetterUse fields.
const (
	Default_LoveLetterUse_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_LoveLetterUse_Param = EventParam_USER_EVENT_LOVELETTER_USE
	Default_LoveLetterUse_Type  = ELetterType_ELETTERTYPE_CHRISTMAS
)

func (x *LoveLetterUse) Reset() {
	*x = LoveLetterUse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoveLetterUse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoveLetterUse) ProtoMessage() {}

func (x *LoveLetterUse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoveLetterUse.ProtoReflect.Descriptor instead.
func (*LoveLetterUse) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{21}
}

func (x *LoveLetterUse) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_LoveLetterUse_Cmd
}

func (x *LoveLetterUse) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_LoveLetterUse_Param
}

func (x *LoveLetterUse) GetItemguid() string {
	if x != nil && x.Itemguid != nil {
		return *x.Itemguid
	}
	return ""
}

func (x *LoveLetterUse) GetTargets() uint64 {
	if x != nil && x.Targets != nil {
		return *x.Targets
	}
	return 0
}

func (x *LoveLetterUse) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *LoveLetterUse) GetType() ELetterType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_LoveLetterUse_Type
}

type ActivityCntItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activityid *uint32 `protobuf:"varint,1,opt,name=activityid" json:"activityid,omitempty"`
	Count      *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *ActivityCntItem) Reset() {
	*x = ActivityCntItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCntItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCntItem) ProtoMessage() {}

func (x *ActivityCntItem) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCntItem.ProtoReflect.Descriptor instead.
func (*ActivityCntItem) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{22}
}

func (x *ActivityCntItem) GetActivityid() uint32 {
	if x != nil && x.Activityid != nil {
		return *x.Activityid
	}
	return 0
}

func (x *ActivityCntItem) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type QueryActivityCnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=19" json:"param,omitempty"`
	Info  []*ActivityCntItem `protobuf:"bytes,3,rep,name=info" json:"info,omitempty"`
}

// Default values for QueryActivityCnt fields.
const (
	Default_QueryActivityCnt_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_QueryActivityCnt_Param = EventParam_USER_EVENT_QUERY_ACTIVITY_CNT
)

func (x *QueryActivityCnt) Reset() {
	*x = QueryActivityCnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityCnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityCnt) ProtoMessage() {}

func (x *QueryActivityCnt) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityCnt.ProtoReflect.Descriptor instead.
func (*QueryActivityCnt) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{23}
}

func (x *QueryActivityCnt) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryActivityCnt_Cmd
}

func (x *QueryActivityCnt) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryActivityCnt_Param
}

func (x *QueryActivityCnt) GetInfo() []*ActivityCntItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateActivityCnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=20" json:"param,omitempty"`
	Info  *ActivityCntItem `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
}

// Default values for UpdateActivityCnt fields.
const (
	Default_UpdateActivityCnt_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_UpdateActivityCnt_Param = EventParam_USER_EVENT_UPDATE_ACTIVITY_CNT
)

func (x *UpdateActivityCnt) Reset() {
	*x = UpdateActivityCnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityCnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityCnt) ProtoMessage() {}

func (x *UpdateActivityCnt) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityCnt.ProtoReflect.Descriptor instead.
func (*UpdateActivityCnt) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateActivityCnt) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateActivityCnt_Cmd
}

func (x *UpdateActivityCnt) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateActivityCnt_Param
}

func (x *UpdateActivityCnt) GetInfo() *ActivityCntItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type VersionCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Id1     *uint32 `protobuf:"varint,2,opt,name=id1" json:"id1,omitempty"`
	Id2     *uint32 `protobuf:"varint,3,opt,name=id2" json:"id2,omitempty"`
}

func (x *VersionCardInfo) Reset() {
	*x = VersionCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionCardInfo) ProtoMessage() {}

func (x *VersionCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionCardInfo.ProtoReflect.Descriptor instead.
func (*VersionCardInfo) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{25}
}

func (x *VersionCardInfo) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *VersionCardInfo) GetId1() uint32 {
	if x != nil && x.Id1 != nil {
		return *x.Id1
	}
	return 0
}

func (x *VersionCardInfo) GetId2() uint32 {
	if x != nil && x.Id2 != nil {
		return *x.Id2
	}
	return 0
}

type NtfVersionCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam        `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=23" json:"param,omitempty"`
	Info  []*VersionCardInfo `protobuf:"bytes,3,rep,name=info" json:"info,omitempty"`
}

// Default values for NtfVersionCardInfo fields.
const (
	Default_NtfVersionCardInfo_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_NtfVersionCardInfo_Param = EventParam_USER_EVENT_NTF_VERSION_CARD
)

func (x *NtfVersionCardInfo) Reset() {
	*x = NtfVersionCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfVersionCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfVersionCardInfo) ProtoMessage() {}

func (x *NtfVersionCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfVersionCardInfo.ProtoReflect.Descriptor instead.
func (*NtfVersionCardInfo) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{26}
}

func (x *NtfVersionCardInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NtfVersionCardInfo_Cmd
}

func (x *NtfVersionCardInfo) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NtfVersionCardInfo_Param
}

func (x *NtfVersionCardInfo) GetInfo() []*VersionCardInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DieTimeCountEventCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=24" json:"param,omitempty"`
	Time  *uint32     `protobuf:"varint,3,opt,name=time,def=0" json:"time,omitempty"`
	Name  *string     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

// Default values for DieTimeCountEventCmd fields.
const (
	Default_DieTimeCountEventCmd_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_DieTimeCountEventCmd_Param = EventParam_USER_EVENT_WAIT_RELIVE
	Default_DieTimeCountEventCmd_Time  = uint32(0)
)

func (x *DieTimeCountEventCmd) Reset() {
	*x = DieTimeCountEventCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DieTimeCountEventCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DieTimeCountEventCmd) ProtoMessage() {}

func (x *DieTimeCountEventCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DieTimeCountEventCmd.ProtoReflect.Descriptor instead.
func (*DieTimeCountEventCmd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{27}
}

func (x *DieTimeCountEventCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DieTimeCountEventCmd_Cmd
}

func (x *DieTimeCountEventCmd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DieTimeCountEventCmd_Param
}

func (x *DieTimeCountEventCmd) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_DieTimeCountEventCmd_Time
}

func (x *DieTimeCountEventCmd) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetFirstShareRewardUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=22" json:"param,omitempty"`
}

// Default values for GetFirstShareRewardUserEvent fields.
const (
	Default_GetFirstShareRewardUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_GetFirstShareRewardUserEvent_Param = EventParam_USER_EVENT_GET_RECALL_SHARE_REWARD
)

func (x *GetFirstShareRewardUserEvent) Reset() {
	*x = GetFirstShareRewardUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirstShareRewardUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstShareRewardUserEvent) ProtoMessage() {}

func (x *GetFirstShareRewardUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstShareRewardUserEvent.ProtoReflect.Descriptor instead.
func (*GetFirstShareRewardUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{28}
}

func (x *GetFirstShareRewardUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GetFirstShareRewardUserEvent_Cmd
}

func (x *GetFirstShareRewardUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GetFirstShareRewardUserEvent_Param
}

type QueryResetTimeEventCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param     *EventParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=25" json:"param,omitempty"`
	Etype     *EAERewardMode `protobuf:"varint,3,req,name=etype,enum=Cmd.EAERewardMode" json:"etype,omitempty"`
	Resettime *uint32        `protobuf:"varint,4,opt,name=resettime,def=0" json:"resettime,omitempty"`
}

// Default values for QueryResetTimeEventCmd fields.
const (
	Default_QueryResetTimeEventCmd_Cmd       = Command_USER_EVENT_PROTOCMD
	Default_QueryResetTimeEventCmd_Param     = EventParam_USER_EVENT_QUERY_RESETTIME
	Default_QueryResetTimeEventCmd_Resettime = uint32(0)
)

func (x *QueryResetTimeEventCmd) Reset() {
	*x = QueryResetTimeEventCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResetTimeEventCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResetTimeEventCmd) ProtoMessage() {}

func (x *QueryResetTimeEventCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResetTimeEventCmd.ProtoReflect.Descriptor instead.
func (*QueryResetTimeEventCmd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{29}
}

func (x *QueryResetTimeEventCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryResetTimeEventCmd_Cmd
}

func (x *QueryResetTimeEventCmd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryResetTimeEventCmd_Param
}

func (x *QueryResetTimeEventCmd) GetEtype() EAERewardMode {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return EAERewardMode_EAEREWARDMODE_MIN
}

func (x *QueryResetTimeEventCmd) GetResettime() uint32 {
	if x != nil && x.Resettime != nil {
		return *x.Resettime
	}
	return Default_QueryResetTimeEventCmd_Resettime
}

type InOutActEventCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=26" json:"param,omitempty"`
	Actid *uint64     `protobuf:"varint,3,req,name=actid" json:"actid,omitempty"`
	Inout *bool       `protobuf:"varint,4,opt,name=inout,def=0" json:"inout,omitempty"`
}

// Default values for InOutActEventCmd fields.
const (
	Default_InOutActEventCmd_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_InOutActEventCmd_Param = EventParam_USER_EVENT_INOUT_ACT
	Default_InOutActEventCmd_Inout = bool(false)
)

func (x *InOutActEventCmd) Reset() {
	*x = InOutActEventCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InOutActEventCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InOutActEventCmd) ProtoMessage() {}

func (x *InOutActEventCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InOutActEventCmd.ProtoReflect.Descriptor instead.
func (*InOutActEventCmd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{30}
}

func (x *InOutActEventCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_InOutActEventCmd_Cmd
}

func (x *InOutActEventCmd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_InOutActEventCmd_Param
}

func (x *InOutActEventCmd) GetActid() uint64 {
	if x != nil && x.Actid != nil {
		return *x.Actid
	}
	return 0
}

func (x *InOutActEventCmd) GetInout() bool {
	if x != nil && x.Inout != nil {
		return *x.Inout
	}
	return Default_InOutActEventCmd_Inout
}

type UserEventMailCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param   *EventParam     `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=27" json:"param,omitempty"`
	EType   *EEventMailType `protobuf:"varint,3,opt,name=eType,enum=Cmd.EEventMailType,def=0" json:"eType,omitempty"`
	Param32 []uint32        `protobuf:"varint,4,rep,name=param32" json:"param32,omitempty"`
	Param64 []uint64        `protobuf:"varint,5,rep,name=param64" json:"param64,omitempty"`
}

// Default values for UserEventMailCmd fields.
const (
	Default_UserEventMailCmd_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_UserEventMailCmd_Param = EventParam_USER_EVENT_MAIL
	Default_UserEventMailCmd_EType = EEventMailType_EEVENTMAILTYPE_MIN
)

func (x *UserEventMailCmd) Reset() {
	*x = UserEventMailCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEventMailCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEventMailCmd) ProtoMessage() {}

func (x *UserEventMailCmd) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEventMailCmd.ProtoReflect.Descriptor instead.
func (*UserEventMailCmd) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{31}
}

func (x *UserEventMailCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserEventMailCmd_Cmd
}

func (x *UserEventMailCmd) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserEventMailCmd_Param
}

func (x *UserEventMailCmd) GetEType() EEventMailType {
	if x != nil && x.EType != nil {
		return *x.EType
	}
	return Default_UserEventMailCmd_EType
}

func (x *UserEventMailCmd) GetParam32() []uint32 {
	if x != nil {
		return x.Param32
	}
	return nil
}

func (x *UserEventMailCmd) GetParam64() []uint64 {
	if x != nil {
		return x.Param64
	}
	return nil
}

type LevelupDeadUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=25" json:"cmd,omitempty"`
	Param *EventParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EventParam,def=28" json:"param,omitempty"`
}

// Default values for LevelupDeadUserEvent fields.
const (
	Default_LevelupDeadUserEvent_Cmd   = Command_USER_EVENT_PROTOCMD
	Default_LevelupDeadUserEvent_Param = EventParam_USER_EVENT_LEVELUP_DEAD
)

func (x *LevelupDeadUserEvent) Reset() {
	*x = LevelupDeadUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEvent_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelupDeadUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelupDeadUserEvent) ProtoMessage() {}

func (x *LevelupDeadUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_UserEvent_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelupDeadUserEvent.ProtoReflect.Descriptor instead.
func (*LevelupDeadUserEvent) Descriptor() ([]byte, []int) {
	return file_UserEvent_proto_rawDescGZIP(), []int{32}
}

func (x *LevelupDeadUserEvent) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_LevelupDeadUserEvent_Cmd
}

func (x *LevelupDeadUserEvent) GetParam() EventParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_LevelupDeadUserEvent_Param
}

var File_UserEvent_proto protoreflect.FileDescriptor

var file_UserEvent_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a,
	0x14, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x0b, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbf, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x70, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4e,
	0x50, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x6e, 0x70, 0x63,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6e,
	0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x22, 0x71, 0x0a, 0x09, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x41,
	0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x49, 0x54,
	0x4c, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x0b, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x41, 0x4e,
	0x44, 0x4f, 0x4d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x13, 0x42, 0x75, 0x66, 0x66, 0x44,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x42, 0x55, 0x46, 0x46, 0x5f, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x12, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x52, 0x05, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0xbd,
	0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x74, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x4e, 0x54,
	0x46, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x69, 0x64, 0x22, 0xc5,
	0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x06, 0x69, 0x73, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x69, 0x73, 0x75, 0x73, 0x65, 0x64,
	0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x46, 0x4f, 0x52, 0x4d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x8f, 0x01, 0x0a, 0x16,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x61, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x43, 0x41,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xbd, 0x01,
	0x0a, 0x14, 0x54, 0x72, 0x69, 0x67, 0x4e, 0x70, 0x63, 0x46, 0x75, 0x6e, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x50, 0x43, 0x5f, 0x46, 0x55, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x70, 0x63, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x6e, 0x70,
	0x63, 0x67, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x69, 0x64, 0x22, 0xce, 0x01,
	0x0a, 0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3f, 0x0a,
	0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbe,
	0x01, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x63, 0x61, 0x74, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x07, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x75, 0x70, 0x22,
	0xc9, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x0d, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x5f, 0x43, 0x4e, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x4e, 0x54, 0x46, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x54, 0x46,
	0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x93, 0x02, 0x0a, 0x0d, 0x4c, 0x6f, 0x76, 0x65, 0x4c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x56, 0x45, 0x4c, 0x45, 0x54,
	0x54, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x15,
	0x45, 0x4c, 0x45, 0x54, 0x54, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x52, 0x49,
	0x53, 0x54, 0x4d, 0x41, 0x53, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x0f, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4e, 0x54, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb9,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1e, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4e, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x0f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x32, 0x22, 0xb7, 0x01, 0x0a, 0x12,
	0x4e, 0x74, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x14, 0x44, 0x69, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9e, 0x01,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45,
	0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xdb,
	0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x41, 0x45, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a,
	0x10, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6d,
	0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x05, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x12, 0x45, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x52, 0x05, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x33, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33,
	0x32, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x36, 0x34, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x36, 0x34, 0x22, 0x8b, 0x01, 0x0a, 0x14,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x75, 0x70, 0x44, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x55, 0x50, 0x5f, 0x44, 0x45,
	0x41, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2a, 0xb4, 0x06, 0x0a, 0x0a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4e, 0x50, 0x43, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x45, 0x57, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x49, 0x54,
	0x4c, 0x45, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d,
	0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x06, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x09, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x46, 0x4f, 0x52, 0x4d, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x43, 0x41, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x50, 0x43, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x0c, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x0d,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x48,
	0x41, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54,
	0x49, 0x54, 0x4c, 0x45, 0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47,
	0x45, 0x5f, 0x43, 0x4e, 0x54, 0x10, 0x10, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x11, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x56, 0x45, 0x4c, 0x45, 0x54, 0x54,
	0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x12, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4e, 0x54, 0x10, 0x13, 0x12, 0x22, 0x0a, 0x1e, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4e, 0x54, 0x10, 0x14, 0x12,
	0x26, 0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x16, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x10, 0x18, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4d, 0x45, 0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x10, 0x1a, 0x12, 0x13,
	0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x55, 0x50, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x10, 0x1c,
	0x2a, 0x91, 0x03, 0x0a, 0x10, 0x45, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x46, 0x49, 0x52, 0x53, 0x54, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x45,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x46, 0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x45,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x53, 0x45, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x46, 0x49,
	0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x46, 0x4f,
	0x4f, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x46, 0x49, 0x52, 0x53, 0x54, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x05, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x46, 0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x4f, 0x4f, 0x44, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x46,
	0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x54, 0x54, 0x45,
	0x52, 0x59, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x46,
	0x49, 0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x54, 0x54, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x46, 0x49,
	0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x54, 0x54, 0x45, 0x52,
	0x59, 0x5f, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x46, 0x49,
	0x52, 0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x0a, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x46, 0x49, 0x52,
	0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f,
	0x53, 0x45, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x46, 0x49, 0x52,
	0x53, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x46, 0x43, 0x5f, 0x53, 0x48, 0x41,
	0x52, 0x45, 0x10, 0x0c, 0x2a, 0xc7, 0x01, 0x0a, 0x0a, 0x45, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x54, 0x49, 0x54,
	0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x4e, 0x55, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43,
	0x48, 0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x4f, 0x4f, 0x44, 0x43, 0x4f, 0x4f, 0x4b, 0x45, 0x52, 0x10, 0x07, 0x12, 0x1a, 0x0a,
	0x16, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4f,
	0x44, 0x54, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x09, 0x2a, 0x58,
	0x0a, 0x0d, 0x45, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x45, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x45, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x42, 0x0a, 0x11, 0x45, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4d,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x10, 0x01, 0x2a, 0x44, 0x0a, 0x0e,
	0x45, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x4d, 0x41, 0x49, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x43, 0x41, 0x48, 0x52,
	0x10, 0x01,
}

var (
	file_UserEvent_proto_rawDescOnce sync.Once
	file_UserEvent_proto_rawDescData = file_UserEvent_proto_rawDesc
)

func file_UserEvent_proto_rawDescGZIP() []byte {
	file_UserEvent_proto_rawDescOnce.Do(func() {
		file_UserEvent_proto_rawDescData = protoimpl.X.CompressGZIP(file_UserEvent_proto_rawDescData)
	})
	return file_UserEvent_proto_rawDescData
}

var file_UserEvent_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_UserEvent_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_UserEvent_proto_goTypes = []interface{}{
	(EventParam)(0),                      // 0: Cmd.EventParam
	(EFirstActionType)(0),                // 1: Cmd.EFirstActionType
	(ETitleType)(0),                      // 2: Cmd.ETitleType
	(EDepositState)(0),                   // 3: Cmd.EDepositState
	(ESystemStringType)(0),               // 4: Cmd.ESystemStringType
	(EEventMailType)(0),                  // 5: Cmd.EEventMailType
	(*FirstActionUserEvent)(nil),         // 6: Cmd.FirstActionUserEvent
	(*DamageNpcUserEvent)(nil),           // 7: Cmd.DamageNpcUserEvent
	(*TitleData)(nil),                    // 8: Cmd.TitleData
	(*NewTitle)(nil),                     // 9: Cmd.NewTitle
	(*AllTitle)(nil),                     // 10: Cmd.AllTitle
	(*UpdateRandomUserEvent)(nil),        // 11: Cmd.UpdateRandomUserEvent
	(*BuffDamageUserEvent)(nil),          // 12: Cmd.BuffDamageUserEvent
	(*ChargeNtfUserEvent)(nil),           // 13: Cmd.ChargeNtfUserEvent
	(*DepositTypeData)(nil),              // 14: Cmd.DepositTypeData
	(*DepositCardData)(nil),              // 15: Cmd.DepositCardData
	(*ChargeQueryCmd)(nil),               // 16: Cmd.ChargeQueryCmd
	(*DepositCardInfo)(nil),              // 17: Cmd.DepositCardInfo
	(*DelTransformUserEvent)(nil),        // 18: Cmd.DelTransformUserEvent
	(*InviteCatFailUserEvent)(nil),       // 19: Cmd.InviteCatFailUserEvent
	(*TrigNpcFuncUserEvent)(nil),         // 20: Cmd.TrigNpcFuncUserEvent
	(*SystemStringUserEvent)(nil),        // 21: Cmd.SystemStringUserEvent
	(*HandCatUserEvent)(nil),             // 22: Cmd.HandCatUserEvent
	(*ChangeTitle)(nil),                  // 23: Cmd.ChangeTitle
	(*ChargeCntInfo)(nil),                // 24: Cmd.ChargeCntInfo
	(*QueryChargeCnt)(nil),               // 25: Cmd.QueryChargeCnt
	(*NTFMonthCardEnd)(nil),              // 26: Cmd.NTFMonthCardEnd
	(*LoveLetterUse)(nil),                // 27: Cmd.LoveLetterUse
	(*ActivityCntItem)(nil),              // 28: Cmd.ActivityCntItem
	(*QueryActivityCnt)(nil),             // 29: Cmd.QueryActivityCnt
	(*UpdateActivityCnt)(nil),            // 30: Cmd.UpdateActivityCnt
	(*VersionCardInfo)(nil),              // 31: Cmd.VersionCardInfo
	(*NtfVersionCardInfo)(nil),           // 32: Cmd.NtfVersionCardInfo
	(*DieTimeCountEventCmd)(nil),         // 33: Cmd.DieTimeCountEventCmd
	(*GetFirstShareRewardUserEvent)(nil), // 34: Cmd.GetFirstShareRewardUserEvent
	(*QueryResetTimeEventCmd)(nil),       // 35: Cmd.QueryResetTimeEventCmd
	(*InOutActEventCmd)(nil),             // 36: Cmd.InOutActEventCmd
	(*UserEventMailCmd)(nil),             // 37: Cmd.UserEventMailCmd
	(*LevelupDeadUserEvent)(nil),         // 38: Cmd.LevelupDeadUserEvent
	(Command)(0),                         // 39: Cmd.Command
	(DamageType)(0),                      // 40: Cmd.DamageType
	(EDepositCardType)(0),                // 41: Cmd.EDepositCardType
	(ELetterType)(0),                     // 42: Cmd.ELetterType
	(EAERewardMode)(0),                   // 43: Cmd.EAERewardMode
}
var file_UserEvent_proto_depIdxs = []int32{
	39, // 0: Cmd.FirstActionUserEvent.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.FirstActionUserEvent.param:type_name -> Cmd.EventParam
	39, // 2: Cmd.DamageNpcUserEvent.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.DamageNpcUserEvent.param:type_name -> Cmd.EventParam
	2,  // 4: Cmd.TitleData.title_type:type_name -> Cmd.ETitleType
	39, // 5: Cmd.NewTitle.cmd:type_name -> Cmd.Command
	0,  // 6: Cmd.NewTitle.param:type_name -> Cmd.EventParam
	8,  // 7: Cmd.NewTitle.title_data:type_name -> Cmd.TitleData
	39, // 8: Cmd.AllTitle.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.AllTitle.param:type_name -> Cmd.EventParam
	8,  // 10: Cmd.AllTitle.title_datas:type_name -> Cmd.TitleData
	39, // 11: Cmd.UpdateRandomUserEvent.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.UpdateRandomUserEvent.param:type_name -> Cmd.EventParam
	39, // 13: Cmd.BuffDamageUserEvent.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.BuffDamageUserEvent.param:type_name -> Cmd.EventParam
	40, // 15: Cmd.BuffDamageUserEvent.etype:type_name -> Cmd.DamageType
	39, // 16: Cmd.ChargeNtfUserEvent.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.ChargeNtfUserEvent.param:type_name -> Cmd.EventParam
	41, // 18: Cmd.DepositTypeData.type:type_name -> Cmd.EDepositCardType
	3,  // 19: Cmd.DepositTypeData.state:type_name -> Cmd.EDepositState
	39, // 20: Cmd.ChargeQueryCmd.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.ChargeQueryCmd.param:type_name -> Cmd.EventParam
	39, // 22: Cmd.DepositCardInfo.cmd:type_name -> Cmd.Command
	0,  // 23: Cmd.DepositCardInfo.param:type_name -> Cmd.EventParam
	14, // 24: Cmd.DepositCardInfo.card_datas:type_name -> Cmd.DepositTypeData
	39, // 25: Cmd.DelTransformUserEvent.cmd:type_name -> Cmd.Command
	0,  // 26: Cmd.DelTransformUserEvent.param:type_name -> Cmd.EventParam
	39, // 27: Cmd.InviteCatFailUserEvent.cmd:type_name -> Cmd.Command
	0,  // 28: Cmd.InviteCatFailUserEvent.param:type_name -> Cmd.EventParam
	39, // 29: Cmd.TrigNpcFuncUserEvent.cmd:type_name -> Cmd.Command
	0,  // 30: Cmd.TrigNpcFuncUserEvent.param:type_name -> Cmd.EventParam
	39, // 31: Cmd.SystemStringUserEvent.cmd:type_name -> Cmd.Command
	0,  // 32: Cmd.SystemStringUserEvent.param:type_name -> Cmd.EventParam
	4,  // 33: Cmd.SystemStringUserEvent.etype:type_name -> Cmd.ESystemStringType
	39, // 34: Cmd.HandCatUserEvent.cmd:type_name -> Cmd.Command
	0,  // 35: Cmd.HandCatUserEvent.param:type_name -> Cmd.EventParam
	39, // 36: Cmd.ChangeTitle.cmd:type_name -> Cmd.Command
	0,  // 37: Cmd.ChangeTitle.param:type_name -> Cmd.EventParam
	8,  // 38: Cmd.ChangeTitle.title_data:type_name -> Cmd.TitleData
	39, // 39: Cmd.QueryChargeCnt.cmd:type_name -> Cmd.Command
	0,  // 40: Cmd.QueryChargeCnt.param:type_name -> Cmd.EventParam
	24, // 41: Cmd.QueryChargeCnt.info:type_name -> Cmd.ChargeCntInfo
	39, // 42: Cmd.NTFMonthCardEnd.cmd:type_name -> Cmd.Command
	0,  // 43: Cmd.NTFMonthCardEnd.param:type_name -> Cmd.EventParam
	39, // 44: Cmd.LoveLetterUse.cmd:type_name -> Cmd.Command
	0,  // 45: Cmd.LoveLetterUse.param:type_name -> Cmd.EventParam
	42, // 46: Cmd.LoveLetterUse.type:type_name -> Cmd.ELetterType
	39, // 47: Cmd.QueryActivityCnt.cmd:type_name -> Cmd.Command
	0,  // 48: Cmd.QueryActivityCnt.param:type_name -> Cmd.EventParam
	28, // 49: Cmd.QueryActivityCnt.info:type_name -> Cmd.ActivityCntItem
	39, // 50: Cmd.UpdateActivityCnt.cmd:type_name -> Cmd.Command
	0,  // 51: Cmd.UpdateActivityCnt.param:type_name -> Cmd.EventParam
	28, // 52: Cmd.UpdateActivityCnt.info:type_name -> Cmd.ActivityCntItem
	39, // 53: Cmd.NtfVersionCardInfo.cmd:type_name -> Cmd.Command
	0,  // 54: Cmd.NtfVersionCardInfo.param:type_name -> Cmd.EventParam
	31, // 55: Cmd.NtfVersionCardInfo.info:type_name -> Cmd.VersionCardInfo
	39, // 56: Cmd.DieTimeCountEventCmd.cmd:type_name -> Cmd.Command
	0,  // 57: Cmd.DieTimeCountEventCmd.param:type_name -> Cmd.EventParam
	39, // 58: Cmd.GetFirstShareRewardUserEvent.cmd:type_name -> Cmd.Command
	0,  // 59: Cmd.GetFirstShareRewardUserEvent.param:type_name -> Cmd.EventParam
	39, // 60: Cmd.QueryResetTimeEventCmd.cmd:type_name -> Cmd.Command
	0,  // 61: Cmd.QueryResetTimeEventCmd.param:type_name -> Cmd.EventParam
	43, // 62: Cmd.QueryResetTimeEventCmd.etype:type_name -> Cmd.EAERewardMode
	39, // 63: Cmd.InOutActEventCmd.cmd:type_name -> Cmd.Command
	0,  // 64: Cmd.InOutActEventCmd.param:type_name -> Cmd.EventParam
	39, // 65: Cmd.UserEventMailCmd.cmd:type_name -> Cmd.Command
	0,  // 66: Cmd.UserEventMailCmd.param:type_name -> Cmd.EventParam
	5,  // 67: Cmd.UserEventMailCmd.eType:type_name -> Cmd.EEventMailType
	39, // 68: Cmd.LevelupDeadUserEvent.cmd:type_name -> Cmd.Command
	0,  // 69: Cmd.LevelupDeadUserEvent.param:type_name -> Cmd.EventParam
	70, // [70:70] is the sub-list for method output_type
	70, // [70:70] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_UserEvent_proto_init() }
func file_UserEvent_proto_init() {
	if File_UserEvent_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	file_SceneUser_proto_init()
	file_ActivityEvent_proto_init()
	file_SceneItem_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_UserEvent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstActionUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DamageNpcUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRandomUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffDamageUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeNtfUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeQueryCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTransformUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteCatFailUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrigNpcFuncUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStringUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandCatUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeCntInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryChargeCnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFMonthCardEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoveLetterUse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityCntItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityCnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityCnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtfVersionCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DieTimeCountEventCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirstShareRewardUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResetTimeEventCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InOutActEventCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEventMailCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEvent_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelupDeadUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UserEvent_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UserEvent_proto_goTypes,
		DependencyIndexes: file_UserEvent_proto_depIdxs,
		EnumInfos:         file_UserEvent_proto_enumTypes,
		MessageInfos:      file_UserEvent_proto_msgTypes,
	}.Build()
	File_UserEvent_proto = out.File
	file_UserEvent_proto_rawDesc = nil
	file_UserEvent_proto_goTypes = nil
	file_UserEvent_proto_depIdxs = nil
}
