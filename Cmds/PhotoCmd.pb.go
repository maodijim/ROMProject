// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: PhotoCmd.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PhotoParam int32

const (
	PhotoParam_PHOTOPARAM_QUERY_PHOTO_LIST     PhotoParam = 1
	PhotoParam_PHOTOPARAM_PHOTO_OPT            PhotoParam = 2
	PhotoParam_PHOTOPARAM_PHOTO_UPDATE         PhotoParam = 3
	PhotoParam_PHOTOPARAM_FRAME_ACTION         PhotoParam = 4
	PhotoParam_PHOTOPARAM_QUERY_FRAMEPHOTOLIST PhotoParam = 5
	PhotoParam_PHOTOPARAM_QUERY_USERPHOTOLIST  PhotoParam = 6
	PhotoParam_PHOTOPARAM_UPDATE_FRAMESHOW     PhotoParam = 7
	PhotoParam_PHOTOPARAM_UPDATE_FRAMEPHOTO    PhotoParam = 8
	PhotoParam_PHOTOPARAM_QUERY_MD5LIST        PhotoParam = 9
	PhotoParam_PHOTOPARAM_ADD_MD5              PhotoParam = 10
	PhotoParam_PHOTOPARAM_REMOVE_MD5           PhotoParam = 11
	PhotoParam_PHOTOPARAM_QUERY_PHOTOURL       PhotoParam = 12
	PhotoParam_PHOTOPARAM_QUERY_UPLOADINFO     PhotoParam = 13
)

// Enum value maps for PhotoParam.
var (
	PhotoParam_name = map[int32]string{
		1:  "PHOTOPARAM_QUERY_PHOTO_LIST",
		2:  "PHOTOPARAM_PHOTO_OPT",
		3:  "PHOTOPARAM_PHOTO_UPDATE",
		4:  "PHOTOPARAM_FRAME_ACTION",
		5:  "PHOTOPARAM_QUERY_FRAMEPHOTOLIST",
		6:  "PHOTOPARAM_QUERY_USERPHOTOLIST",
		7:  "PHOTOPARAM_UPDATE_FRAMESHOW",
		8:  "PHOTOPARAM_UPDATE_FRAMEPHOTO",
		9:  "PHOTOPARAM_QUERY_MD5LIST",
		10: "PHOTOPARAM_ADD_MD5",
		11: "PHOTOPARAM_REMOVE_MD5",
		12: "PHOTOPARAM_QUERY_PHOTOURL",
		13: "PHOTOPARAM_QUERY_UPLOADINFO",
	}
	PhotoParam_value = map[string]int32{
		"PHOTOPARAM_QUERY_PHOTO_LIST":     1,
		"PHOTOPARAM_PHOTO_OPT":            2,
		"PHOTOPARAM_PHOTO_UPDATE":         3,
		"PHOTOPARAM_FRAME_ACTION":         4,
		"PHOTOPARAM_QUERY_FRAMEPHOTOLIST": 5,
		"PHOTOPARAM_QUERY_USERPHOTOLIST":  6,
		"PHOTOPARAM_UPDATE_FRAMESHOW":     7,
		"PHOTOPARAM_UPDATE_FRAMEPHOTO":    8,
		"PHOTOPARAM_QUERY_MD5LIST":        9,
		"PHOTOPARAM_ADD_MD5":              10,
		"PHOTOPARAM_REMOVE_MD5":           11,
		"PHOTOPARAM_QUERY_PHOTOURL":       12,
		"PHOTOPARAM_QUERY_UPLOADINFO":     13,
	}
)

func (x PhotoParam) Enum() *PhotoParam {
	p := new(PhotoParam)
	*p = x
	return p
}

func (x PhotoParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoParam) Descriptor() protoreflect.EnumDescriptor {
	return file_PhotoCmd_proto_enumTypes[0].Descriptor()
}

func (PhotoParam) Type() protoreflect.EnumType {
	return &file_PhotoCmd_proto_enumTypes[0]
}

func (x PhotoParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PhotoParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PhotoParam(num)
	return nil
}

// Deprecated: Use PhotoParam.Descriptor instead.
func (PhotoParam) EnumDescriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{0}
}

type EPhotoOptType int32

const (
	EPhotoOptType_EPHOTOOPTTYPE_MIN     EPhotoOptType = 0
	EPhotoOptType_EPHOTOOPTTYPE_ADD     EPhotoOptType = 1
	EPhotoOptType_EPHOTOOPTTYPE_UPLOAD  EPhotoOptType = 2
	EPhotoOptType_EPHOTOOPTTYPE_REMOVE  EPhotoOptType = 3
	EPhotoOptType_EPHOTOOPTTYPE_REPLACE EPhotoOptType = 4
	EPhotoOptType_EPHOTOOPTTYPE_MAX     EPhotoOptType = 5
)

// Enum value maps for EPhotoOptType.
var (
	EPhotoOptType_name = map[int32]string{
		0: "EPHOTOOPTTYPE_MIN",
		1: "EPHOTOOPTTYPE_ADD",
		2: "EPHOTOOPTTYPE_UPLOAD",
		3: "EPHOTOOPTTYPE_REMOVE",
		4: "EPHOTOOPTTYPE_REPLACE",
		5: "EPHOTOOPTTYPE_MAX",
	}
	EPhotoOptType_value = map[string]int32{
		"EPHOTOOPTTYPE_MIN":     0,
		"EPHOTOOPTTYPE_ADD":     1,
		"EPHOTOOPTTYPE_UPLOAD":  2,
		"EPHOTOOPTTYPE_REMOVE":  3,
		"EPHOTOOPTTYPE_REPLACE": 4,
		"EPHOTOOPTTYPE_MAX":     5,
	}
)

func (x EPhotoOptType) Enum() *EPhotoOptType {
	p := new(EPhotoOptType)
	*p = x
	return p
}

func (x EPhotoOptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPhotoOptType) Descriptor() protoreflect.EnumDescriptor {
	return file_PhotoCmd_proto_enumTypes[1].Descriptor()
}

func (EPhotoOptType) Type() protoreflect.EnumType {
	return &file_PhotoCmd_proto_enumTypes[1]
}

func (x EPhotoOptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPhotoOptType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPhotoOptType(num)
	return nil
}

// Deprecated: Use EPhotoOptType.Descriptor instead.
func (EPhotoOptType) EnumDescriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{1}
}

type EFrameAction int32

const (
	EFrameAction_EFRAMEACTION_MIN    EFrameAction = 0
	EFrameAction_EFRAMEACTION_UPLOAD EFrameAction = 1
	EFrameAction_EFRAMEACTION_REMOVE EFrameAction = 2
	EFrameAction_EFRAMEACTION_MAX    EFrameAction = 3
)

// Enum value maps for EFrameAction.
var (
	EFrameAction_name = map[int32]string{
		0: "EFRAMEACTION_MIN",
		1: "EFRAMEACTION_UPLOAD",
		2: "EFRAMEACTION_REMOVE",
		3: "EFRAMEACTION_MAX",
	}
	EFrameAction_value = map[string]int32{
		"EFRAMEACTION_MIN":    0,
		"EFRAMEACTION_UPLOAD": 1,
		"EFRAMEACTION_REMOVE": 2,
		"EFRAMEACTION_MAX":    3,
	}
)

func (x EFrameAction) Enum() *EFrameAction {
	p := new(EFrameAction)
	*p = x
	return p
}

func (x EFrameAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EFrameAction) Descriptor() protoreflect.EnumDescriptor {
	return file_PhotoCmd_proto_enumTypes[2].Descriptor()
}

func (EFrameAction) Type() protoreflect.EnumType {
	return &file_PhotoCmd_proto_enumTypes[2]
}

func (x EFrameAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EFrameAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EFrameAction(num)
	return nil
}

// Deprecated: Use EFrameAction.Descriptor instead.
func (EFrameAction) EnumDescriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{2}
}

type EPhotoType int32

const (
	EPhotoType_EPHOTOTYPE_MIN        EPhotoType = 0
	EPhotoType_EPHOTOTYPE_SCENERY    EPhotoType = 1
	EPhotoType_EPHOTOTYPE_PHOTO      EPhotoType = 2
	EPhotoType_EPHOTOTYPE_GUILD_ICON EPhotoType = 3
	EPhotoType_EPHOTOTYPE_WEDDING    EPhotoType = 4
	EPhotoType_EPHOTOTYPE_MAX        EPhotoType = 5
)

// Enum value maps for EPhotoType.
var (
	EPhotoType_name = map[int32]string{
		0: "EPHOTOTYPE_MIN",
		1: "EPHOTOTYPE_SCENERY",
		2: "EPHOTOTYPE_PHOTO",
		3: "EPHOTOTYPE_GUILD_ICON",
		4: "EPHOTOTYPE_WEDDING",
		5: "EPHOTOTYPE_MAX",
	}
	EPhotoType_value = map[string]int32{
		"EPHOTOTYPE_MIN":        0,
		"EPHOTOTYPE_SCENERY":    1,
		"EPHOTOTYPE_PHOTO":      2,
		"EPHOTOTYPE_GUILD_ICON": 3,
		"EPHOTOTYPE_WEDDING":    4,
		"EPHOTOTYPE_MAX":        5,
	}
)

func (x EPhotoType) Enum() *EPhotoType {
	p := new(EPhotoType)
	*p = x
	return p
}

func (x EPhotoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPhotoType) Descriptor() protoreflect.EnumDescriptor {
	return file_PhotoCmd_proto_enumTypes[3].Descriptor()
}

func (EPhotoType) Type() protoreflect.EnumType {
	return &file_PhotoCmd_proto_enumTypes[3]
}

func (x EPhotoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPhotoType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPhotoType(num)
	return nil
}

// Deprecated: Use EPhotoType.Descriptor instead.
func (EPhotoType) EnumDescriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{3}
}

type PhotoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    *uint32 `protobuf:"varint,1,opt,name=index,def=0" json:"index,omitempty"`
	Mapid    *uint32 `protobuf:"varint,2,opt,name=mapid,def=0" json:"mapid,omitempty"`
	Time     *uint32 `protobuf:"varint,3,opt,name=time,def=0" json:"time,omitempty"`
	Anglez   *uint32 `protobuf:"varint,4,opt,name=anglez,def=0" json:"anglez,omitempty"`
	Isupload *bool   `protobuf:"varint,5,opt,name=isupload,def=0" json:"isupload,omitempty"`
	Charid   *uint64 `protobuf:"varint,6,opt,name=charid,def=0" json:"charid,omitempty"`
}

// Default values for PhotoItem fields.
const (
	Default_PhotoItem_Index    = uint32(0)
	Default_PhotoItem_Mapid    = uint32(0)
	Default_PhotoItem_Time     = uint32(0)
	Default_PhotoItem_Anglez   = uint32(0)
	Default_PhotoItem_Isupload = bool(false)
	Default_PhotoItem_Charid   = uint64(0)
)

func (x *PhotoItem) Reset() {
	*x = PhotoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoItem) ProtoMessage() {}

func (x *PhotoItem) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoItem.ProtoReflect.Descriptor instead.
func (*PhotoItem) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{0}
}

func (x *PhotoItem) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return Default_PhotoItem_Index
}

func (x *PhotoItem) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return Default_PhotoItem_Mapid
}

func (x *PhotoItem) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_PhotoItem_Time
}

func (x *PhotoItem) GetAnglez() uint32 {
	if x != nil && x.Anglez != nil {
		return *x.Anglez
	}
	return Default_PhotoItem_Anglez
}

func (x *PhotoItem) GetIsupload() bool {
	if x != nil && x.Isupload != nil {
		return *x.Isupload
	}
	return Default_PhotoItem_Isupload
}

func (x *PhotoItem) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_PhotoItem_Charid
}

type PhotoQueryListCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param  *PhotoParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=1" json:"param,omitempty"`
	Photos []*PhotoItem `protobuf:"bytes,3,rep,name=photos" json:"photos,omitempty"`
	Size   *uint32      `protobuf:"varint,4,opt,name=size,def=0" json:"size,omitempty"`
}

// Default values for PhotoQueryListCmd fields.
const (
	Default_PhotoQueryListCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_PhotoQueryListCmd_Param = PhotoParam_PHOTOPARAM_QUERY_PHOTO_LIST
	Default_PhotoQueryListCmd_Size  = uint32(0)
)

func (x *PhotoQueryListCmd) Reset() {
	*x = PhotoQueryListCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoQueryListCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoQueryListCmd) ProtoMessage() {}

func (x *PhotoQueryListCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoQueryListCmd.ProtoReflect.Descriptor instead.
func (*PhotoQueryListCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{1}
}

func (x *PhotoQueryListCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PhotoQueryListCmd_Cmd
}

func (x *PhotoQueryListCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PhotoQueryListCmd_Param
}

func (x *PhotoQueryListCmd) GetPhotos() []*PhotoItem {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *PhotoQueryListCmd) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return Default_PhotoQueryListCmd_Size
}

type PhotoOptCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param   *PhotoParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=2" json:"param,omitempty"`
	Opttype *EPhotoOptType `protobuf:"varint,3,opt,name=opttype,enum=Cmd.EPhotoOptType,def=0" json:"opttype,omitempty"`
	Index   *uint32        `protobuf:"varint,4,opt,name=index,def=0" json:"index,omitempty"`
	Anglez  *uint32        `protobuf:"varint,5,opt,name=anglez,def=0" json:"anglez,omitempty"`
	Mapid   *uint32        `protobuf:"varint,6,opt,name=mapid,def=0" json:"mapid,omitempty"`
}

// Default values for PhotoOptCmd fields.
const (
	Default_PhotoOptCmd_Cmd     = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_PhotoOptCmd_Param   = PhotoParam_PHOTOPARAM_PHOTO_OPT
	Default_PhotoOptCmd_Opttype = EPhotoOptType_EPHOTOOPTTYPE_MIN
	Default_PhotoOptCmd_Index   = uint32(0)
	Default_PhotoOptCmd_Anglez  = uint32(0)
	Default_PhotoOptCmd_Mapid   = uint32(0)
)

func (x *PhotoOptCmd) Reset() {
	*x = PhotoOptCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoOptCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoOptCmd) ProtoMessage() {}

func (x *PhotoOptCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoOptCmd.ProtoReflect.Descriptor instead.
func (*PhotoOptCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{2}
}

func (x *PhotoOptCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PhotoOptCmd_Cmd
}

func (x *PhotoOptCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PhotoOptCmd_Param
}

func (x *PhotoOptCmd) GetOpttype() EPhotoOptType {
	if x != nil && x.Opttype != nil {
		return *x.Opttype
	}
	return Default_PhotoOptCmd_Opttype
}

func (x *PhotoOptCmd) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return Default_PhotoOptCmd_Index
}

func (x *PhotoOptCmd) GetAnglez() uint32 {
	if x != nil && x.Anglez != nil {
		return *x.Anglez
	}
	return Default_PhotoOptCmd_Anglez
}

func (x *PhotoOptCmd) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return Default_PhotoOptCmd_Mapid
}

type PhotoUpdateNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param   *PhotoParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=3" json:"param,omitempty"`
	Opttype *EPhotoOptType `protobuf:"varint,3,opt,name=opttype,enum=Cmd.EPhotoOptType,def=0" json:"opttype,omitempty"`
	Photo   *PhotoItem     `protobuf:"bytes,4,opt,name=photo" json:"photo,omitempty"`
}

// Default values for PhotoUpdateNtf fields.
const (
	Default_PhotoUpdateNtf_Cmd     = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_PhotoUpdateNtf_Param   = PhotoParam_PHOTOPARAM_PHOTO_UPDATE
	Default_PhotoUpdateNtf_Opttype = EPhotoOptType_EPHOTOOPTTYPE_MIN
)

func (x *PhotoUpdateNtf) Reset() {
	*x = PhotoUpdateNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUpdateNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUpdateNtf) ProtoMessage() {}

func (x *PhotoUpdateNtf) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUpdateNtf.ProtoReflect.Descriptor instead.
func (*PhotoUpdateNtf) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{3}
}

func (x *PhotoUpdateNtf) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PhotoUpdateNtf_Cmd
}

func (x *PhotoUpdateNtf) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PhotoUpdateNtf_Param
}

func (x *PhotoUpdateNtf) GetOpttype() EPhotoOptType {
	if x != nil && x.Opttype != nil {
		return *x.Opttype
	}
	return Default_PhotoUpdateNtf_Opttype
}

func (x *PhotoUpdateNtf) GetPhoto() *PhotoItem {
	if x != nil {
		return x.Photo
	}
	return nil
}

type FrameActionPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param   *PhotoParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=4" json:"param,omitempty"`
	Frameid *uint32       `protobuf:"varint,3,opt,name=frameid,def=0" json:"frameid,omitempty"`
	Action  *EFrameAction `protobuf:"varint,4,opt,name=action,enum=Cmd.EFrameAction,def=0" json:"action,omitempty"`
	Photos  []*GuildPhoto `protobuf:"bytes,5,rep,name=photos" json:"photos,omitempty"`
}

// Default values for FrameActionPhotoCmd fields.
const (
	Default_FrameActionPhotoCmd_Cmd     = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_FrameActionPhotoCmd_Param   = PhotoParam_PHOTOPARAM_FRAME_ACTION
	Default_FrameActionPhotoCmd_Frameid = uint32(0)
	Default_FrameActionPhotoCmd_Action  = EFrameAction_EFRAMEACTION_MIN
)

func (x *FrameActionPhotoCmd) Reset() {
	*x = FrameActionPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameActionPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameActionPhotoCmd) ProtoMessage() {}

func (x *FrameActionPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameActionPhotoCmd.ProtoReflect.Descriptor instead.
func (*FrameActionPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{4}
}

func (x *FrameActionPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FrameActionPhotoCmd_Cmd
}

func (x *FrameActionPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FrameActionPhotoCmd_Param
}

func (x *FrameActionPhotoCmd) GetFrameid() uint32 {
	if x != nil && x.Frameid != nil {
		return *x.Frameid
	}
	return Default_FrameActionPhotoCmd_Frameid
}

func (x *FrameActionPhotoCmd) GetAction() EFrameAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return Default_FrameActionPhotoCmd_Action
}

func (x *FrameActionPhotoCmd) GetPhotos() []*GuildPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

type QueryFramePhotoListPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param   *PhotoParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=5" json:"param,omitempty"`
	Frameid *uint32       `protobuf:"varint,3,opt,name=frameid,def=0" json:"frameid,omitempty"`
	Photos  []*GuildPhoto `protobuf:"bytes,4,rep,name=photos" json:"photos,omitempty"`
}

// Default values for QueryFramePhotoListPhotoCmd fields.
const (
	Default_QueryFramePhotoListPhotoCmd_Cmd     = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_QueryFramePhotoListPhotoCmd_Param   = PhotoParam_PHOTOPARAM_QUERY_FRAMEPHOTOLIST
	Default_QueryFramePhotoListPhotoCmd_Frameid = uint32(0)
)

func (x *QueryFramePhotoListPhotoCmd) Reset() {
	*x = QueryFramePhotoListPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFramePhotoListPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFramePhotoListPhotoCmd) ProtoMessage() {}

func (x *QueryFramePhotoListPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFramePhotoListPhotoCmd.ProtoReflect.Descriptor instead.
func (*QueryFramePhotoListPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{5}
}

func (x *QueryFramePhotoListPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryFramePhotoListPhotoCmd_Cmd
}

func (x *QueryFramePhotoListPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryFramePhotoListPhotoCmd_Param
}

func (x *QueryFramePhotoListPhotoCmd) GetFrameid() uint32 {
	if x != nil && x.Frameid != nil {
		return *x.Frameid
	}
	return Default_QueryFramePhotoListPhotoCmd_Frameid
}

func (x *QueryFramePhotoListPhotoCmd) GetPhotos() []*GuildPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

type QueryUserPhotoListPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param    *PhotoParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=6" json:"param,omitempty"`
	Frames   []*PhotoFrame `protobuf:"bytes,3,rep,name=frames" json:"frames,omitempty"`
	Maxphoto *uint32       `protobuf:"varint,4,opt,name=maxphoto,def=0" json:"maxphoto,omitempty"`
	Maxframe *uint32       `protobuf:"varint,5,opt,name=maxframe,def=0" json:"maxframe,omitempty"`
}

// Default values for QueryUserPhotoListPhotoCmd fields.
const (
	Default_QueryUserPhotoListPhotoCmd_Cmd      = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_QueryUserPhotoListPhotoCmd_Param    = PhotoParam_PHOTOPARAM_QUERY_USERPHOTOLIST
	Default_QueryUserPhotoListPhotoCmd_Maxphoto = uint32(0)
	Default_QueryUserPhotoListPhotoCmd_Maxframe = uint32(0)
)

func (x *QueryUserPhotoListPhotoCmd) Reset() {
	*x = QueryUserPhotoListPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserPhotoListPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserPhotoListPhotoCmd) ProtoMessage() {}

func (x *QueryUserPhotoListPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserPhotoListPhotoCmd.ProtoReflect.Descriptor instead.
func (*QueryUserPhotoListPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{6}
}

func (x *QueryUserPhotoListPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryUserPhotoListPhotoCmd_Cmd
}

func (x *QueryUserPhotoListPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryUserPhotoListPhotoCmd_Param
}

func (x *QueryUserPhotoListPhotoCmd) GetFrames() []*PhotoFrame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *QueryUserPhotoListPhotoCmd) GetMaxphoto() uint32 {
	if x != nil && x.Maxphoto != nil {
		return *x.Maxphoto
	}
	return Default_QueryUserPhotoListPhotoCmd_Maxphoto
}

func (x *QueryUserPhotoListPhotoCmd) GetMaxframe() uint32 {
	if x != nil && x.Maxframe != nil {
		return *x.Maxframe
	}
	return Default_QueryUserPhotoListPhotoCmd_Maxframe
}

type FrameShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frameid *uint32     `protobuf:"varint,1,opt,name=frameid,def=0" json:"frameid,omitempty"`
	Photo   *GuildPhoto `protobuf:"bytes,2,opt,name=photo" json:"photo,omitempty"`
}

// Default values for FrameShow fields.
const (
	Default_FrameShow_Frameid = uint32(0)
)

func (x *FrameShow) Reset() {
	*x = FrameShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameShow) ProtoMessage() {}

func (x *FrameShow) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameShow.ProtoReflect.Descriptor instead.
func (*FrameShow) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{7}
}

func (x *FrameShow) GetFrameid() uint32 {
	if x != nil && x.Frameid != nil {
		return *x.Frameid
	}
	return Default_FrameShow_Frameid
}

func (x *FrameShow) GetPhoto() *GuildPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

type UpdateFrameShowPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param *PhotoParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=7" json:"param,omitempty"`
	Shows []*FrameShow `protobuf:"bytes,3,rep,name=shows" json:"shows,omitempty"`
}

// Default values for UpdateFrameShowPhotoCmd fields.
const (
	Default_UpdateFrameShowPhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_UpdateFrameShowPhotoCmd_Param = PhotoParam_PHOTOPARAM_UPDATE_FRAMESHOW
)

func (x *UpdateFrameShowPhotoCmd) Reset() {
	*x = UpdateFrameShowPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFrameShowPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFrameShowPhotoCmd) ProtoMessage() {}

func (x *UpdateFrameShowPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFrameShowPhotoCmd.ProtoReflect.Descriptor instead.
func (*UpdateFrameShowPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFrameShowPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateFrameShowPhotoCmd_Cmd
}

func (x *UpdateFrameShowPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateFrameShowPhotoCmd_Param
}

func (x *UpdateFrameShowPhotoCmd) GetShows() []*FrameShow {
	if x != nil {
		return x.Shows
	}
	return nil
}

type FramePhotoUpdatePhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param   *PhotoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=8" json:"param,omitempty"`
	Frameid *uint32     `protobuf:"varint,3,opt,name=frameid,def=0" json:"frameid,omitempty"`
	Update  *GuildPhoto `protobuf:"bytes,4,opt,name=update" json:"update,omitempty"`
	Del     *GuildPhoto `protobuf:"bytes,5,opt,name=del" json:"del,omitempty"`
}

// Default values for FramePhotoUpdatePhotoCmd fields.
const (
	Default_FramePhotoUpdatePhotoCmd_Cmd     = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_FramePhotoUpdatePhotoCmd_Param   = PhotoParam_PHOTOPARAM_UPDATE_FRAMEPHOTO
	Default_FramePhotoUpdatePhotoCmd_Frameid = uint32(0)
)

func (x *FramePhotoUpdatePhotoCmd) Reset() {
	*x = FramePhotoUpdatePhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FramePhotoUpdatePhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FramePhotoUpdatePhotoCmd) ProtoMessage() {}

func (x *FramePhotoUpdatePhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FramePhotoUpdatePhotoCmd.ProtoReflect.Descriptor instead.
func (*FramePhotoUpdatePhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{9}
}

func (x *FramePhotoUpdatePhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FramePhotoUpdatePhotoCmd_Cmd
}

func (x *FramePhotoUpdatePhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FramePhotoUpdatePhotoCmd_Param
}

func (x *FramePhotoUpdatePhotoCmd) GetFrameid() uint32 {
	if x != nil && x.Frameid != nil {
		return *x.Frameid
	}
	return Default_FramePhotoUpdatePhotoCmd_Frameid
}

func (x *FramePhotoUpdatePhotoCmd) GetUpdate() *GuildPhoto {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *FramePhotoUpdatePhotoCmd) GetDel() *GuildPhoto {
	if x != nil {
		return x.Del
	}
	return nil
}

type PhotoMd5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sourceid *uint32  `protobuf:"varint,1,opt,name=sourceid,def=0" json:"sourceid,omitempty"`
	Time     *uint32  `protobuf:"varint,2,opt,name=time,def=0" json:"time,omitempty"`
	Source   *ESource `protobuf:"varint,3,opt,name=source,enum=Cmd.ESource,def=0" json:"source,omitempty"`
	Md5      *string  `protobuf:"bytes,4,opt,name=md5" json:"md5,omitempty"`
}

// Default values for PhotoMd5 fields.
const (
	Default_PhotoMd5_Sourceid = uint32(0)
	Default_PhotoMd5_Time     = uint32(0)
	Default_PhotoMd5_Source   = ESource_ESOURCE_MIN
)

func (x *PhotoMd5) Reset() {
	*x = PhotoMd5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoMd5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoMd5) ProtoMessage() {}

func (x *PhotoMd5) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoMd5.ProtoReflect.Descriptor instead.
func (*PhotoMd5) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{10}
}

func (x *PhotoMd5) GetSourceid() uint32 {
	if x != nil && x.Sourceid != nil {
		return *x.Sourceid
	}
	return Default_PhotoMd5_Sourceid
}

func (x *PhotoMd5) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_PhotoMd5_Time
}

func (x *PhotoMd5) GetSource() ESource {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return Default_PhotoMd5_Source
}

func (x *PhotoMd5) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

type QueryMd5ListPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param *PhotoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=9" json:"param,omitempty"`
	Item  []*PhotoMd5 `protobuf:"bytes,3,rep,name=item" json:"item,omitempty"`
}

// Default values for QueryMd5ListPhotoCmd fields.
const (
	Default_QueryMd5ListPhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_QueryMd5ListPhotoCmd_Param = PhotoParam_PHOTOPARAM_QUERY_MD5LIST
)

func (x *QueryMd5ListPhotoCmd) Reset() {
	*x = QueryMd5ListPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMd5ListPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMd5ListPhotoCmd) ProtoMessage() {}

func (x *QueryMd5ListPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMd5ListPhotoCmd.ProtoReflect.Descriptor instead.
func (*QueryMd5ListPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{11}
}

func (x *QueryMd5ListPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryMd5ListPhotoCmd_Cmd
}

func (x *QueryMd5ListPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryMd5ListPhotoCmd_Param
}

func (x *QueryMd5ListPhotoCmd) GetItem() []*PhotoMd5 {
	if x != nil {
		return x.Item
	}
	return nil
}

type AddMd5PhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param *PhotoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=10" json:"param,omitempty"`
	Md5   *PhotoMd5   `protobuf:"bytes,3,opt,name=md5" json:"md5,omitempty"`
}

// Default values for AddMd5PhotoCmd fields.
const (
	Default_AddMd5PhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_AddMd5PhotoCmd_Param = PhotoParam_PHOTOPARAM_ADD_MD5
)

func (x *AddMd5PhotoCmd) Reset() {
	*x = AddMd5PhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMd5PhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMd5PhotoCmd) ProtoMessage() {}

func (x *AddMd5PhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMd5PhotoCmd.ProtoReflect.Descriptor instead.
func (*AddMd5PhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{12}
}

func (x *AddMd5PhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AddMd5PhotoCmd_Cmd
}

func (x *AddMd5PhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AddMd5PhotoCmd_Param
}

func (x *AddMd5PhotoCmd) GetMd5() *PhotoMd5 {
	if x != nil {
		return x.Md5
	}
	return nil
}

type RemoveMd5PhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param *PhotoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=11" json:"param,omitempty"`
	Md5   *PhotoMd5   `protobuf:"bytes,3,opt,name=md5" json:"md5,omitempty"`
}

// Default values for RemoveMd5PhotoCmd fields.
const (
	Default_RemoveMd5PhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_RemoveMd5PhotoCmd_Param = PhotoParam_PHOTOPARAM_REMOVE_MD5
)

func (x *RemoveMd5PhotoCmd) Reset() {
	*x = RemoveMd5PhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMd5PhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMd5PhotoCmd) ProtoMessage() {}

func (x *RemoveMd5PhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMd5PhotoCmd.ProtoReflect.Descriptor instead.
func (*RemoveMd5PhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveMd5PhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RemoveMd5PhotoCmd_Cmd
}

func (x *RemoveMd5PhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RemoveMd5PhotoCmd_Param
}

func (x *RemoveMd5PhotoCmd) GetMd5() *PhotoMd5 {
	if x != nil {
		return x.Md5
	}
	return nil
}

type PhotoUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *EPhotoType `protobuf:"varint,1,opt,name=type,enum=Cmd.EPhotoType,def=0" json:"type,omitempty"`
	CharUrl *string     `protobuf:"bytes,2,opt,name=char_url,json=charUrl" json:"char_url,omitempty"`
	AccUrl  *string     `protobuf:"bytes,3,opt,name=acc_url,json=accUrl" json:"acc_url,omitempty"`
}

// Default values for PhotoUrl fields.
const (
	Default_PhotoUrl_Type = EPhotoType_EPHOTOTYPE_MIN
)

func (x *PhotoUrl) Reset() {
	*x = PhotoUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUrl) ProtoMessage() {}

func (x *PhotoUrl) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUrl.ProtoReflect.Descriptor instead.
func (*PhotoUrl) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{14}
}

func (x *PhotoUrl) GetType() EPhotoType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_PhotoUrl_Type
}

func (x *PhotoUrl) GetCharUrl() string {
	if x != nil && x.CharUrl != nil {
		return *x.CharUrl
	}
	return ""
}

func (x *PhotoUrl) GetAccUrl() string {
	if x != nil && x.AccUrl != nil {
		return *x.AccUrl
	}
	return ""
}

type QueryUrlPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param *PhotoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=12" json:"param,omitempty"`
	Urls  []*PhotoUrl `protobuf:"bytes,3,rep,name=urls" json:"urls,omitempty"`
}

// Default values for QueryUrlPhotoCmd fields.
const (
	Default_QueryUrlPhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_QueryUrlPhotoCmd_Param = PhotoParam_PHOTOPARAM_QUERY_PHOTOURL
)

func (x *QueryUrlPhotoCmd) Reset() {
	*x = QueryUrlPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUrlPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUrlPhotoCmd) ProtoMessage() {}

func (x *QueryUrlPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUrlPhotoCmd.ProtoReflect.Descriptor instead.
func (*QueryUrlPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{15}
}

func (x *QueryUrlPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryUrlPhotoCmd_Cmd
}

func (x *QueryUrlPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryUrlPhotoCmd_Param
}

func (x *QueryUrlPhotoCmd) GetUrls() []*PhotoUrl {
	if x != nil {
		return x.Urls
	}
	return nil
}

type UploadParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *UploadParam) Reset() {
	*x = UploadParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadParam) ProtoMessage() {}

func (x *UploadParam) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadParam.ProtoReflect.Descriptor instead.
func (*UploadParam) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{16}
}

func (x *UploadParam) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *UploadParam) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type QueryUploadInfoPhotoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=30" json:"cmd,omitempty"`
	Param       *PhotoParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.PhotoParam,def=13" json:"param,omitempty"`
	Type        *EPhotoType    `protobuf:"varint,3,opt,name=type,enum=Cmd.EPhotoType" json:"type,omitempty"`
	Id          *uint32        `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Customparam *string        `protobuf:"bytes,5,opt,name=customparam" json:"customparam,omitempty"`
	Path        *string        `protobuf:"bytes,6,opt,name=path" json:"path,omitempty"`
	Params      []*UploadParam `protobuf:"bytes,7,rep,name=params" json:"params,omitempty"`
	Useaws      *bool          `protobuf:"varint,8,opt,name=useaws" json:"useaws,omitempty"`
}

// Default values for QueryUploadInfoPhotoCmd fields.
const (
	Default_QueryUploadInfoPhotoCmd_Cmd   = Command_SCENE_USER_PHOTO_PROTOCMD
	Default_QueryUploadInfoPhotoCmd_Param = PhotoParam_PHOTOPARAM_QUERY_UPLOADINFO
)

func (x *QueryUploadInfoPhotoCmd) Reset() {
	*x = QueryUploadInfoPhotoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PhotoCmd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUploadInfoPhotoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUploadInfoPhotoCmd) ProtoMessage() {}

func (x *QueryUploadInfoPhotoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_PhotoCmd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUploadInfoPhotoCmd.ProtoReflect.Descriptor instead.
func (*QueryUploadInfoPhotoCmd) Descriptor() ([]byte, []int) {
	return file_PhotoCmd_proto_rawDescGZIP(), []int{17}
}

func (x *QueryUploadInfoPhotoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryUploadInfoPhotoCmd_Cmd
}

func (x *QueryUploadInfoPhotoCmd) GetParam() PhotoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryUploadInfoPhotoCmd_Param
}

func (x *QueryUploadInfoPhotoCmd) GetType() EPhotoType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EPhotoType_EPHOTOTYPE_MIN
}

func (x *QueryUploadInfoPhotoCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *QueryUploadInfoPhotoCmd) GetCustomparam() string {
	if x != nil && x.Customparam != nil {
		return *x.Customparam
	}
	return ""
}

func (x *QueryUploadInfoPhotoCmd) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *QueryUploadInfoPhotoCmd) GetParams() []*UploadParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *QueryUploadInfoPhotoCmd) GetUseaws() bool {
	if x != nil && x.Useaws != nil {
		return *x.Useaws
	}
	return false
}

var File_PhotoCmd_proto protoreflect.FileDescriptor

var file_PhotoCmd_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x7a, 0x12, 0x21, 0x0a, 0x08, 0x69, 0x73, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x08, 0x69, 0x73, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x69, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x12, 0x15, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x0b, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x4f, 0x70, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x14, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x50, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4f, 0x70,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4f, 0x50, 0x54,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x06, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x7a, 0x12, 0x17, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x22, 0xf2,
	0x01, 0x0a, 0x0e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x74,
	0x66, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3f, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4f, 0x70, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x3a, 0x11, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4f, 0x50, 0x54, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x13, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x10, 0x45, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x1b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x50, 0x48, 0x4f, 0x54,
	0x4f, 0x4c, 0x49, 0x53, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d,
	0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1e, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4c, 0x49, 0x53, 0x54, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x48, 0x4f, 0x57, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x22, 0x83, 0x02, 0x0a,
	0x18, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x50, 0x48, 0x4f,
	0x54, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x64,
	0x65, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x64, 0x35, 0x12,
	0x1d, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x3a, 0x0b, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0xb5, 0x01, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x64, 0x35, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18,
	0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x5f, 0x4d, 0x44, 0x35, 0x4c, 0x49, 0x53, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x21, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x64, 0x35, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x64, 0x35, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f,
	0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x12, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x4d, 0x44, 0x35, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x64, 0x35, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0xad, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x64, 0x35, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43,
	0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x50,
	0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x4d, 0x44, 0x35, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x64, 0x35, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x73, 0x0a, 0x08,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0e, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x55, 0x72,
	0x6c, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x19, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x55, 0x52, 0x4c, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c,
	0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x35, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5, 0x02,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x46,
	0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x61, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x61, 0x77, 0x73, 0x2a, 0x9e, 0x03, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x50, 0x54, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17,
	0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x48, 0x4f,
	0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x05, 0x12, 0x22,
	0x0a, 0x1e, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x48, 0x4f,
	0x57, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x44, 0x35, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x4d, 0x44, 0x35, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x50,
	0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x4d, 0x44, 0x35, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x55, 0x52, 0x4c, 0x10, 0x0c, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0d, 0x2a, 0xa3, 0x01, 0x0a, 0x0d, 0x45, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x4f, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x48, 0x4f,
	0x54, 0x4f, 0x4f, 0x50, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4f, 0x50, 0x54, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x4f, 0x50, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4f, 0x50, 0x54, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x50,
	0x48, 0x4f, 0x54, 0x4f, 0x4f, 0x50, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x4f,
	0x50, 0x54, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x2a, 0x6c, 0x0a, 0x0c,
	0x45, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x03, 0x2a, 0x95, 0x01, 0x0a, 0x0a, 0x45,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x52, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x50, 0x48, 0x4f, 0x54, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x5f,
	0x49, 0x43, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58,
	0x10, 0x05,
}

var (
	file_PhotoCmd_proto_rawDescOnce sync.Once
	file_PhotoCmd_proto_rawDescData = file_PhotoCmd_proto_rawDesc
)

func file_PhotoCmd_proto_rawDescGZIP() []byte {
	file_PhotoCmd_proto_rawDescOnce.Do(func() {
		file_PhotoCmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_PhotoCmd_proto_rawDescData)
	})
	return file_PhotoCmd_proto_rawDescData
}

var file_PhotoCmd_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_PhotoCmd_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_PhotoCmd_proto_goTypes = []interface{}{
	(PhotoParam)(0),                     // 0: Cmd.PhotoParam
	(EPhotoOptType)(0),                  // 1: Cmd.EPhotoOptType
	(EFrameAction)(0),                   // 2: Cmd.EFrameAction
	(EPhotoType)(0),                     // 3: Cmd.EPhotoType
	(*PhotoItem)(nil),                   // 4: Cmd.PhotoItem
	(*PhotoQueryListCmd)(nil),           // 5: Cmd.PhotoQueryListCmd
	(*PhotoOptCmd)(nil),                 // 6: Cmd.PhotoOptCmd
	(*PhotoUpdateNtf)(nil),              // 7: Cmd.PhotoUpdateNtf
	(*FrameActionPhotoCmd)(nil),         // 8: Cmd.FrameActionPhotoCmd
	(*QueryFramePhotoListPhotoCmd)(nil), // 9: Cmd.QueryFramePhotoListPhotoCmd
	(*QueryUserPhotoListPhotoCmd)(nil),  // 10: Cmd.QueryUserPhotoListPhotoCmd
	(*FrameShow)(nil),                   // 11: Cmd.FrameShow
	(*UpdateFrameShowPhotoCmd)(nil),     // 12: Cmd.UpdateFrameShowPhotoCmd
	(*FramePhotoUpdatePhotoCmd)(nil),    // 13: Cmd.FramePhotoUpdatePhotoCmd
	(*PhotoMd5)(nil),                    // 14: Cmd.PhotoMd5
	(*QueryMd5ListPhotoCmd)(nil),        // 15: Cmd.QueryMd5ListPhotoCmd
	(*AddMd5PhotoCmd)(nil),              // 16: Cmd.AddMd5PhotoCmd
	(*RemoveMd5PhotoCmd)(nil),           // 17: Cmd.RemoveMd5PhotoCmd
	(*PhotoUrl)(nil),                    // 18: Cmd.PhotoUrl
	(*QueryUrlPhotoCmd)(nil),            // 19: Cmd.QueryUrlPhotoCmd
	(*UploadParam)(nil),                 // 20: Cmd.UploadParam
	(*QueryUploadInfoPhotoCmd)(nil),     // 21: Cmd.QueryUploadInfoPhotoCmd
	(Command)(0),                        // 22: Cmd.Command
	(*GuildPhoto)(nil),                  // 23: Cmd.GuildPhoto
	(*PhotoFrame)(nil),                  // 24: Cmd.PhotoFrame
	(ESource)(0),                        // 25: Cmd.ESource
}
var file_PhotoCmd_proto_depIdxs = []int32{
	22, // 0: Cmd.PhotoQueryListCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.PhotoQueryListCmd.param:type_name -> Cmd.PhotoParam
	4,  // 2: Cmd.PhotoQueryListCmd.photos:type_name -> Cmd.PhotoItem
	22, // 3: Cmd.PhotoOptCmd.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.PhotoOptCmd.param:type_name -> Cmd.PhotoParam
	1,  // 5: Cmd.PhotoOptCmd.opttype:type_name -> Cmd.EPhotoOptType
	22, // 6: Cmd.PhotoUpdateNtf.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.PhotoUpdateNtf.param:type_name -> Cmd.PhotoParam
	1,  // 8: Cmd.PhotoUpdateNtf.opttype:type_name -> Cmd.EPhotoOptType
	4,  // 9: Cmd.PhotoUpdateNtf.photo:type_name -> Cmd.PhotoItem
	22, // 10: Cmd.FrameActionPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 11: Cmd.FrameActionPhotoCmd.param:type_name -> Cmd.PhotoParam
	2,  // 12: Cmd.FrameActionPhotoCmd.action:type_name -> Cmd.EFrameAction
	23, // 13: Cmd.FrameActionPhotoCmd.photos:type_name -> Cmd.GuildPhoto
	22, // 14: Cmd.QueryFramePhotoListPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 15: Cmd.QueryFramePhotoListPhotoCmd.param:type_name -> Cmd.PhotoParam
	23, // 16: Cmd.QueryFramePhotoListPhotoCmd.photos:type_name -> Cmd.GuildPhoto
	22, // 17: Cmd.QueryUserPhotoListPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 18: Cmd.QueryUserPhotoListPhotoCmd.param:type_name -> Cmd.PhotoParam
	24, // 19: Cmd.QueryUserPhotoListPhotoCmd.frames:type_name -> Cmd.PhotoFrame
	23, // 20: Cmd.FrameShow.photo:type_name -> Cmd.GuildPhoto
	22, // 21: Cmd.UpdateFrameShowPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 22: Cmd.UpdateFrameShowPhotoCmd.param:type_name -> Cmd.PhotoParam
	11, // 23: Cmd.UpdateFrameShowPhotoCmd.shows:type_name -> Cmd.FrameShow
	22, // 24: Cmd.FramePhotoUpdatePhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 25: Cmd.FramePhotoUpdatePhotoCmd.param:type_name -> Cmd.PhotoParam
	23, // 26: Cmd.FramePhotoUpdatePhotoCmd.update:type_name -> Cmd.GuildPhoto
	23, // 27: Cmd.FramePhotoUpdatePhotoCmd.del:type_name -> Cmd.GuildPhoto
	25, // 28: Cmd.PhotoMd5.source:type_name -> Cmd.ESource
	22, // 29: Cmd.QueryMd5ListPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 30: Cmd.QueryMd5ListPhotoCmd.param:type_name -> Cmd.PhotoParam
	14, // 31: Cmd.QueryMd5ListPhotoCmd.item:type_name -> Cmd.PhotoMd5
	22, // 32: Cmd.AddMd5PhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 33: Cmd.AddMd5PhotoCmd.param:type_name -> Cmd.PhotoParam
	14, // 34: Cmd.AddMd5PhotoCmd.md5:type_name -> Cmd.PhotoMd5
	22, // 35: Cmd.RemoveMd5PhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 36: Cmd.RemoveMd5PhotoCmd.param:type_name -> Cmd.PhotoParam
	14, // 37: Cmd.RemoveMd5PhotoCmd.md5:type_name -> Cmd.PhotoMd5
	3,  // 38: Cmd.PhotoUrl.type:type_name -> Cmd.EPhotoType
	22, // 39: Cmd.QueryUrlPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 40: Cmd.QueryUrlPhotoCmd.param:type_name -> Cmd.PhotoParam
	18, // 41: Cmd.QueryUrlPhotoCmd.urls:type_name -> Cmd.PhotoUrl
	22, // 42: Cmd.QueryUploadInfoPhotoCmd.cmd:type_name -> Cmd.Command
	0,  // 43: Cmd.QueryUploadInfoPhotoCmd.param:type_name -> Cmd.PhotoParam
	3,  // 44: Cmd.QueryUploadInfoPhotoCmd.type:type_name -> Cmd.EPhotoType
	20, // 45: Cmd.QueryUploadInfoPhotoCmd.params:type_name -> Cmd.UploadParam
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_PhotoCmd_proto_init() }
func file_PhotoCmd_proto_init() {
	if File_PhotoCmd_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_GuildCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PhotoCmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoQueryListCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoOptCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUpdateNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameActionPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFramePhotoListPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserPhotoListPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFrameShowPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FramePhotoUpdatePhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoMd5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMd5ListPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMd5PhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMd5PhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUrlPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PhotoCmd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUploadInfoPhotoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PhotoCmd_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PhotoCmd_proto_goTypes,
		DependencyIndexes: file_PhotoCmd_proto_depIdxs,
		EnumInfos:         file_PhotoCmd_proto_enumTypes,
		MessageInfos:      file_PhotoCmd_proto_msgTypes,
	}.Build()
	File_PhotoCmd_proto = out.File
	file_PhotoCmd_proto_rawDesc = nil
	file_PhotoCmd_proto_goTypes = nil
	file_PhotoCmd_proto_depIdxs = nil
}
