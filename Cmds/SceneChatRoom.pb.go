// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: SceneChatRoom.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EChatRoomParam int32

const (
	EChatRoomParam_ECHATROOMPARAM_CREATE       EChatRoomParam = 1
	EChatRoomParam_ECHATROOMPARAM_JOIN         EChatRoomParam = 2
	EChatRoomParam_ECHATROOMPARAM_EXIT         EChatRoomParam = 3
	EChatRoomParam_ECHATROOMPARAM_KICKMEMBER   EChatRoomParam = 4
	EChatRoomParam_ECHATROOMPARAM_CHANGEOWNER  EChatRoomParam = 5
	EChatRoomParam_ECHATROOMPARAM_ENTERROOM    EChatRoomParam = 6
	EChatRoomParam_ECHATROOMPARAM_MEMBERUPDATE EChatRoomParam = 7
	EChatRoomParam_ECHATROOMPARAM_ROOMDATASYNC EChatRoomParam = 8
	EChatRoomParam_ECHATROOMPARAM_ROOMTIP      EChatRoomParam = 9
)

// Enum value maps for EChatRoomParam.
var (
	EChatRoomParam_name = map[int32]string{
		1: "ECHATROOMPARAM_CREATE",
		2: "ECHATROOMPARAM_JOIN",
		3: "ECHATROOMPARAM_EXIT",
		4: "ECHATROOMPARAM_KICKMEMBER",
		5: "ECHATROOMPARAM_CHANGEOWNER",
		6: "ECHATROOMPARAM_ENTERROOM",
		7: "ECHATROOMPARAM_MEMBERUPDATE",
		8: "ECHATROOMPARAM_ROOMDATASYNC",
		9: "ECHATROOMPARAM_ROOMTIP",
	}
	EChatRoomParam_value = map[string]int32{
		"ECHATROOMPARAM_CREATE":       1,
		"ECHATROOMPARAM_JOIN":         2,
		"ECHATROOMPARAM_EXIT":         3,
		"ECHATROOMPARAM_KICKMEMBER":   4,
		"ECHATROOMPARAM_CHANGEOWNER":  5,
		"ECHATROOMPARAM_ENTERROOM":    6,
		"ECHATROOMPARAM_MEMBERUPDATE": 7,
		"ECHATROOMPARAM_ROOMDATASYNC": 8,
		"ECHATROOMPARAM_ROOMTIP":      9,
	}
)

func (x EChatRoomParam) Enum() *EChatRoomParam {
	p := new(EChatRoomParam)
	*p = x
	return p
}

func (x EChatRoomParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChatRoomParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneChatRoom_proto_enumTypes[0].Descriptor()
}

func (EChatRoomParam) Type() protoreflect.EnumType {
	return &file_SceneChatRoom_proto_enumTypes[0]
}

func (x EChatRoomParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EChatRoomParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EChatRoomParam(num)
	return nil
}

// Deprecated: Use EChatRoomParam.Descriptor instead.
func (EChatRoomParam) EnumDescriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{0}
}

type EChatRoomJob int32

const (
	EChatRoomJob_ECHATROOM_OWNER  EChatRoomJob = 1
	EChatRoomJob_ECHATROOM_MEMBER EChatRoomJob = 2
)

// Enum value maps for EChatRoomJob.
var (
	EChatRoomJob_name = map[int32]string{
		1: "ECHATROOM_OWNER",
		2: "ECHATROOM_MEMBER",
	}
	EChatRoomJob_value = map[string]int32{
		"ECHATROOM_OWNER":  1,
		"ECHATROOM_MEMBER": 2,
	}
)

func (x EChatRoomJob) Enum() *EChatRoomJob {
	p := new(EChatRoomJob)
	*p = x
	return p
}

func (x EChatRoomJob) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChatRoomJob) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneChatRoom_proto_enumTypes[1].Descriptor()
}

func (EChatRoomJob) Type() protoreflect.EnumType {
	return &file_SceneChatRoom_proto_enumTypes[1]
}

func (x EChatRoomJob) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EChatRoomJob) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EChatRoomJob(num)
	return nil
}

// Deprecated: Use EChatRoomJob.Descriptor instead.
func (EChatRoomJob) EnumDescriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{1}
}

type EChatRoomType int32

const (
	EChatRoomType_ECHATROOMTYPE_PUBLIC  EChatRoomType = 1
	EChatRoomType_ECHATROOMTYPE_PRIVATE EChatRoomType = 2
)

// Enum value maps for EChatRoomType.
var (
	EChatRoomType_name = map[int32]string{
		1: "ECHATROOMTYPE_PUBLIC",
		2: "ECHATROOMTYPE_PRIVATE",
	}
	EChatRoomType_value = map[string]int32{
		"ECHATROOMTYPE_PUBLIC":  1,
		"ECHATROOMTYPE_PRIVATE": 2,
	}
)

func (x EChatRoomType) Enum() *EChatRoomType {
	p := new(EChatRoomType)
	*p = x
	return p
}

func (x EChatRoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChatRoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneChatRoom_proto_enumTypes[2].Descriptor()
}

func (EChatRoomType) Type() protoreflect.EnumType {
	return &file_SceneChatRoom_proto_enumTypes[2]
}

func (x EChatRoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EChatRoomType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EChatRoomType(num)
	return nil
}

// Deprecated: Use EChatRoomType.Descriptor instead.
func (EChatRoomType) EnumDescriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{2}
}

type EChatRoomSync int32

const (
	EChatRoomSync_ECHATROOMSYNC_UPDATE EChatRoomSync = 1
	EChatRoomSync_ECHATROOMSYNC_REMOVE EChatRoomSync = 2
)

// Enum value maps for EChatRoomSync.
var (
	EChatRoomSync_name = map[int32]string{
		1: "ECHATROOMSYNC_UPDATE",
		2: "ECHATROOMSYNC_REMOVE",
	}
	EChatRoomSync_value = map[string]int32{
		"ECHATROOMSYNC_UPDATE": 1,
		"ECHATROOMSYNC_REMOVE": 2,
	}
)

func (x EChatRoomSync) Enum() *EChatRoomSync {
	p := new(EChatRoomSync)
	*p = x
	return p
}

func (x EChatRoomSync) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChatRoomSync) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneChatRoom_proto_enumTypes[3].Descriptor()
}

func (EChatRoomSync) Type() protoreflect.EnumType {
	return &file_SceneChatRoom_proto_enumTypes[3]
}

func (x EChatRoomSync) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EChatRoomSync) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EChatRoomSync(num)
	return nil
}

// Deprecated: Use EChatRoomSync.Descriptor instead.
func (EChatRoomSync) EnumDescriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{3}
}

type EChatRoomTip int32

const (
	EChatRoomTip_ECHATROOMTIP_JOIN        EChatRoomTip = 1
	EChatRoomTip_ECHATROOMTIP_EXIT        EChatRoomTip = 2
	EChatRoomTip_ECHATROOMTIP_KICK        EChatRoomTip = 3
	EChatRoomTip_ECHATROOMTIP_OWNERCHANGE EChatRoomTip = 4
)

// Enum value maps for EChatRoomTip.
var (
	EChatRoomTip_name = map[int32]string{
		1: "ECHATROOMTIP_JOIN",
		2: "ECHATROOMTIP_EXIT",
		3: "ECHATROOMTIP_KICK",
		4: "ECHATROOMTIP_OWNERCHANGE",
	}
	EChatRoomTip_value = map[string]int32{
		"ECHATROOMTIP_JOIN":        1,
		"ECHATROOMTIP_EXIT":        2,
		"ECHATROOMTIP_KICK":        3,
		"ECHATROOMTIP_OWNERCHANGE": 4,
	}
)

func (x EChatRoomTip) Enum() *EChatRoomTip {
	p := new(EChatRoomTip)
	*p = x
	return p
}

func (x EChatRoomTip) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChatRoomTip) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneChatRoom_proto_enumTypes[4].Descriptor()
}

func (EChatRoomTip) Type() protoreflect.EnumType {
	return &file_SceneChatRoom_proto_enumTypes[4]
}

func (x EChatRoomTip) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EChatRoomTip) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EChatRoomTip(num)
	return nil
}

// Deprecated: Use EChatRoomTip.Descriptor instead.
func (EChatRoomTip) EnumDescriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{4}
}

type ChatRoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *uint64       `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Level         *uint32       `protobuf:"varint,2,opt,name=level,def=0" json:"level,omitempty"`
	Body          *uint32       `protobuf:"varint,3,opt,name=body,def=0" json:"body,omitempty"`
	Hair          *uint32       `protobuf:"varint,4,opt,name=hair,def=0" json:"hair,omitempty"`
	Haircolor     *uint32       `protobuf:"varint,5,opt,name=haircolor,def=0" json:"haircolor,omitempty"`
	Portrait      *uint32       `protobuf:"varint,12,opt,name=portrait,def=0" json:"portrait,omitempty"`
	Eye           *uint32       `protobuf:"varint,13,opt,name=eye,def=0" json:"eye,omitempty"`
	PortraitFrame *uint32       `protobuf:"varint,14,opt,name=portrait_frame,json=portraitFrame,def=0" json:"portrait_frame,omitempty"`
	Gender        *EGender      `protobuf:"varint,6,opt,name=gender,enum=Cmd.EGender,def=0" json:"gender,omitempty"`
	Rolejob       *EProfession  `protobuf:"varint,7,opt,name=rolejob,enum=Cmd.EProfession,def=0" json:"rolejob,omitempty"`
	Job           *EChatRoomJob `protobuf:"varint,8,opt,name=job,enum=Cmd.EChatRoomJob,def=2" json:"job,omitempty"`
	Blink         *bool         `protobuf:"varint,9,opt,name=blink,def=0" json:"blink,omitempty"`
	Name          *string       `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	Guildname     *string       `protobuf:"bytes,11,opt,name=guildname" json:"guildname,omitempty"`
}

// Default values for ChatRoomMember fields.
const (
	Default_ChatRoomMember_Id            = uint64(0)
	Default_ChatRoomMember_Level         = uint32(0)
	Default_ChatRoomMember_Body          = uint32(0)
	Default_ChatRoomMember_Hair          = uint32(0)
	Default_ChatRoomMember_Haircolor     = uint32(0)
	Default_ChatRoomMember_Portrait      = uint32(0)
	Default_ChatRoomMember_Eye           = uint32(0)
	Default_ChatRoomMember_PortraitFrame = uint32(0)
	Default_ChatRoomMember_Gender        = EGender_EGENDER_MIN
	Default_ChatRoomMember_Rolejob       = EProfession_EPROFESSION_MIN
	Default_ChatRoomMember_Job           = EChatRoomJob_ECHATROOM_MEMBER
	Default_ChatRoomMember_Blink         = bool(false)
)

func (x *ChatRoomMember) Reset() {
	*x = ChatRoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomMember) ProtoMessage() {}

func (x *ChatRoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomMember.ProtoReflect.Descriptor instead.
func (*ChatRoomMember) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{0}
}

func (x *ChatRoomMember) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_ChatRoomMember_Id
}

func (x *ChatRoomMember) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_ChatRoomMember_Level
}

func (x *ChatRoomMember) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return Default_ChatRoomMember_Body
}

func (x *ChatRoomMember) GetHair() uint32 {
	if x != nil && x.Hair != nil {
		return *x.Hair
	}
	return Default_ChatRoomMember_Hair
}

func (x *ChatRoomMember) GetHaircolor() uint32 {
	if x != nil && x.Haircolor != nil {
		return *x.Haircolor
	}
	return Default_ChatRoomMember_Haircolor
}

func (x *ChatRoomMember) GetPortrait() uint32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return Default_ChatRoomMember_Portrait
}

func (x *ChatRoomMember) GetEye() uint32 {
	if x != nil && x.Eye != nil {
		return *x.Eye
	}
	return Default_ChatRoomMember_Eye
}

func (x *ChatRoomMember) GetPortraitFrame() uint32 {
	if x != nil && x.PortraitFrame != nil {
		return *x.PortraitFrame
	}
	return Default_ChatRoomMember_PortraitFrame
}

func (x *ChatRoomMember) GetGender() EGender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Default_ChatRoomMember_Gender
}

func (x *ChatRoomMember) GetRolejob() EProfession {
	if x != nil && x.Rolejob != nil {
		return *x.Rolejob
	}
	return Default_ChatRoomMember_Rolejob
}

func (x *ChatRoomMember) GetJob() EChatRoomJob {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return Default_ChatRoomMember_Job
}

func (x *ChatRoomMember) GetBlink() bool {
	if x != nil && x.Blink != nil {
		return *x.Blink
	}
	return Default_ChatRoomMember_Blink
}

func (x *ChatRoomMember) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChatRoomMember) GetGuildname() string {
	if x != nil && x.Guildname != nil {
		return *x.Guildname
	}
	return ""
}

type ChatRoomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid   *uint32           `protobuf:"varint,1,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Name     *string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pswd     *string           `protobuf:"bytes,3,opt,name=pswd" json:"pswd,omitempty"`
	Ownerid  *uint64           `protobuf:"varint,4,opt,name=ownerid,def=0" json:"ownerid,omitempty"`
	Maxnum   *uint32           `protobuf:"varint,5,opt,name=maxnum,def=2" json:"maxnum,omitempty"`
	Roomtype *EChatRoomType    `protobuf:"varint,6,opt,name=roomtype,enum=Cmd.EChatRoomType,def=1" json:"roomtype,omitempty"`
	Members  []*ChatRoomMember `protobuf:"bytes,7,rep,name=members" json:"members,omitempty"`
}

// Default values for ChatRoomData fields.
const (
	Default_ChatRoomData_Roomid   = uint32(0)
	Default_ChatRoomData_Ownerid  = uint64(0)
	Default_ChatRoomData_Maxnum   = uint32(2)
	Default_ChatRoomData_Roomtype = EChatRoomType_ECHATROOMTYPE_PUBLIC
)

func (x *ChatRoomData) Reset() {
	*x = ChatRoomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomData) ProtoMessage() {}

func (x *ChatRoomData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomData.ProtoReflect.Descriptor instead.
func (*ChatRoomData) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{1}
}

func (x *ChatRoomData) GetRoomid() uint32 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_ChatRoomData_Roomid
}

func (x *ChatRoomData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChatRoomData) GetPswd() string {
	if x != nil && x.Pswd != nil {
		return *x.Pswd
	}
	return ""
}

func (x *ChatRoomData) GetOwnerid() uint64 {
	if x != nil && x.Ownerid != nil {
		return *x.Ownerid
	}
	return Default_ChatRoomData_Ownerid
}

func (x *ChatRoomData) GetMaxnum() uint32 {
	if x != nil && x.Maxnum != nil {
		return *x.Maxnum
	}
	return Default_ChatRoomData_Maxnum
}

func (x *ChatRoomData) GetRoomtype() EChatRoomType {
	if x != nil && x.Roomtype != nil {
		return *x.Roomtype
	}
	return Default_ChatRoomData_Roomtype
}

func (x *ChatRoomData) GetMembers() []*ChatRoomMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type CreateChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param    *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=1" json:"param,omitempty"`
	Roomname *string         `protobuf:"bytes,3,opt,name=roomname" json:"roomname,omitempty"`
	Maxnum   *uint32         `protobuf:"varint,4,opt,name=maxnum,def=2" json:"maxnum,omitempty"`
	Pswd     *string         `protobuf:"bytes,5,opt,name=pswd" json:"pswd,omitempty"`
}

// Default values for CreateChatRoom fields.
const (
	Default_CreateChatRoom_Cmd    = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_CreateChatRoom_Param  = EChatRoomParam_ECHATROOMPARAM_CREATE
	Default_CreateChatRoom_Maxnum = uint32(2)
)

func (x *CreateChatRoom) Reset() {
	*x = CreateChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatRoom) ProtoMessage() {}

func (x *CreateChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatRoom.ProtoReflect.Descriptor instead.
func (*CreateChatRoom) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{2}
}

func (x *CreateChatRoom) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CreateChatRoom_Cmd
}

func (x *CreateChatRoom) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CreateChatRoom_Param
}

func (x *CreateChatRoom) GetRoomname() string {
	if x != nil && x.Roomname != nil {
		return *x.Roomname
	}
	return ""
}

func (x *CreateChatRoom) GetMaxnum() uint32 {
	if x != nil && x.Maxnum != nil {
		return *x.Maxnum
	}
	return Default_CreateChatRoom_Maxnum
}

func (x *CreateChatRoom) GetPswd() string {
	if x != nil && x.Pswd != nil {
		return *x.Pswd
	}
	return ""
}

type JoinChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param  *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=2" json:"param,omitempty"`
	Roomid *uint64         `protobuf:"varint,3,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Pswd   *string         `protobuf:"bytes,4,opt,name=pswd" json:"pswd,omitempty"`
}

// Default values for JoinChatRoom fields.
const (
	Default_JoinChatRoom_Cmd    = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_JoinChatRoom_Param  = EChatRoomParam_ECHATROOMPARAM_JOIN
	Default_JoinChatRoom_Roomid = uint64(0)
)

func (x *JoinChatRoom) Reset() {
	*x = JoinChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChatRoom) ProtoMessage() {}

func (x *JoinChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChatRoom.ProtoReflect.Descriptor instead.
func (*JoinChatRoom) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{3}
}

func (x *JoinChatRoom) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_JoinChatRoom_Cmd
}

func (x *JoinChatRoom) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_JoinChatRoom_Param
}

func (x *JoinChatRoom) GetRoomid() uint64 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_JoinChatRoom_Roomid
}

func (x *JoinChatRoom) GetPswd() string {
	if x != nil && x.Pswd != nil {
		return *x.Pswd
	}
	return ""
}

type ExitChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param  *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=3" json:"param,omitempty"`
	Roomid *uint64         `protobuf:"varint,3,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Userid *uint64         `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for ExitChatRoom fields.
const (
	Default_ExitChatRoom_Cmd    = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_ExitChatRoom_Param  = EChatRoomParam_ECHATROOMPARAM_EXIT
	Default_ExitChatRoom_Roomid = uint64(0)
	Default_ExitChatRoom_Userid = uint64(0)
)

func (x *ExitChatRoom) Reset() {
	*x = ExitChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitChatRoom) ProtoMessage() {}

func (x *ExitChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitChatRoom.ProtoReflect.Descriptor instead.
func (*ExitChatRoom) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{4}
}

func (x *ExitChatRoom) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ExitChatRoom_Cmd
}

func (x *ExitChatRoom) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ExitChatRoom_Param
}

func (x *ExitChatRoom) GetRoomid() uint64 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_ExitChatRoom_Roomid
}

func (x *ExitChatRoom) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_ExitChatRoom_Userid
}

type KickChatMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param    *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=4" json:"param,omitempty"`
	Roomid   *uint64         `protobuf:"varint,3,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Memberid *uint64         `protobuf:"varint,4,opt,name=memberid,def=0" json:"memberid,omitempty"`
}

// Default values for KickChatMember fields.
const (
	Default_KickChatMember_Cmd      = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_KickChatMember_Param    = EChatRoomParam_ECHATROOMPARAM_KICKMEMBER
	Default_KickChatMember_Roomid   = uint64(0)
	Default_KickChatMember_Memberid = uint64(0)
)

func (x *KickChatMember) Reset() {
	*x = KickChatMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickChatMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickChatMember) ProtoMessage() {}

func (x *KickChatMember) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickChatMember.ProtoReflect.Descriptor instead.
func (*KickChatMember) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{5}
}

func (x *KickChatMember) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_KickChatMember_Cmd
}

func (x *KickChatMember) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_KickChatMember_Param
}

func (x *KickChatMember) GetRoomid() uint64 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_KickChatMember_Roomid
}

func (x *KickChatMember) GetMemberid() uint64 {
	if x != nil && x.Memberid != nil {
		return *x.Memberid
	}
	return Default_KickChatMember_Memberid
}

type ExchangeRoomOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param  *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=5" json:"param,omitempty"`
	Userid *uint64         `protobuf:"varint,3,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for ExchangeRoomOwner fields.
const (
	Default_ExchangeRoomOwner_Cmd    = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_ExchangeRoomOwner_Param  = EChatRoomParam_ECHATROOMPARAM_CHANGEOWNER
	Default_ExchangeRoomOwner_Userid = uint64(0)
)

func (x *ExchangeRoomOwner) Reset() {
	*x = ExchangeRoomOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRoomOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRoomOwner) ProtoMessage() {}

func (x *ExchangeRoomOwner) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRoomOwner.ProtoReflect.Descriptor instead.
func (*ExchangeRoomOwner) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{6}
}

func (x *ExchangeRoomOwner) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ExchangeRoomOwner_Cmd
}

func (x *ExchangeRoomOwner) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ExchangeRoomOwner_Param
}

func (x *ExchangeRoomOwner) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_ExchangeRoomOwner_Userid
}

type RoomMemberUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param   *EChatRoomParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=7" json:"param,omitempty"`
	Updates []*ChatRoomMember `protobuf:"bytes,3,rep,name=updates" json:"updates,omitempty"`
	Deletes []uint64          `protobuf:"varint,4,rep,name=deletes" json:"deletes,omitempty"`
}

// Default values for RoomMemberUpdate fields.
const (
	Default_RoomMemberUpdate_Cmd   = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_RoomMemberUpdate_Param = EChatRoomParam_ECHATROOMPARAM_MEMBERUPDATE
)

func (x *RoomMemberUpdate) Reset() {
	*x = RoomMemberUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMemberUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMemberUpdate) ProtoMessage() {}

func (x *RoomMemberUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMemberUpdate.ProtoReflect.Descriptor instead.
func (*RoomMemberUpdate) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{7}
}

func (x *RoomMemberUpdate) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RoomMemberUpdate_Cmd
}

func (x *RoomMemberUpdate) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RoomMemberUpdate_Param
}

func (x *RoomMemberUpdate) GetUpdates() []*ChatRoomMember {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *RoomMemberUpdate) GetDeletes() []uint64 {
	if x != nil {
		return x.Deletes
	}
	return nil
}

type EnterChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=6" json:"param,omitempty"`
	Data  *ChatRoomData   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

// Default values for EnterChatRoom fields.
const (
	Default_EnterChatRoom_Cmd   = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_EnterChatRoom_Param = EChatRoomParam_ECHATROOMPARAM_ENTERROOM
)

func (x *EnterChatRoom) Reset() {
	*x = EnterChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterChatRoom) ProtoMessage() {}

func (x *EnterChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterChatRoom.ProtoReflect.Descriptor instead.
func (*EnterChatRoom) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{8}
}

func (x *EnterChatRoom) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EnterChatRoom_Cmd
}

func (x *EnterChatRoom) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EnterChatRoom_Param
}

func (x *EnterChatRoom) GetData() *ChatRoomData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChatRoomSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ownerid  *uint64        `protobuf:"varint,1,opt,name=ownerid,def=0" json:"ownerid,omitempty"`
	Roomid   *uint32        `protobuf:"varint,2,opt,name=roomid,def=0" json:"roomid,omitempty"`
	Name     *string        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Roomtype *EChatRoomType `protobuf:"varint,4,opt,name=roomtype,enum=Cmd.EChatRoomType,def=1" json:"roomtype,omitempty"`
	Maxnum   *uint32        `protobuf:"varint,5,opt,name=maxnum,def=0" json:"maxnum,omitempty"`
	Curnum   *uint32        `protobuf:"varint,6,opt,name=curnum,def=0" json:"curnum,omitempty"`
	Pswd     *string        `protobuf:"bytes,7,opt,name=pswd" json:"pswd,omitempty"`
}

// Default values for ChatRoomSummary fields.
const (
	Default_ChatRoomSummary_Ownerid  = uint64(0)
	Default_ChatRoomSummary_Roomid   = uint32(0)
	Default_ChatRoomSummary_Roomtype = EChatRoomType_ECHATROOMTYPE_PUBLIC
	Default_ChatRoomSummary_Maxnum   = uint32(0)
	Default_ChatRoomSummary_Curnum   = uint32(0)
)

func (x *ChatRoomSummary) Reset() {
	*x = ChatRoomSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomSummary) ProtoMessage() {}

func (x *ChatRoomSummary) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomSummary.ProtoReflect.Descriptor instead.
func (*ChatRoomSummary) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{9}
}

func (x *ChatRoomSummary) GetOwnerid() uint64 {
	if x != nil && x.Ownerid != nil {
		return *x.Ownerid
	}
	return Default_ChatRoomSummary_Ownerid
}

func (x *ChatRoomSummary) GetRoomid() uint32 {
	if x != nil && x.Roomid != nil {
		return *x.Roomid
	}
	return Default_ChatRoomSummary_Roomid
}

func (x *ChatRoomSummary) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChatRoomSummary) GetRoomtype() EChatRoomType {
	if x != nil && x.Roomtype != nil {
		return *x.Roomtype
	}
	return Default_ChatRoomSummary_Roomtype
}

func (x *ChatRoomSummary) GetMaxnum() uint32 {
	if x != nil && x.Maxnum != nil {
		return *x.Maxnum
	}
	return Default_ChatRoomSummary_Maxnum
}

func (x *ChatRoomSummary) GetCurnum() uint32 {
	if x != nil && x.Curnum != nil {
		return *x.Curnum
	}
	return Default_ChatRoomSummary_Curnum
}

func (x *ChatRoomSummary) GetPswd() string {
	if x != nil && x.Pswd != nil {
		return *x.Pswd
	}
	return ""
}

type ChatRoomDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param *EChatRoomParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=8" json:"param,omitempty"`
	Esync *EChatRoomSync   `protobuf:"varint,3,opt,name=esync,enum=Cmd.EChatRoomSync,def=1" json:"esync,omitempty"`
	Data  *ChatRoomSummary `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

// Default values for ChatRoomDataSync fields.
const (
	Default_ChatRoomDataSync_Cmd   = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_ChatRoomDataSync_Param = EChatRoomParam_ECHATROOMPARAM_ROOMDATASYNC
	Default_ChatRoomDataSync_Esync = EChatRoomSync_ECHATROOMSYNC_UPDATE
)

func (x *ChatRoomDataSync) Reset() {
	*x = ChatRoomDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomDataSync) ProtoMessage() {}

func (x *ChatRoomDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomDataSync.ProtoReflect.Descriptor instead.
func (*ChatRoomDataSync) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{10}
}

func (x *ChatRoomDataSync) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChatRoomDataSync_Cmd
}

func (x *ChatRoomDataSync) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChatRoomDataSync_Param
}

func (x *ChatRoomDataSync) GetEsync() EChatRoomSync {
	if x != nil && x.Esync != nil {
		return *x.Esync
	}
	return Default_ChatRoomDataSync_Esync
}

func (x *ChatRoomDataSync) GetData() *ChatRoomSummary {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChatRoomTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=19" json:"cmd,omitempty"`
	Param  *EChatRoomParam `protobuf:"varint,2,opt,name=param,enum=Cmd.EChatRoomParam,def=9" json:"param,omitempty"`
	Tip    *EChatRoomTip   `protobuf:"varint,3,opt,name=tip,enum=Cmd.EChatRoomTip,def=1" json:"tip,omitempty"`
	Userid *uint64         `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
	Name   *string         `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
}

// Default values for ChatRoomTip fields.
const (
	Default_ChatRoomTip_Cmd    = Command_SCENE_USER_CHATROOM_PROTOCMD
	Default_ChatRoomTip_Param  = EChatRoomParam_ECHATROOMPARAM_ROOMTIP
	Default_ChatRoomTip_Tip    = EChatRoomTip_ECHATROOMTIP_JOIN
	Default_ChatRoomTip_Userid = uint64(0)
)

func (x *ChatRoomTip) Reset() {
	*x = ChatRoomTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneChatRoom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomTip) ProtoMessage() {}

func (x *ChatRoomTip) ProtoReflect() protoreflect.Message {
	mi := &file_SceneChatRoom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomTip.ProtoReflect.Descriptor instead.
func (*ChatRoomTip) Descriptor() ([]byte, []int) {
	return file_SceneChatRoom_proto_rawDescGZIP(), []int{11}
}

func (x *ChatRoomTip) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChatRoomTip_Cmd
}

func (x *ChatRoomTip) GetParam() EChatRoomParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChatRoomTip_Param
}

func (x *ChatRoomTip) GetTip() EChatRoomTip {
	if x != nil && x.Tip != nil {
		return *x.Tip
	}
	return Default_ChatRoomTip_Tip
}

func (x *ChatRoomTip) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_ChatRoomTip_Userid
}

func (x *ChatRoomTip) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

var File_SceneChatRoom_proto protoreflect.FileDescriptor

var file_SceneChatRoom_proto_rawDesc = []byte{
	0x0a, 0x13, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x03, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x15, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x09, 0x68, 0x61, 0x69, 0x72, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x68, 0x61,
	0x69, 0x72, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x70, 0x6f,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x03, 0x65, 0x79, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x65, 0x79, 0x65, 0x12, 0x28, 0x0a, 0x0e, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x3a, 0x0b, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x49, 0x4e,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x6a, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0x45, 0x50, 0x52,
	0x4f, 0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x6a, 0x6f, 0x62, 0x12, 0x35, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x4a, 0x6f, 0x62, 0x3a, 0x10, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1b, 0x0a, 0x05,
	0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x73, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x77, 0x64, 0x12,
	0x1b, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52,
	0x06, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x14, 0x45,
	0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x43, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xdb, 0x01, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x15, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x6d,
	0x61, 0x78, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x77, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x77, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x0c, 0x4a,
	0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x45,
	0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x77, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x69,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x13, 0x45, 0x43, 0x48,
	0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x58, 0x49, 0x54,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0xce, 0x01,
	0x0a, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x19, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x69, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f,
	0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4f, 0x57, 0x4e,
	0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x45, 0x43, 0x48,
	0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2d, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x45, 0x43,
	0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x52, 0x4f, 0x4f, 0x4d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x14, 0x45, 0x43, 0x48, 0x41,
	0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x6d, 0x61,
	0x78, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x75, 0x72, 0x6e, 0x75, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x77, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x73, 0x77, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x45, 0x43, 0x48,
	0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x44, 0x41, 0x54, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x3e, 0x0a, 0x05, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x79,
	0x6e, 0x63, 0x3a, 0x14, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x59, 0x4e,
	0x43, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x05, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x69, 0x70, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x45, 0x43, 0x48,
	0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x54, 0x49, 0x50, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x03, 0x74, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x69, 0x70, 0x3a, 0x11, 0x45, 0x43, 0x48, 0x41,
	0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x49, 0x50, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x52, 0x03, 0x74,
	0x69, 0x70, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x2a, 0x98, 0x02, 0x0a, 0x0e, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f,
	0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x43, 0x48, 0x41,
	0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x04,
	0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x05,
	0x12, 0x1c, 0x0a, 0x18, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x06, 0x12, 0x1f,
	0x0a, 0x1b, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12,
	0x1f, 0x0a, 0x1b, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x44, 0x41, 0x54, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x08,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x49, 0x50, 0x10, 0x09, 0x2a, 0x39, 0x0a, 0x0c,
	0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x44, 0x0a, 0x0d, 0x45, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x43, 0x48, 0x41,
	0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x43, 0x0a,
	0x0d, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x18,
	0x0a, 0x14, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x59, 0x4e, 0x43, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x43, 0x48, 0x41,
	0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x10, 0x02, 0x2a, 0x71, 0x0a, 0x0c, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54,
	0x69, 0x70, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54,
	0x49, 0x50, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x48,
	0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x49, 0x50, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x43, 0x48, 0x41, 0x54, 0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x49, 0x50,
	0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x43, 0x48, 0x41, 0x54,
	0x52, 0x4f, 0x4f, 0x4d, 0x54, 0x49, 0x50, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x04,
}

var (
	file_SceneChatRoom_proto_rawDescOnce sync.Once
	file_SceneChatRoom_proto_rawDescData = file_SceneChatRoom_proto_rawDesc
)

func file_SceneChatRoom_proto_rawDescGZIP() []byte {
	file_SceneChatRoom_proto_rawDescOnce.Do(func() {
		file_SceneChatRoom_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneChatRoom_proto_rawDescData)
	})
	return file_SceneChatRoom_proto_rawDescData
}

var file_SceneChatRoom_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_SceneChatRoom_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_SceneChatRoom_proto_goTypes = []interface{}{
	(EChatRoomParam)(0),       // 0: Cmd.EChatRoomParam
	(EChatRoomJob)(0),         // 1: Cmd.EChatRoomJob
	(EChatRoomType)(0),        // 2: Cmd.EChatRoomType
	(EChatRoomSync)(0),        // 3: Cmd.EChatRoomSync
	(EChatRoomTip)(0),         // 4: Cmd.EChatRoomTip
	(*ChatRoomMember)(nil),    // 5: Cmd.ChatRoomMember
	(*ChatRoomData)(nil),      // 6: Cmd.ChatRoomData
	(*CreateChatRoom)(nil),    // 7: Cmd.CreateChatRoom
	(*JoinChatRoom)(nil),      // 8: Cmd.JoinChatRoom
	(*ExitChatRoom)(nil),      // 9: Cmd.ExitChatRoom
	(*KickChatMember)(nil),    // 10: Cmd.KickChatMember
	(*ExchangeRoomOwner)(nil), // 11: Cmd.ExchangeRoomOwner
	(*RoomMemberUpdate)(nil),  // 12: Cmd.RoomMemberUpdate
	(*EnterChatRoom)(nil),     // 13: Cmd.EnterChatRoom
	(*ChatRoomSummary)(nil),   // 14: Cmd.ChatRoomSummary
	(*ChatRoomDataSync)(nil),  // 15: Cmd.ChatRoomDataSync
	(*ChatRoomTip)(nil),       // 16: Cmd.ChatRoomTip
	(EGender)(0),              // 17: Cmd.EGender
	(EProfession)(0),          // 18: Cmd.EProfession
	(Command)(0),              // 19: Cmd.Command
}
var file_SceneChatRoom_proto_depIdxs = []int32{
	17, // 0: Cmd.ChatRoomMember.gender:type_name -> Cmd.EGender
	18, // 1: Cmd.ChatRoomMember.rolejob:type_name -> Cmd.EProfession
	1,  // 2: Cmd.ChatRoomMember.job:type_name -> Cmd.EChatRoomJob
	2,  // 3: Cmd.ChatRoomData.roomtype:type_name -> Cmd.EChatRoomType
	5,  // 4: Cmd.ChatRoomData.members:type_name -> Cmd.ChatRoomMember
	19, // 5: Cmd.CreateChatRoom.cmd:type_name -> Cmd.Command
	0,  // 6: Cmd.CreateChatRoom.param:type_name -> Cmd.EChatRoomParam
	19, // 7: Cmd.JoinChatRoom.cmd:type_name -> Cmd.Command
	0,  // 8: Cmd.JoinChatRoom.param:type_name -> Cmd.EChatRoomParam
	19, // 9: Cmd.ExitChatRoom.cmd:type_name -> Cmd.Command
	0,  // 10: Cmd.ExitChatRoom.param:type_name -> Cmd.EChatRoomParam
	19, // 11: Cmd.KickChatMember.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.KickChatMember.param:type_name -> Cmd.EChatRoomParam
	19, // 13: Cmd.ExchangeRoomOwner.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.ExchangeRoomOwner.param:type_name -> Cmd.EChatRoomParam
	19, // 15: Cmd.RoomMemberUpdate.cmd:type_name -> Cmd.Command
	0,  // 16: Cmd.RoomMemberUpdate.param:type_name -> Cmd.EChatRoomParam
	5,  // 17: Cmd.RoomMemberUpdate.updates:type_name -> Cmd.ChatRoomMember
	19, // 18: Cmd.EnterChatRoom.cmd:type_name -> Cmd.Command
	0,  // 19: Cmd.EnterChatRoom.param:type_name -> Cmd.EChatRoomParam
	6,  // 20: Cmd.EnterChatRoom.data:type_name -> Cmd.ChatRoomData
	2,  // 21: Cmd.ChatRoomSummary.roomtype:type_name -> Cmd.EChatRoomType
	19, // 22: Cmd.ChatRoomDataSync.cmd:type_name -> Cmd.Command
	0,  // 23: Cmd.ChatRoomDataSync.param:type_name -> Cmd.EChatRoomParam
	3,  // 24: Cmd.ChatRoomDataSync.esync:type_name -> Cmd.EChatRoomSync
	14, // 25: Cmd.ChatRoomDataSync.data:type_name -> Cmd.ChatRoomSummary
	19, // 26: Cmd.ChatRoomTip.cmd:type_name -> Cmd.Command
	0,  // 27: Cmd.ChatRoomTip.param:type_name -> Cmd.EChatRoomParam
	4,  // 28: Cmd.ChatRoomTip.tip:type_name -> Cmd.EChatRoomTip
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_SceneChatRoom_proto_init() }
func file_SceneChatRoom_proto_init() {
	if File_SceneChatRoom_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneChatRoom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickChatMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRoomOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMemberUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneChatRoom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneChatRoom_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneChatRoom_proto_goTypes,
		DependencyIndexes: file_SceneChatRoom_proto_depIdxs,
		EnumInfos:         file_SceneChatRoom_proto_enumTypes,
		MessageInfos:      file_SceneChatRoom_proto_msgTypes,
	}.Build()
	File_SceneChatRoom_proto = out.File
	file_SceneChatRoom_proto_rawDesc = nil
	file_SceneChatRoom_proto_goTypes = nil
	file_SceneChatRoom_proto_depIdxs = nil
}
