// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: SceneUser.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CmdParam int32

const (
	CmdParam_USERPARAM_USERSYNC                 CmdParam = 1
	CmdParam_USERPARAM_GMCOMMAND                CmdParam = 3
	CmdParam_USERPARAM_PROFESSIONEXCHANGE       CmdParam = 4
	CmdParam_MAIN_USER_DATA_USER_CMD            CmdParam = 11
	CmdParam_REQ_MOVE_USER_CMD                  CmdParam = 15
	CmdParam_RET_MOVE_USER_CMD                  CmdParam = 16
	CmdParam_SYS_TIME_USER_CMD                  CmdParam = 17
	CmdParam_DELETE_ENTRY_USER_CMD              CmdParam = 18
	CmdParam_CHANGE_BODY_USER_CMD               CmdParam = 22
	CmdParam_CHANGE_SCENE_USER_CMD              CmdParam = 23
	CmdParam_FUNCTION_NPC_LIST_USER_CMD         CmdParam = 25
	CmdParam_DELETE_STATIC_ENTRY_USER_CMD       CmdParam = 26
	CmdParam_SKILL_BROADCAST_USER_CMD           CmdParam = 27
	CmdParam_USE_SKILL_USER_CMD                 CmdParam = 28
	CmdParam_CHANT_SKILL_USER_CMD               CmdParam = 29
	CmdParam_BREAK_CHANT_SKILL_USER_CMD         CmdParam = 30
	CmdParam_BROADCAST_SKILL_USER_CMD           CmdParam = 31
	CmdParam_TITLE_NEWTITLE                     CmdParam = 34
	CmdParam_TITLE_REQDATA                      CmdParam = 35
	CmdParam_TITLE_ACTIVE                       CmdParam = 36
	CmdParam_MAP_OBJECT_DATA                    CmdParam = 38
	CmdParam_CD_TIME_USER_CMD                   CmdParam = 39
	CmdParam_RELIVE_USER_CMD                    CmdParam = 41
	CmdParam_GOTO_USER_CMD                      CmdParam = 42
	CmdParam_RECONNECTION_POS_USER_CMD          CmdParam = 43
	CmdParam_USER_FACE_CMD                      CmdParam = 45
	CmdParam_EXIT_POS_USER_CMD                  CmdParam = 46
	CmdParam_TEST_SKILL_BROADCAST_USER_CMD      CmdParam = 47
	CmdParam_GOTO_EXIT_POS_USER_CMD             CmdParam = 48
	CmdParam_GOTO_RANDOM_POS_USER_CMD           CmdParam = 49
	CmdParam_USER_REJECT_SETTING_NOTIFY_SERVICE CmdParam = 50
	CmdParam_NPC_WALK_TRACE_CMD                 CmdParam = 51
)

// Enum value maps for CmdParam.
var (
	CmdParam_name = map[int32]string{
		1:  "USERPARAM_USERSYNC",
		3:  "USERPARAM_GMCOMMAND",
		4:  "USERPARAM_PROFESSIONEXCHANGE",
		11: "MAIN_USER_DATA_USER_CMD",
		15: "REQ_MOVE_USER_CMD",
		16: "RET_MOVE_USER_CMD",
		17: "SYS_TIME_USER_CMD",
		18: "DELETE_ENTRY_USER_CMD",
		22: "CHANGE_BODY_USER_CMD",
		23: "CHANGE_SCENE_USER_CMD",
		25: "FUNCTION_NPC_LIST_USER_CMD",
		26: "DELETE_STATIC_ENTRY_USER_CMD",
		27: "SKILL_BROADCAST_USER_CMD",
		28: "USE_SKILL_USER_CMD",
		29: "CHANT_SKILL_USER_CMD",
		30: "BREAK_CHANT_SKILL_USER_CMD",
		31: "BROADCAST_SKILL_USER_CMD",
		34: "TITLE_NEWTITLE",
		35: "TITLE_REQDATA",
		36: "TITLE_ACTIVE",
		38: "MAP_OBJECT_DATA",
		39: "CD_TIME_USER_CMD",
		41: "RELIVE_USER_CMD",
		42: "GOTO_USER_CMD",
		43: "RECONNECTION_POS_USER_CMD",
		45: "USER_FACE_CMD",
		46: "EXIT_POS_USER_CMD",
		47: "TEST_SKILL_BROADCAST_USER_CMD",
		48: "GOTO_EXIT_POS_USER_CMD",
		49: "GOTO_RANDOM_POS_USER_CMD",
		50: "USER_REJECT_SETTING_NOTIFY_SERVICE",
		51: "NPC_WALK_TRACE_CMD",
	}
	CmdParam_value = map[string]int32{
		"USERPARAM_USERSYNC":                 1,
		"USERPARAM_GMCOMMAND":                3,
		"USERPARAM_PROFESSIONEXCHANGE":       4,
		"MAIN_USER_DATA_USER_CMD":            11,
		"REQ_MOVE_USER_CMD":                  15,
		"RET_MOVE_USER_CMD":                  16,
		"SYS_TIME_USER_CMD":                  17,
		"DELETE_ENTRY_USER_CMD":              18,
		"CHANGE_BODY_USER_CMD":               22,
		"CHANGE_SCENE_USER_CMD":              23,
		"FUNCTION_NPC_LIST_USER_CMD":         25,
		"DELETE_STATIC_ENTRY_USER_CMD":       26,
		"SKILL_BROADCAST_USER_CMD":           27,
		"USE_SKILL_USER_CMD":                 28,
		"CHANT_SKILL_USER_CMD":               29,
		"BREAK_CHANT_SKILL_USER_CMD":         30,
		"BROADCAST_SKILL_USER_CMD":           31,
		"TITLE_NEWTITLE":                     34,
		"TITLE_REQDATA":                      35,
		"TITLE_ACTIVE":                       36,
		"MAP_OBJECT_DATA":                    38,
		"CD_TIME_USER_CMD":                   39,
		"RELIVE_USER_CMD":                    41,
		"GOTO_USER_CMD":                      42,
		"RECONNECTION_POS_USER_CMD":          43,
		"USER_FACE_CMD":                      45,
		"EXIT_POS_USER_CMD":                  46,
		"TEST_SKILL_BROADCAST_USER_CMD":      47,
		"GOTO_EXIT_POS_USER_CMD":             48,
		"GOTO_RANDOM_POS_USER_CMD":           49,
		"USER_REJECT_SETTING_NOTIFY_SERVICE": 50,
		"NPC_WALK_TRACE_CMD":                 51,
	}
)

func (x CmdParam) Enum() *CmdParam {
	p := new(CmdParam)
	*p = x
	return p
}

func (x CmdParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CmdParam) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser_proto_enumTypes[0].Descriptor()
}

func (CmdParam) Type() protoreflect.EnumType {
	return &file_SceneUser_proto_enumTypes[0]
}

func (x CmdParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CmdParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CmdParam(num)
	return nil
}

// Deprecated: Use CmdParam.Descriptor instead.
func (CmdParam) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{0}
}

type EUserSyncType int32

const (
	EUserSyncType_EUSERSYNCTYPE_MIN  EUserSyncType = 1
	EUserSyncType_EUSERSYNCTYPE_INIT EUserSyncType = 2
	EUserSyncType_EUSERSYNCTYPE_SYNC EUserSyncType = 3
	EUserSyncType_EUSERSYNCTYPE_MAX  EUserSyncType = 4
)

// Enum value maps for EUserSyncType.
var (
	EUserSyncType_name = map[int32]string{
		1: "EUSERSYNCTYPE_MIN",
		2: "EUSERSYNCTYPE_INIT",
		3: "EUSERSYNCTYPE_SYNC",
		4: "EUSERSYNCTYPE_MAX",
	}
	EUserSyncType_value = map[string]int32{
		"EUSERSYNCTYPE_MIN":  1,
		"EUSERSYNCTYPE_INIT": 2,
		"EUSERSYNCTYPE_SYNC": 3,
		"EUSERSYNCTYPE_MAX":  4,
	}
)

func (x EUserSyncType) Enum() *EUserSyncType {
	p := new(EUserSyncType)
	*p = x
	return p
}

func (x EUserSyncType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EUserSyncType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser_proto_enumTypes[1].Descriptor()
}

func (EUserSyncType) Type() protoreflect.EnumType {
	return &file_SceneUser_proto_enumTypes[1]
}

func (x EUserSyncType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EUserSyncType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EUserSyncType(num)
	return nil
}

// Deprecated: Use EUserSyncType.Descriptor instead.
func (EUserSyncType) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{1}
}

type MessageType int32

const (
	MessageType_MESSAGETYPE_MIN  MessageType = 0
	MessageType_MESSAGETYPE_TEST MessageType = 1
	MessageType_MESSAGETYPE_MAX  MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGETYPE_MIN",
		1: "MESSAGETYPE_TEST",
		2: "MESSAGETYPE_MAX",
	}
	MessageType_value = map[string]int32{
		"MESSAGETYPE_MIN":  0,
		"MESSAGETYPE_TEST": 1,
		"MESSAGETYPE_MAX":  2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_SceneUser_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MessageType(num)
	return nil
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{2}
}

type DamageType int32

const (
	DamageType_DAMAGE_TYPE_INVALID     DamageType = -5
	DamageType_DAMAGE_TYPE_CAIJI       DamageType = -1
	DamageType_DAMAGE_TYPE_NONE        DamageType = 0
	DamageType_DAMAGE_TYPE_NORMAL      DamageType = 1
	DamageType_DAMAGE_TYPE_CRITICAL    DamageType = 2
	DamageType_DAMAGE_TYPE_MISS        DamageType = 3
	DamageType_DAMAGE_TYPE_HEAL        DamageType = 4
	DamageType_DAMAGE_TYPE_IMMUNE      DamageType = 5
	DamageType_DAMAGE_TYPE_BARRIER     DamageType = 6
	DamageType_DAMAGE_TYPE_NORMALSP    DamageType = 8
	DamageType_DAMAGE_TYPE_TREATSP     DamageType = 9
	DamageType_DAMAGE_TYPE_AUTOBLOCK   DamageType = 10
	DamageType_DAMAGE_TYPE_WEAPONBLOCK DamageType = 11
	DamageType_DAMAGE_TYPE_DEFMAGIC    DamageType = 12
)

// Enum value maps for DamageType.
var (
	DamageType_name = map[int32]string{
		-5: "DAMAGE_TYPE_INVALID",
		-1: "DAMAGE_TYPE_CAIJI",
		0:  "DAMAGE_TYPE_NONE",
		1:  "DAMAGE_TYPE_NORMAL",
		2:  "DAMAGE_TYPE_CRITICAL",
		3:  "DAMAGE_TYPE_MISS",
		4:  "DAMAGE_TYPE_HEAL",
		5:  "DAMAGE_TYPE_IMMUNE",
		6:  "DAMAGE_TYPE_BARRIER",
		8:  "DAMAGE_TYPE_NORMALSP",
		9:  "DAMAGE_TYPE_TREATSP",
		10: "DAMAGE_TYPE_AUTOBLOCK",
		11: "DAMAGE_TYPE_WEAPONBLOCK",
		12: "DAMAGE_TYPE_DEFMAGIC",
	}
	DamageType_value = map[string]int32{
		"DAMAGE_TYPE_INVALID":     -5,
		"DAMAGE_TYPE_CAIJI":       -1,
		"DAMAGE_TYPE_NONE":        0,
		"DAMAGE_TYPE_NORMAL":      1,
		"DAMAGE_TYPE_CRITICAL":    2,
		"DAMAGE_TYPE_MISS":        3,
		"DAMAGE_TYPE_HEAL":        4,
		"DAMAGE_TYPE_IMMUNE":      5,
		"DAMAGE_TYPE_BARRIER":     6,
		"DAMAGE_TYPE_NORMALSP":    8,
		"DAMAGE_TYPE_TREATSP":     9,
		"DAMAGE_TYPE_AUTOBLOCK":   10,
		"DAMAGE_TYPE_WEAPONBLOCK": 11,
		"DAMAGE_TYPE_DEFMAGIC":    12,
	}
)

func (x DamageType) Enum() *DamageType {
	p := new(DamageType)
	*p = x
	return p
}

func (x DamageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DamageType) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser_proto_enumTypes[3].Descriptor()
}

func (DamageType) Type() protoreflect.EnumType {
	return &file_SceneUser_proto_enumTypes[3]
}

func (x DamageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DamageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DamageType(num)
	return nil
}

// Deprecated: Use DamageType.Descriptor instead.
func (DamageType) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{3}
}

type UserAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EAttrType `protobuf:"varint,1,req,name=type,enum=Cmd.EAttrType,def=0" json:"type,omitempty"`
	Value *int32     `protobuf:"varint,2,req,name=value,def=0" json:"value,omitempty"`
}

// Default values for UserAttr fields.
const (
	Default_UserAttr_Type  = EAttrType_EATTRTYPE_MIN
	Default_UserAttr_Value = int32(0)
)

func (x *UserAttr) Reset() {
	*x = UserAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttr) ProtoMessage() {}

func (x *UserAttr) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttr.ProtoReflect.Descriptor instead.
func (*UserAttr) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{0}
}

func (x *UserAttr) GetType() EAttrType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_UserAttr_Type
}

func (x *UserAttr) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_UserAttr_Value
}

type UserAttrSvr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EAttrType `protobuf:"varint,1,opt,name=type,enum=Cmd.EAttrType,def=0" json:"type,omitempty"`
	Value *float32   `protobuf:"fixed32,2,opt,name=value,def=0" json:"value,omitempty"`
}

// Default values for UserAttrSvr fields.
const (
	Default_UserAttrSvr_Type  = EAttrType_EATTRTYPE_MIN
	Default_UserAttrSvr_Value = float32(0)
)

func (x *UserAttrSvr) Reset() {
	*x = UserAttrSvr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttrSvr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttrSvr) ProtoMessage() {}

func (x *UserAttrSvr) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttrSvr.ProtoReflect.Descriptor instead.
func (*UserAttrSvr) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{1}
}

func (x *UserAttrSvr) GetType() EAttrType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_UserAttrSvr_Type
}

func (x *UserAttrSvr) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_UserAttrSvr_Value
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EUserDataType `protobuf:"varint,1,req,name=type,enum=Cmd.EUserDataType,def=0" json:"type,omitempty"`
	Value *uint64        `protobuf:"varint,2,req,name=value,def=0" json:"value,omitempty"`
	Data  []byte         `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

// Default values for UserData fields.
const (
	Default_UserData_Type  = EUserDataType_EUSERDATATYPE_MIN
	Default_UserData_Value = uint64(0)
)

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{2}
}

func (x *UserData) GetType() EUserDataType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_UserData_Type
}

func (x *UserData) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return Default_UserData_Value
}

func (x *UserData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserSyncCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param      *CmdParam      `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=1" json:"param,omitempty"`
	Type       *EUserSyncType `protobuf:"varint,3,opt,name=type,enum=Cmd.EUserSyncType,def=1" json:"type,omitempty"`
	Attrs      []*UserAttr    `protobuf:"bytes,4,rep,name=attrs" json:"attrs,omitempty"`
	Datas      []*UserData    `protobuf:"bytes,5,rep,name=datas" json:"datas,omitempty"`
	Pointattrs []*UserAttr    `protobuf:"bytes,6,rep,name=pointattrs" json:"pointattrs,omitempty"`
}

// Default values for UserSyncCmd fields.
const (
	Default_UserSyncCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserSyncCmd_Param = CmdParam_USERPARAM_USERSYNC
	Default_UserSyncCmd_Type  = EUserSyncType_EUSERSYNCTYPE_MIN
)

func (x *UserSyncCmd) Reset() {
	*x = UserSyncCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSyncCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSyncCmd) ProtoMessage() {}

func (x *UserSyncCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSyncCmd.ProtoReflect.Descriptor instead.
func (*UserSyncCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{3}
}

func (x *UserSyncCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserSyncCmd_Cmd
}

func (x *UserSyncCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserSyncCmd_Param
}

func (x *UserSyncCmd) GetType() EUserSyncType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_UserSyncCmd_Type
}

func (x *UserSyncCmd) GetAttrs() []*UserAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *UserSyncCmd) GetDatas() []*UserData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *UserSyncCmd) GetPointattrs() []*UserAttr {
	if x != nil {
		return x.Pointattrs
	}
	return nil
}

type UserMessageCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param  *uint32      `protobuf:"varint,2,opt,name=param,def=200" json:"param,omitempty"`
	Id     *uint32      `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Type   *MessageType `protobuf:"varint,4,opt,name=type,enum=Cmd.MessageType,def=0" json:"type,omitempty"`
	Addstr *string      `protobuf:"bytes,5,opt,name=addstr" json:"addstr,omitempty"`
}

// Default values for UserMessageCmd fields.
const (
	Default_UserMessageCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserMessageCmd_Param = uint32(200)
	Default_UserMessageCmd_Id    = uint32(0)
	Default_UserMessageCmd_Type  = MessageType_MESSAGETYPE_MIN
)

func (x *UserMessageCmd) Reset() {
	*x = UserMessageCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessageCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessageCmd) ProtoMessage() {}

func (x *UserMessageCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessageCmd.ProtoReflect.Descriptor instead.
func (*UserMessageCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{4}
}

func (x *UserMessageCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserMessageCmd_Cmd
}

func (x *UserMessageCmd) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserMessageCmd_Param
}

func (x *UserMessageCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_UserMessageCmd_Id
}

func (x *UserMessageCmd) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_UserMessageCmd_Type
}

func (x *UserMessageCmd) GetAddstr() string {
	if x != nil && x.Addstr != nil {
		return *x.Addstr
	}
	return ""
}

type UserGMCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *uint32  `protobuf:"varint,2,opt,name=param,def=3" json:"param,omitempty"`
	Command *string  `protobuf:"bytes,3,opt,name=command" json:"command,omitempty"`
}

// Default values for UserGMCommand fields.
const (
	Default_UserGMCommand_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserGMCommand_Param = uint32(3)
)

func (x *UserGMCommand) Reset() {
	*x = UserGMCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGMCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGMCommand) ProtoMessage() {}

func (x *UserGMCommand) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGMCommand.ProtoReflect.Descriptor instead.
func (*UserGMCommand) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{5}
}

func (x *UserGMCommand) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserGMCommand_Cmd
}

func (x *UserGMCommand) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserGMCommand_Param
}

func (x *UserGMCommand) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

type UserProfessionExchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param      *uint32      `protobuf:"varint,2,opt,name=param,def=4" json:"param,omitempty"`
	Profession *EProfession `protobuf:"varint,3,opt,name=profession,enum=Cmd.EProfession,def=0" json:"profession,omitempty"`
}

// Default values for UserProfessionExchange fields.
const (
	Default_UserProfessionExchange_Cmd        = Command_SCENE_USER_PROTOCMD
	Default_UserProfessionExchange_Param      = uint32(4)
	Default_UserProfessionExchange_Profession = EProfession_EPROFESSION_MIN
)

func (x *UserProfessionExchange) Reset() {
	*x = UserProfessionExchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfessionExchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfessionExchange) ProtoMessage() {}

func (x *UserProfessionExchange) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfessionExchange.ProtoReflect.Descriptor instead.
func (*UserProfessionExchange) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{6}
}

func (x *UserProfessionExchange) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserProfessionExchange_Cmd
}

func (x *UserProfessionExchange) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserProfessionExchange_Param
}

func (x *UserProfessionExchange) GetProfession() EProfession {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return Default_UserProfessionExchange_Profession
}

type UserTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *uint32     `protobuf:"varint,2,opt,name=param,def=10" json:"param,omitempty"`
	Attrs []*UserAttr `protobuf:"bytes,3,rep,name=attrs" json:"attrs,omitempty"`
}

// Default values for UserTest fields.
const (
	Default_UserTest_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserTest_Param = uint32(10)
)

func (x *UserTest) Reset() {
	*x = UserTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTest) ProtoMessage() {}

func (x *UserTest) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTest.ProtoReflect.Descriptor instead.
func (*UserTest) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{7}
}

func (x *UserTest) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserTest_Cmd
}

func (x *UserTest) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserTest_Param
}

func (x *UserTest) GetAttrs() []*UserAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type UserFaceCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *uint32  `protobuf:"varint,2,opt,name=param,def=200" json:"param,omitempty"`
	Id    *uint32  `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
}

// Default values for UserFaceCmd fields.
const (
	Default_UserFaceCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserFaceCmd_Param = uint32(200)
	Default_UserFaceCmd_Id    = uint32(0)
)

func (x *UserFaceCmd) Reset() {
	*x = UserFaceCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFaceCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFaceCmd) ProtoMessage() {}

func (x *UserFaceCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFaceCmd.ProtoReflect.Descriptor instead.
func (*UserFaceCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{8}
}

func (x *UserFaceCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserFaceCmd_Cmd
}

func (x *UserFaceCmd) GetParam() uint32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserFaceCmd_Param
}

func (x *UserFaceCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_UserFaceCmd_Id
}

type MainUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Male       *uint32 `protobuf:"varint,3,opt,name=male" json:"male,omitempty"`
	Body       *uint32 `protobuf:"varint,4,opt,name=body" json:"body,omitempty"`
	Hair       *uint32 `protobuf:"varint,5,opt,name=hair" json:"hair,omitempty"`
	RightHand  *uint32 `protobuf:"varint,6,opt,name=rightHand" json:"rightHand,omitempty"`
	Profession *uint32 `protobuf:"varint,7,opt,name=profession" json:"profession,omitempty"`
	Accessory  *uint32 `protobuf:"varint,8,opt,name=accessory" json:"accessory,omitempty"`
	Wing       *uint32 `protobuf:"varint,9,opt,name=wing" json:"wing,omitempty"`
}

func (x *MainUserData) Reset() {
	*x = MainUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainUserData) ProtoMessage() {}

func (x *MainUserData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainUserData.ProtoReflect.Descriptor instead.
func (*MainUserData) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{9}
}

func (x *MainUserData) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MainUserData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MainUserData) GetMale() uint32 {
	if x != nil && x.Male != nil {
		return *x.Male
	}
	return 0
}

func (x *MainUserData) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return 0
}

func (x *MainUserData) GetHair() uint32 {
	if x != nil && x.Hair != nil {
		return *x.Hair
	}
	return 0
}

func (x *MainUserData) GetRightHand() uint32 {
	if x != nil && x.RightHand != nil {
		return *x.RightHand
	}
	return 0
}

func (x *MainUserData) GetProfession() uint32 {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return 0
}

func (x *MainUserData) GetAccessory() uint32 {
	if x != nil && x.Accessory != nil {
		return *x.Accessory
	}
	return 0
}

func (x *MainUserData) GetWing() uint32 {
	if x != nil && x.Wing != nil {
		return *x.Wing
	}
	return 0
}

type MainUserDataUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam     `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=11" json:"param,omitempty"`
	Data  *MainUserData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

// Default values for MainUserDataUserCmd fields.
const (
	Default_MainUserDataUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_MainUserDataUserCmd_Param = CmdParam_MAIN_USER_DATA_USER_CMD
)

func (x *MainUserDataUserCmd) Reset() {
	*x = MainUserDataUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainUserDataUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainUserDataUserCmd) ProtoMessage() {}

func (x *MainUserDataUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainUserDataUserCmd.ProtoReflect.Descriptor instead.
func (*MainUserDataUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{10}
}

func (x *MainUserDataUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_MainUserDataUserCmd_Cmd
}

func (x *MainUserDataUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_MainUserDataUserCmd_Param
}

func (x *MainUserDataUserCmd) GetData() *MainUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqMoveUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param  *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=15" json:"param,omitempty"`
	Target *ScenePos `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

// Default values for ReqMoveUserCmd fields.
const (
	Default_ReqMoveUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ReqMoveUserCmd_Param = CmdParam_REQ_MOVE_USER_CMD
)

func (x *ReqMoveUserCmd) Reset() {
	*x = ReqMoveUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMoveUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMoveUserCmd) ProtoMessage() {}

func (x *ReqMoveUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMoveUserCmd.ProtoReflect.Descriptor instead.
func (*ReqMoveUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{11}
}

func (x *ReqMoveUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReqMoveUserCmd_Cmd
}

func (x *ReqMoveUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReqMoveUserCmd_Param
}

func (x *ReqMoveUserCmd) GetTarget() *ScenePos {
	if x != nil {
		return x.Target
	}
	return nil
}

type RetMoveUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param  *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=16" json:"param,omitempty"`
	Charid *uint64   `protobuf:"varint,3,opt,name=charid" json:"charid,omitempty"`
	Pos    *ScenePos `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
}

// Default values for RetMoveUserCmd fields.
const (
	Default_RetMoveUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_RetMoveUserCmd_Param = CmdParam_RET_MOVE_USER_CMD
)

func (x *RetMoveUserCmd) Reset() {
	*x = RetMoveUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetMoveUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetMoveUserCmd) ProtoMessage() {}

func (x *RetMoveUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetMoveUserCmd.ProtoReflect.Descriptor instead.
func (*RetMoveUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{12}
}

func (x *RetMoveUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RetMoveUserCmd_Cmd
}

func (x *RetMoveUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RetMoveUserCmd_Param
}

func (x *RetMoveUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *RetMoveUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type SynTimeUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param      *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=17" json:"param,omitempty"`
	ServerTime *uint64   `protobuf:"varint,3,opt,name=serverTime" json:"serverTime,omitempty"`
}

// Default values for SynTimeUserCmd fields.
const (
	Default_SynTimeUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_SynTimeUserCmd_Param = CmdParam_SYS_TIME_USER_CMD
)

func (x *SynTimeUserCmd) Reset() {
	*x = SynTimeUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynTimeUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynTimeUserCmd) ProtoMessage() {}

func (x *SynTimeUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynTimeUserCmd.ProtoReflect.Descriptor instead.
func (*SynTimeUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{13}
}

func (x *SynTimeUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SynTimeUserCmd_Cmd
}

func (x *SynTimeUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SynTimeUserCmd_Param
}

func (x *SynTimeUserCmd) GetServerTime() uint64 {
	if x != nil && x.ServerTime != nil {
		return *x.ServerTime
	}
	return 0
}

type DeleteEntryUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param    *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=18" json:"param,omitempty"`
	List     []uint64  `protobuf:"varint,3,rep,name=list" json:"list,omitempty"`
	Fadeout  *uint32   `protobuf:"varint,4,opt,name=fadeout,def=0" json:"fadeout,omitempty"`
	DelayDel *uint32   `protobuf:"varint,5,opt,name=delay_del,json=delayDel,def=0" json:"delay_del,omitempty"`
}

// Default values for DeleteEntryUserCmd fields.
const (
	Default_DeleteEntryUserCmd_Cmd      = Command_SCENE_USER_PROTOCMD
	Default_DeleteEntryUserCmd_Param    = CmdParam_DELETE_ENTRY_USER_CMD
	Default_DeleteEntryUserCmd_Fadeout  = uint32(0)
	Default_DeleteEntryUserCmd_DelayDel = uint32(0)
)

func (x *DeleteEntryUserCmd) Reset() {
	*x = DeleteEntryUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryUserCmd) ProtoMessage() {}

func (x *DeleteEntryUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryUserCmd.ProtoReflect.Descriptor instead.
func (*DeleteEntryUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteEntryUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DeleteEntryUserCmd_Cmd
}

func (x *DeleteEntryUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DeleteEntryUserCmd_Param
}

func (x *DeleteEntryUserCmd) GetList() []uint64 {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeleteEntryUserCmd) GetFadeout() uint32 {
	if x != nil && x.Fadeout != nil {
		return *x.Fadeout
	}
	return Default_DeleteEntryUserCmd_Fadeout
}

func (x *DeleteEntryUserCmd) GetDelayDel() uint32 {
	if x != nil && x.DelayDel != nil {
		return *x.DelayDel
	}
	return Default_DeleteEntryUserCmd_DelayDel
}

type ChangeBodyUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param      *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=22" json:"param,omitempty"`
	Charid     *uint64   `protobuf:"varint,3,req,name=charid" json:"charid,omitempty"`
	Male       *uint32   `protobuf:"varint,4,opt,name=male" json:"male,omitempty"`
	Body       *uint32   `protobuf:"varint,5,opt,name=body" json:"body,omitempty"`
	Hair       *uint32   `protobuf:"varint,6,opt,name=hair" json:"hair,omitempty"`
	RightHand  *uint32   `protobuf:"varint,7,opt,name=rightHand" json:"rightHand,omitempty"`
	Profession *uint32   `protobuf:"varint,8,opt,name=profession" json:"profession,omitempty"`
	Accessory  *uint32   `protobuf:"varint,9,opt,name=accessory" json:"accessory,omitempty"`
	Wing       *uint32   `protobuf:"varint,10,opt,name=wing" json:"wing,omitempty"`
}

// Default values for ChangeBodyUserCmd fields.
const (
	Default_ChangeBodyUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ChangeBodyUserCmd_Param = CmdParam_CHANGE_BODY_USER_CMD
)

func (x *ChangeBodyUserCmd) Reset() {
	*x = ChangeBodyUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBodyUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBodyUserCmd) ProtoMessage() {}

func (x *ChangeBodyUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBodyUserCmd.ProtoReflect.Descriptor instead.
func (*ChangeBodyUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeBodyUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeBodyUserCmd_Cmd
}

func (x *ChangeBodyUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeBodyUserCmd_Param
}

func (x *ChangeBodyUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetMale() uint32 {
	if x != nil && x.Male != nil {
		return *x.Male
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetBody() uint32 {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetHair() uint32 {
	if x != nil && x.Hair != nil {
		return *x.Hair
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetRightHand() uint32 {
	if x != nil && x.RightHand != nil {
		return *x.RightHand
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetProfession() uint32 {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetAccessory() uint32 {
	if x != nil && x.Accessory != nil {
		return *x.Accessory
	}
	return 0
}

func (x *ChangeBodyUserCmd) GetWing() uint32 {
	if x != nil && x.Wing != nil {
		return *x.Wing
	}
	return 0
}

type ChangeSceneUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param        *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=23" json:"param,omitempty"`
	MapID        *uint32   `protobuf:"varint,3,opt,name=mapID" json:"mapID,omitempty"`
	MapName      *string   `protobuf:"bytes,4,opt,name=mapName" json:"mapName,omitempty"`
	Pos          *ScenePos `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
	DmapID       *uint32   `protobuf:"varint,6,opt,name=dmapID" json:"dmapID,omitempty"`
	Preview      *uint32   `protobuf:"varint,7,opt,name=preview" json:"preview,omitempty"`
	Invisiblexit []uint32  `protobuf:"varint,8,rep,name=invisiblexit" json:"invisiblexit,omitempty"`
	Imageid      *uint32   `protobuf:"varint,9,opt,name=imageid" json:"imageid,omitempty"`
	SubScenes    []uint32  `protobuf:"varint,10,rep,name=subScenes" json:"subScenes,omitempty"`
	Mask         *bool     `protobuf:"varint,11,opt,name=mask" json:"mask,omitempty"`
}

// Default values for ChangeSceneUserCmd fields.
const (
	Default_ChangeSceneUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ChangeSceneUserCmd_Param = CmdParam_CHANGE_SCENE_USER_CMD
)

func (x *ChangeSceneUserCmd) Reset() {
	*x = ChangeSceneUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSceneUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSceneUserCmd) ProtoMessage() {}

func (x *ChangeSceneUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSceneUserCmd.ProtoReflect.Descriptor instead.
func (*ChangeSceneUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeSceneUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeSceneUserCmd_Cmd
}

func (x *ChangeSceneUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeSceneUserCmd_Param
}

func (x *ChangeSceneUserCmd) GetMapID() uint32 {
	if x != nil && x.MapID != nil {
		return *x.MapID
	}
	return 0
}

func (x *ChangeSceneUserCmd) GetMapName() string {
	if x != nil && x.MapName != nil {
		return *x.MapName
	}
	return ""
}

func (x *ChangeSceneUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *ChangeSceneUserCmd) GetDmapID() uint32 {
	if x != nil && x.DmapID != nil {
		return *x.DmapID
	}
	return 0
}

func (x *ChangeSceneUserCmd) GetPreview() uint32 {
	if x != nil && x.Preview != nil {
		return *x.Preview
	}
	return 0
}

func (x *ChangeSceneUserCmd) GetInvisiblexit() []uint32 {
	if x != nil {
		return x.Invisiblexit
	}
	return nil
}

func (x *ChangeSceneUserCmd) GetImageid() uint32 {
	if x != nil && x.Imageid != nil {
		return *x.Imageid
	}
	return 0
}

func (x *ChangeSceneUserCmd) GetSubScenes() []uint32 {
	if x != nil {
		return x.SubScenes
	}
	return nil
}

func (x *ChangeSceneUserCmd) GetMask() bool {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return false
}

type FunNpcData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Npcid  *uint32   `protobuf:"varint,1,req,name=npcid" json:"npcid,omitempty"`
	Tempid *uint64   `protobuf:"varint,2,req,name=tempid" json:"tempid,omitempty"`
	Pos    *ScenePos `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
}

func (x *FunNpcData) Reset() {
	*x = FunNpcData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunNpcData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunNpcData) ProtoMessage() {}

func (x *FunNpcData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunNpcData.ProtoReflect.Descriptor instead.
func (*FunNpcData) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{17}
}

func (x *FunNpcData) GetNpcid() uint32 {
	if x != nil && x.Npcid != nil {
		return *x.Npcid
	}
	return 0
}

func (x *FunNpcData) GetTempid() uint64 {
	if x != nil && x.Tempid != nil {
		return *x.Tempid
	}
	return 0
}

func (x *FunNpcData) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type FuntionNpcListUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam     `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=25" json:"param,omitempty"`
	List  []*FunNpcData `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
}

// Default values for FuntionNpcListUserCmd fields.
const (
	Default_FuntionNpcListUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_FuntionNpcListUserCmd_Param = CmdParam_FUNCTION_NPC_LIST_USER_CMD
)

func (x *FuntionNpcListUserCmd) Reset() {
	*x = FuntionNpcListUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuntionNpcListUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuntionNpcListUserCmd) ProtoMessage() {}

func (x *FuntionNpcListUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuntionNpcListUserCmd.ProtoReflect.Descriptor instead.
func (*FuntionNpcListUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{18}
}

func (x *FuntionNpcListUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FuntionNpcListUserCmd_Cmd
}

func (x *FuntionNpcListUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FuntionNpcListUserCmd_Param
}

func (x *FuntionNpcListUserCmd) GetList() []*FunNpcData {
	if x != nil {
		return x.List
	}
	return nil
}

type GUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneID *uint32 `protobuf:"varint,1,req,name=zoneID" json:"zoneID,omitempty"`
	Time   *uint32 `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	MapID  *uint32 `protobuf:"varint,3,req,name=mapID" json:"mapID,omitempty"`
	Index  *uint32 `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
}

func (x *GUID) Reset() {
	*x = GUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GUID) ProtoMessage() {}

func (x *GUID) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GUID.ProtoReflect.Descriptor instead.
func (*GUID) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{19}
}

func (x *GUID) GetZoneID() uint32 {
	if x != nil && x.ZoneID != nil {
		return *x.ZoneID
	}
	return 0
}

func (x *GUID) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *GUID) GetMapID() uint32 {
	if x != nil && x.MapID != nil {
		return *x.MapID
	}
	return 0
}

func (x *GUID) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type DeleteStaticEntryUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=26" json:"param,omitempty"`
	List  []*GUID   `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
}

// Default values for DeleteStaticEntryUserCmd fields.
const (
	Default_DeleteStaticEntryUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_DeleteStaticEntryUserCmd_Param = CmdParam_DELETE_STATIC_ENTRY_USER_CMD
)

func (x *DeleteStaticEntryUserCmd) Reset() {
	*x = DeleteStaticEntryUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStaticEntryUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaticEntryUserCmd) ProtoMessage() {}

func (x *DeleteStaticEntryUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaticEntryUserCmd.ProtoReflect.Descriptor instead.
func (*DeleteStaticEntryUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteStaticEntryUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DeleteStaticEntryUserCmd_Cmd
}

func (x *DeleteStaticEntryUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DeleteStaticEntryUserCmd_Param
}

func (x *DeleteStaticEntryUserCmd) GetList() []*GUID {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareDamTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid *uint64 `protobuf:"varint,1,opt,name=charid,def=0" json:"charid,omitempty"`
	Damage *int32  `protobuf:"varint,2,opt,name=damage,def=0" json:"damage,omitempty"`
	Type   *int32  `protobuf:"varint,3,opt,name=type,def=1" json:"type,omitempty"`
}

// Default values for ShareDamTarget fields.
const (
	Default_ShareDamTarget_Charid = uint64(0)
	Default_ShareDamTarget_Damage = int32(0)
	Default_ShareDamTarget_Type   = int32(1)
)

func (x *ShareDamTarget) Reset() {
	*x = ShareDamTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDamTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDamTarget) ProtoMessage() {}

func (x *ShareDamTarget) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDamTarget.ProtoReflect.Descriptor instead.
func (*ShareDamTarget) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{21}
}

func (x *ShareDamTarget) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_ShareDamTarget_Charid
}

func (x *ShareDamTarget) GetDamage() int32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return Default_ShareDamTarget_Damage
}

func (x *ShareDamTarget) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_ShareDamTarget_Type
}

type HitedTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid       *uint64           `protobuf:"varint,1,opt,name=charid,def=0" json:"charid,omitempty"`
	Damage       *int32            `protobuf:"varint,2,opt,name=damage,def=0" json:"damage,omitempty"`
	Type         *int32            `protobuf:"varint,3,opt,name=type,def=1" json:"type,omitempty"`
	ShareTargets []*ShareDamTarget `protobuf:"bytes,4,rep,name=shareTargets" json:"shareTargets,omitempty"`
}

// Default values for HitedTarget fields.
const (
	Default_HitedTarget_Charid = uint64(0)
	Default_HitedTarget_Damage = int32(0)
	Default_HitedTarget_Type   = int32(1)
)

func (x *HitedTarget) Reset() {
	*x = HitedTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitedTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitedTarget) ProtoMessage() {}

func (x *HitedTarget) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitedTarget.ProtoReflect.Descriptor instead.
func (*HitedTarget) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{22}
}

func (x *HitedTarget) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_HitedTarget_Charid
}

func (x *HitedTarget) GetDamage() int32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return Default_HitedTarget_Damage
}

func (x *HitedTarget) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_HitedTarget_Type
}

func (x *HitedTarget) GetShareTargets() []*ShareDamTarget {
	if x != nil {
		return x.ShareTargets
	}
	return nil
}

type PhaseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number       *int32         `protobuf:"varint,1,opt,name=number,def=0" json:"number,omitempty"`
	Pos          *ScenePos      `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	HitedTargets []*HitedTarget `protobuf:"bytes,3,rep,name=hitedTargets" json:"hitedTargets,omitempty"`
	Dir          *int32         `protobuf:"varint,5,opt,name=dir,def=0" json:"dir,omitempty"`
}

// Default values for PhaseData fields.
const (
	Default_PhaseData_Number = int32(0)
	Default_PhaseData_Dir    = int32(0)
)

func (x *PhaseData) Reset() {
	*x = PhaseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhaseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhaseData) ProtoMessage() {}

func (x *PhaseData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhaseData.ProtoReflect.Descriptor instead.
func (*PhaseData) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{23}
}

func (x *PhaseData) GetNumber() int32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return Default_PhaseData_Number
}

func (x *PhaseData) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *PhaseData) GetHitedTargets() []*HitedTarget {
	if x != nil {
		return x.HitedTargets
	}
	return nil
}

func (x *PhaseData) GetDir() int32 {
	if x != nil && x.Dir != nil {
		return *x.Dir
	}
	return Default_PhaseData_Dir
}

type SkillBroadcastUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param     *CmdParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=27" json:"param,omitempty"`
	Charid    *uint64    `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	SkillID   *uint32    `protobuf:"varint,4,opt,name=skillID,def=0" json:"skillID,omitempty"`
	Petid     *int32     `protobuf:"varint,5,opt,name=petid,def=0" json:"petid,omitempty"`
	Data      *PhaseData `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
	Random    *uint32    `protobuf:"varint,7,opt,name=random,def=0" json:"random,omitempty"`
	Chanttime *uint32    `protobuf:"varint,8,opt,name=chanttime,def=0" json:"chanttime,omitempty"`
	Starttime *uint64    `protobuf:"varint,9,opt,name=starttime" json:"starttime,omitempty"`
}

// Default values for SkillBroadcastUserCmd fields.
const (
	Default_SkillBroadcastUserCmd_Cmd       = Command_SCENE_USER_PROTOCMD
	Default_SkillBroadcastUserCmd_Param     = CmdParam_SKILL_BROADCAST_USER_CMD
	Default_SkillBroadcastUserCmd_Charid    = uint64(0)
	Default_SkillBroadcastUserCmd_SkillID   = uint32(0)
	Default_SkillBroadcastUserCmd_Petid     = int32(0)
	Default_SkillBroadcastUserCmd_Random    = uint32(0)
	Default_SkillBroadcastUserCmd_Chanttime = uint32(0)
)

func (x *SkillBroadcastUserCmd) Reset() {
	*x = SkillBroadcastUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillBroadcastUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillBroadcastUserCmd) ProtoMessage() {}

func (x *SkillBroadcastUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillBroadcastUserCmd.ProtoReflect.Descriptor instead.
func (*SkillBroadcastUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{24}
}

func (x *SkillBroadcastUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SkillBroadcastUserCmd_Cmd
}

func (x *SkillBroadcastUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SkillBroadcastUserCmd_Param
}

func (x *SkillBroadcastUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_SkillBroadcastUserCmd_Charid
}

func (x *SkillBroadcastUserCmd) GetSkillID() uint32 {
	if x != nil && x.SkillID != nil {
		return *x.SkillID
	}
	return Default_SkillBroadcastUserCmd_SkillID
}

func (x *SkillBroadcastUserCmd) GetPetid() int32 {
	if x != nil && x.Petid != nil {
		return *x.Petid
	}
	return Default_SkillBroadcastUserCmd_Petid
}

func (x *SkillBroadcastUserCmd) GetData() *PhaseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SkillBroadcastUserCmd) GetRandom() uint32 {
	if x != nil && x.Random != nil {
		return *x.Random
	}
	return Default_SkillBroadcastUserCmd_Random
}

func (x *SkillBroadcastUserCmd) GetChanttime() uint32 {
	if x != nil && x.Chanttime != nil {
		return *x.Chanttime
	}
	return Default_SkillBroadcastUserCmd_Chanttime
}

func (x *SkillBroadcastUserCmd) GetStarttime() uint64 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return 0
}

type TestUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I *int32  `protobuf:"varint,1,req,name=i" json:"i,omitempty"`
	J *uint64 `protobuf:"varint,2,opt,name=j" json:"j,omitempty"`
	K *int32  `protobuf:"varint,3,opt,name=k" json:"k,omitempty"`
}

func (x *TestUint64) Reset() {
	*x = TestUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestUint64) ProtoMessage() {}

func (x *TestUint64) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestUint64.ProtoReflect.Descriptor instead.
func (*TestUint64) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{25}
}

func (x *TestUint64) GetI() int32 {
	if x != nil && x.I != nil {
		return *x.I
	}
	return 0
}

func (x *TestUint64) GetJ() uint64 {
	if x != nil && x.J != nil {
		return *x.J
	}
	return 0
}

func (x *TestUint64) GetK() int32 {
	if x != nil && x.K != nil {
		return *x.K
	}
	return 0
}

type TestSkillBroadcastUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam     `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=47" json:"param,omitempty"`
	I     *int32        `protobuf:"varint,3,req,name=i" json:"i,omitempty"`
	List  []*TestUint64 `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
}

// Default values for TestSkillBroadcastUserCmd fields.
const (
	Default_TestSkillBroadcastUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_TestSkillBroadcastUserCmd_Param = CmdParam_TEST_SKILL_BROADCAST_USER_CMD
)

func (x *TestSkillBroadcastUserCmd) Reset() {
	*x = TestSkillBroadcastUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSkillBroadcastUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSkillBroadcastUserCmd) ProtoMessage() {}

func (x *TestSkillBroadcastUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSkillBroadcastUserCmd.ProtoReflect.Descriptor instead.
func (*TestSkillBroadcastUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{26}
}

func (x *TestSkillBroadcastUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TestSkillBroadcastUserCmd_Cmd
}

func (x *TestSkillBroadcastUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TestSkillBroadcastUserCmd_Param
}

func (x *TestSkillBroadcastUserCmd) GetI() int32 {
	if x != nil && x.I != nil {
		return *x.I
	}
	return 0
}

func (x *TestSkillBroadcastUserCmd) GetList() []*TestUint64 {
	if x != nil {
		return x.List
	}
	return nil
}

type UseSkillUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=28" json:"param,omitempty"`
	Tid     *uint64   `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	SkillID *uint32   `protobuf:"varint,4,opt,name=skillID" json:"skillID,omitempty"`
	Pos     *ScenePos `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
}

// Default values for UseSkillUserCmd fields.
const (
	Default_UseSkillUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UseSkillUserCmd_Param = CmdParam_USE_SKILL_USER_CMD
)

func (x *UseSkillUserCmd) Reset() {
	*x = UseSkillUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSkillUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSkillUserCmd) ProtoMessage() {}

func (x *UseSkillUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSkillUserCmd.ProtoReflect.Descriptor instead.
func (*UseSkillUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{27}
}

func (x *UseSkillUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UseSkillUserCmd_Cmd
}

func (x *UseSkillUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UseSkillUserCmd_Param
}

func (x *UseSkillUserCmd) GetTid() uint64 {
	if x != nil && x.Tid != nil {
		return *x.Tid
	}
	return 0
}

func (x *UseSkillUserCmd) GetSkillID() uint32 {
	if x != nil && x.SkillID != nil {
		return *x.SkillID
	}
	return 0
}

func (x *UseSkillUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type ChantSkillUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=29" json:"param,omitempty"`
	Tid     *uint64   `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	SkillID *uint32   `protobuf:"varint,4,opt,name=skillID" json:"skillID,omitempty"`
	Pos     *ScenePos `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
	Attid   *uint64   `protobuf:"varint,6,opt,name=attid" json:"attid,omitempty"`
}

// Default values for ChantSkillUserCmd fields.
const (
	Default_ChantSkillUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ChantSkillUserCmd_Param = CmdParam_CHANT_SKILL_USER_CMD
)

func (x *ChantSkillUserCmd) Reset() {
	*x = ChantSkillUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChantSkillUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChantSkillUserCmd) ProtoMessage() {}

func (x *ChantSkillUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChantSkillUserCmd.ProtoReflect.Descriptor instead.
func (*ChantSkillUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{28}
}

func (x *ChantSkillUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChantSkillUserCmd_Cmd
}

func (x *ChantSkillUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChantSkillUserCmd_Param
}

func (x *ChantSkillUserCmd) GetTid() uint64 {
	if x != nil && x.Tid != nil {
		return *x.Tid
	}
	return 0
}

func (x *ChantSkillUserCmd) GetSkillID() uint32 {
	if x != nil && x.SkillID != nil {
		return *x.SkillID
	}
	return 0
}

func (x *ChantSkillUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *ChantSkillUserCmd) GetAttid() uint64 {
	if x != nil && x.Attid != nil {
		return *x.Attid
	}
	return 0
}

type BreakChantSkillUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=30" json:"param,omitempty"`
	Attid   *uint64   `protobuf:"varint,3,opt,name=attid" json:"attid,omitempty"`
	SkillID *uint32   `protobuf:"varint,4,opt,name=skillID" json:"skillID,omitempty"`
}

// Default values for BreakChantSkillUserCmd fields.
const (
	Default_BreakChantSkillUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_BreakChantSkillUserCmd_Param = CmdParam_BREAK_CHANT_SKILL_USER_CMD
)

func (x *BreakChantSkillUserCmd) Reset() {
	*x = BreakChantSkillUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakChantSkillUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakChantSkillUserCmd) ProtoMessage() {}

func (x *BreakChantSkillUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakChantSkillUserCmd.ProtoReflect.Descriptor instead.
func (*BreakChantSkillUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{29}
}

func (x *BreakChantSkillUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BreakChantSkillUserCmd_Cmd
}

func (x *BreakChantSkillUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BreakChantSkillUserCmd_Param
}

func (x *BreakChantSkillUserCmd) GetAttid() uint64 {
	if x != nil && x.Attid != nil {
		return *x.Attid
	}
	return 0
}

func (x *BreakChantSkillUserCmd) GetSkillID() uint32 {
	if x != nil && x.SkillID != nil {
		return *x.SkillID
	}
	return 0
}

type BroadcastSkillUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=31" json:"param,omitempty"`
	Attid   *uint64   `protobuf:"varint,3,opt,name=attid" json:"attid,omitempty"`
	SkillID *uint32   `protobuf:"varint,4,opt,name=skillID" json:"skillID,omitempty"`
	Pos     *ScenePos `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
	Tid     *uint64   `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
}

// Default values for BroadcastSkillUserCmd fields.
const (
	Default_BroadcastSkillUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_BroadcastSkillUserCmd_Param = CmdParam_BROADCAST_SKILL_USER_CMD
)

func (x *BroadcastSkillUserCmd) Reset() {
	*x = BroadcastSkillUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastSkillUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastSkillUserCmd) ProtoMessage() {}

func (x *BroadcastSkillUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastSkillUserCmd.ProtoReflect.Descriptor instead.
func (*BroadcastSkillUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{30}
}

func (x *BroadcastSkillUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BroadcastSkillUserCmd_Cmd
}

func (x *BroadcastSkillUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BroadcastSkillUserCmd_Param
}

func (x *BroadcastSkillUserCmd) GetAttid() uint64 {
	if x != nil && x.Attid != nil {
		return *x.Attid
	}
	return 0
}

func (x *BroadcastSkillUserCmd) GetSkillID() uint32 {
	if x != nil && x.SkillID != nil {
		return *x.SkillID
	}
	return 0
}

func (x *BroadcastSkillUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *BroadcastSkillUserCmd) GetTid() uint64 {
	if x != nil && x.Tid != nil {
		return *x.Tid
	}
	return 0
}

type MapObjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=38" json:"param,omitempty"`
	Guid  *uint64     `protobuf:"varint,3,opt,name=guid,def=0" json:"guid,omitempty"`
	Attrs []*UserAttr `protobuf:"bytes,4,rep,name=attrs" json:"attrs,omitempty"`
}

// Default values for MapObjectData fields.
const (
	Default_MapObjectData_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_MapObjectData_Param = CmdParam_MAP_OBJECT_DATA
	Default_MapObjectData_Guid  = uint64(0)
)

func (x *MapObjectData) Reset() {
	*x = MapObjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapObjectData) ProtoMessage() {}

func (x *MapObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapObjectData.ProtoReflect.Descriptor instead.
func (*MapObjectData) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{31}
}

func (x *MapObjectData) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_MapObjectData_Cmd
}

func (x *MapObjectData) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_MapObjectData_Param
}

func (x *MapObjectData) GetGuid() uint64 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return Default_MapObjectData_Guid
}

func (x *MapObjectData) GetAttrs() []*UserAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type ReliveUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=41" json:"param,omitempty"`
	Type  *uint32   `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

// Default values for ReliveUserCmd fields.
const (
	Default_ReliveUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ReliveUserCmd_Param = CmdParam_RELIVE_USER_CMD
)

func (x *ReliveUserCmd) Reset() {
	*x = ReliveUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliveUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliveUserCmd) ProtoMessage() {}

func (x *ReliveUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliveUserCmd.ProtoReflect.Descriptor instead.
func (*ReliveUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{32}
}

func (x *ReliveUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReliveUserCmd_Cmd
}

func (x *ReliveUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReliveUserCmd_Param
}

func (x *ReliveUserCmd) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type GoToUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param   *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=42" json:"param,omitempty"`
	Pos     *ScenePos `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
	Charid  *uint64   `protobuf:"varint,4,opt,name=charid,def=0" json:"charid,omitempty"`
	Isgomap *bool     `protobuf:"varint,5,opt,name=isgomap,def=0" json:"isgomap,omitempty"`
}

// Default values for GoToUserCmd fields.
const (
	Default_GoToUserCmd_Cmd     = Command_SCENE_USER_PROTOCMD
	Default_GoToUserCmd_Param   = CmdParam_GOTO_USER_CMD
	Default_GoToUserCmd_Charid  = uint64(0)
	Default_GoToUserCmd_Isgomap = bool(false)
)

func (x *GoToUserCmd) Reset() {
	*x = GoToUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoToUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoToUserCmd) ProtoMessage() {}

func (x *GoToUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoToUserCmd.ProtoReflect.Descriptor instead.
func (*GoToUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{33}
}

func (x *GoToUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GoToUserCmd_Cmd
}

func (x *GoToUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GoToUserCmd_Param
}

func (x *GoToUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *GoToUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_GoToUserCmd_Charid
}

func (x *GoToUserCmd) GetIsgomap() bool {
	if x != nil && x.Isgomap != nil {
		return *x.Isgomap
	}
	return Default_GoToUserCmd_Isgomap
}

type ReconnectionPosUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=43" json:"param,omitempty"`
	Pos   *ScenePos `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
}

// Default values for ReconnectionPosUserCmd fields.
const (
	Default_ReconnectionPosUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_ReconnectionPosUserCmd_Param = CmdParam_RECONNECTION_POS_USER_CMD
)

func (x *ReconnectionPosUserCmd) Reset() {
	*x = ReconnectionPosUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectionPosUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectionPosUserCmd) ProtoMessage() {}

func (x *ReconnectionPosUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectionPosUserCmd.ProtoReflect.Descriptor instead.
func (*ReconnectionPosUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{34}
}

func (x *ReconnectionPosUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReconnectionPosUserCmd_Cmd
}

func (x *ReconnectionPosUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReconnectionPosUserCmd_Param
}

func (x *ReconnectionPosUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type GoToExitPosUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=48" json:"param,omitempty"`
	Mapid *uint32   `protobuf:"varint,3,opt,name=mapid" json:"mapid,omitempty"`
}

// Default values for GoToExitPosUserCmd fields.
const (
	Default_GoToExitPosUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_GoToExitPosUserCmd_Param = CmdParam_GOTO_EXIT_POS_USER_CMD
)

func (x *GoToExitPosUserCmd) Reset() {
	*x = GoToExitPosUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoToExitPosUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoToExitPosUserCmd) ProtoMessage() {}

func (x *GoToExitPosUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoToExitPosUserCmd.ProtoReflect.Descriptor instead.
func (*GoToExitPosUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{35}
}

func (x *GoToExitPosUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GoToExitPosUserCmd_Cmd
}

func (x *GoToExitPosUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GoToExitPosUserCmd_Param
}

func (x *GoToExitPosUserCmd) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return 0
}

type GoToRandomPosUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=49" json:"param,omitempty"`
	Mapid *uint32   `protobuf:"varint,3,opt,name=mapid" json:"mapid,omitempty"`
	Pos   *ScenePos `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
}

// Default values for GoToRandomPosUserCmd fields.
const (
	Default_GoToRandomPosUserCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_GoToRandomPosUserCmd_Param = CmdParam_GOTO_RANDOM_POS_USER_CMD
)

func (x *GoToRandomPosUserCmd) Reset() {
	*x = GoToRandomPosUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoToRandomPosUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoToRandomPosUserCmd) ProtoMessage() {}

func (x *GoToRandomPosUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoToRandomPosUserCmd.ProtoReflect.Descriptor instead.
func (*GoToRandomPosUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{36}
}

func (x *GoToRandomPosUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_GoToRandomPosUserCmd_Cmd
}

func (x *GoToRandomPosUserCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_GoToRandomPosUserCmd_Param
}

func (x *GoToRandomPosUserCmd) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return 0
}

func (x *GoToRandomPosUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

type UserRejectSettingNotifyServiceCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=50" json:"param,omitempty"`
}

// Default values for UserRejectSettingNotifyServiceCmd fields.
const (
	Default_UserRejectSettingNotifyServiceCmd_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_UserRejectSettingNotifyServiceCmd_Param = CmdParam_USER_REJECT_SETTING_NOTIFY_SERVICE
)

func (x *UserRejectSettingNotifyServiceCmd) Reset() {
	*x = UserRejectSettingNotifyServiceCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRejectSettingNotifyServiceCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRejectSettingNotifyServiceCmd) ProtoMessage() {}

func (x *UserRejectSettingNotifyServiceCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRejectSettingNotifyServiceCmd.ProtoReflect.Descriptor instead.
func (*UserRejectSettingNotifyServiceCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{37}
}

func (x *UserRejectSettingNotifyServiceCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserRejectSettingNotifyServiceCmd_Cmd
}

func (x *UserRejectSettingNotifyServiceCmd) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserRejectSettingNotifyServiceCmd_Param
}

type NpcWalkTraceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command  `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=5" json:"cmd,omitempty"`
	Param     *CmdParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CmdParam,def=51" json:"param,omitempty"`
	Npcid     *uint32   `protobuf:"varint,3,opt,name=npcid" json:"npcid,omitempty"`
	Traceinfo *string   `protobuf:"bytes,4,opt,name=traceinfo" json:"traceinfo,omitempty"`
	Status    *uint32   `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
}

// Default values for NpcWalkTraceInfo fields.
const (
	Default_NpcWalkTraceInfo_Cmd   = Command_SCENE_USER_PROTOCMD
	Default_NpcWalkTraceInfo_Param = CmdParam_NPC_WALK_TRACE_CMD
)

func (x *NpcWalkTraceInfo) Reset() {
	*x = NpcWalkTraceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpcWalkTraceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpcWalkTraceInfo) ProtoMessage() {}

func (x *NpcWalkTraceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpcWalkTraceInfo.ProtoReflect.Descriptor instead.
func (*NpcWalkTraceInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser_proto_rawDescGZIP(), []int{38}
}

func (x *NpcWalkTraceInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NpcWalkTraceInfo_Cmd
}

func (x *NpcWalkTraceInfo) GetParam() CmdParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NpcWalkTraceInfo_Param
}

func (x *NpcWalkTraceInfo) GetNpcid() uint32 {
	if x != nil && x.Npcid != nil {
		return *x.Npcid
	}
	return 0
}

func (x *NpcWalkTraceInfo) GetTraceinfo() string {
	if x != nil && x.Traceinfo != nil {
		return *x.Traceinfo
	}
	return ""
}

func (x *NpcWalkTraceInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

var File_SceneUser_proto protoreflect.FileDescriptor

var file_SceneUser_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x0d, 0x45, 0x41, 0x54, 0x54, 0x52, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x53, 0x76, 0x72, 0x12, 0x31, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x45, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x45, 0x41, 0x54, 0x54,
	0x52, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x45, 0x55, 0x53, 0x45, 0x52, 0x44, 0x41, 0x54,
	0x41, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x02, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x12, 0x55, 0x53, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53,
	0x59, 0x4e, 0x43, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x45, 0x55,
	0x53, 0x45, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12,
	0x2d, 0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0xc2,
	0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6d,
	0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x03, 0x32, 0x30, 0x30, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x0f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x64, 0x64, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x64,
	0x73, 0x74, 0x72, 0x22, 0x77, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x47, 0x4d, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x33, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa9, 0x01, 0x0a,
	0x16, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x17, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x34, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x45, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0x45, 0x50, 0x52,
	0x4f, 0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x18, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x70, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x61, 0x63, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x19, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x03, 0x32, 0x30, 0x30,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x4d,
	0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d,
	0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x67, 0x22, 0xaf, 0x01, 0x0a, 0x13,
	0x4d, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x11, 0x52, 0x45, 0x51, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x52, 0x45, 0x54, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x9d, 0x01,
	0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x11, 0x53, 0x59, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd6, 0x01,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x66, 0x61, 0x64,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x66,
	0x61, 0x64, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x22, 0xc7, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x14, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x67,
	0x22, 0xf8, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d,
	0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6d, 0x61,
	0x70, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6d, 0x61, 0x70, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x5b, 0x0a, 0x0a, 0x46,
	0x75, 0x6e, 0x4e, 0x70, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x65, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x46, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x50, 0x43, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d,
	0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x46, 0x75, 0x6e,
	0x4e, 0x70, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a,
	0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb1, 0x01,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x5d, 0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x61, 0x6d, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x30, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x93, 0x01, 0x0a, 0x0b, 0x48, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x34, 0x0a, 0x0c, 0x68, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x48, 0x69, 0x74,
	0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0c, 0x68, 0x69, 0x74, 0x65, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x13, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0xda, 0x02, 0x0a, 0x15,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f,
	0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x44, 0x12, 0x17, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x30, 0x52, 0x05, 0x70, 0x65, 0x74, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x01, 0x6a, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6b,
	0x22, 0xc7, 0x01, 0x0a, 0x19, 0x54, 0x65, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x1d, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x42, 0x52,
	0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x01, 0x69, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x12, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x14, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x74, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74,
	0x69, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x16, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x68, 0x61, 0x6e,
	0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x1a, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x4b,
	0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x44, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x18, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x61, 0x74, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x44, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x74, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x0f, 0x4d, 0x41, 0x50, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x15, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x0f, 0x52, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd3,
	0x01, 0x0a, 0x0b, 0x47, 0x6f, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x0d, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x69, 0x73, 0x67, 0x6f, 0x6d, 0x61, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x69, 0x73, 0x67,
	0x6f, 0x6d, 0x61, 0x70, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x19, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x6f, 0x54, 0x6f, 0x45, 0x78,
	0x69, 0x74, 0x50, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x16, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x69, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x47, 0x6f, 0x54, 0x6f, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x33, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x18, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x5f, 0x50, 0x4f,
	0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x21, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x33,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53,
	0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xcc, 0x01, 0x0a,
	0x10, 0x4e, 0x70, 0x63, 0x57, 0x61, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x13, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6d, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x4e, 0x50, 0x43, 0x5f, 0x57, 0x41, 0x4c, 0x4b, 0x5f, 0x54,
	0x52, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6e, 0x70, 0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xd1, 0x06, 0x0a, 0x08,
	0x43, 0x6d, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x47, 0x4d,
	0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x53, 0x45,
	0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x4d,
	0x41, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x0f, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x45, 0x54, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x4d, 0x44, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x59, 0x53, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x11, 0x12, 0x19, 0x0a,
	0x15, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x12, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44,
	0x10, 0x16, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x17, 0x12, 0x1e, 0x0a,
	0x1a, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x50, 0x43, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x19, 0x12, 0x20, 0x0a,
	0x1c, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x1a, 0x12,
	0x1c, 0x0a, 0x18, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41,
	0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x1b, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x4d, 0x44, 0x10, 0x1c, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x53,
	0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x1d, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x53,
	0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x1e, 0x12,
	0x1c, 0x0a, 0x18, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49,
	0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x1f, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x4e, 0x45, 0x57, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10,
	0x22, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x23, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x50, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x26, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10,
	0x27, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x4d, 0x44, 0x10, 0x29, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x2a, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x2b, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x2d, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x58, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44,
	0x10, 0x2e, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c,
	0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x4d, 0x44, 0x10, 0x2f, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x45, 0x58,
	0x49, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10,
	0x30, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x4f, 0x54, 0x4f, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d,
	0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x31, 0x12,
	0x26, 0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53,
	0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x32, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x50, 0x43, 0x5f, 0x57,
	0x41, 0x4c, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x33, 0x2a,
	0x6d, 0x0a, 0x0d, 0x45, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x55, 0x53, 0x45, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x55, 0x53, 0x45, 0x52,
	0x53, 0x59, 0x4e, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x55, 0x53, 0x45, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x55, 0x53, 0x45, 0x52,
	0x53, 0x59, 0x4e, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x04, 0x2a, 0x4d,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x02, 0x2a, 0xf8, 0x02,
	0x0a, 0x0a, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x13,
	0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e,
	0x0a, 0x11, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41,
	0x49, 0x4a, 0x49, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x49, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x4c,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41,
	0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x53, 0x50, 0x10, 0x08, 0x12, 0x17, 0x0a,
	0x13, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x45,
	0x41, 0x54, 0x53, 0x50, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x0b, 0x12, 0x18,
	0x0a, 0x14, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x46, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x10, 0x0c,
}

var (
	file_SceneUser_proto_rawDescOnce sync.Once
	file_SceneUser_proto_rawDescData = file_SceneUser_proto_rawDesc
)

func file_SceneUser_proto_rawDescGZIP() []byte {
	file_SceneUser_proto_rawDescOnce.Do(func() {
		file_SceneUser_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneUser_proto_rawDescData)
	})
	return file_SceneUser_proto_rawDescData
}

var file_SceneUser_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_SceneUser_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_SceneUser_proto_goTypes = []interface{}{
	(CmdParam)(0),                             // 0: Cmd.CmdParam
	(EUserSyncType)(0),                        // 1: Cmd.EUserSyncType
	(MessageType)(0),                          // 2: Cmd.MessageType
	(DamageType)(0),                           // 3: Cmd.DamageType
	(*UserAttr)(nil),                          // 4: Cmd.UserAttr
	(*UserAttrSvr)(nil),                       // 5: Cmd.UserAttrSvr
	(*UserData)(nil),                          // 6: Cmd.UserData
	(*UserSyncCmd)(nil),                       // 7: Cmd.UserSyncCmd
	(*UserMessageCmd)(nil),                    // 8: Cmd.UserMessageCmd
	(*UserGMCommand)(nil),                     // 9: Cmd.UserGMCommand
	(*UserProfessionExchange)(nil),            // 10: Cmd.UserProfessionExchange
	(*UserTest)(nil),                          // 11: Cmd.UserTest
	(*UserFaceCmd)(nil),                       // 12: Cmd.UserFaceCmd
	(*MainUserData)(nil),                      // 13: Cmd.MainUserData
	(*MainUserDataUserCmd)(nil),               // 14: Cmd.MainUserDataUserCmd
	(*ReqMoveUserCmd)(nil),                    // 15: Cmd.ReqMoveUserCmd
	(*RetMoveUserCmd)(nil),                    // 16: Cmd.RetMoveUserCmd
	(*SynTimeUserCmd)(nil),                    // 17: Cmd.SynTimeUserCmd
	(*DeleteEntryUserCmd)(nil),                // 18: Cmd.DeleteEntryUserCmd
	(*ChangeBodyUserCmd)(nil),                 // 19: Cmd.ChangeBodyUserCmd
	(*ChangeSceneUserCmd)(nil),                // 20: Cmd.ChangeSceneUserCmd
	(*FunNpcData)(nil),                        // 21: Cmd.FunNpcData
	(*FuntionNpcListUserCmd)(nil),             // 22: Cmd.FuntionNpcListUserCmd
	(*GUID)(nil),                              // 23: Cmd.GUID
	(*DeleteStaticEntryUserCmd)(nil),          // 24: Cmd.DeleteStaticEntryUserCmd
	(*ShareDamTarget)(nil),                    // 25: Cmd.ShareDamTarget
	(*HitedTarget)(nil),                       // 26: Cmd.HitedTarget
	(*PhaseData)(nil),                         // 27: Cmd.PhaseData
	(*SkillBroadcastUserCmd)(nil),             // 28: Cmd.SkillBroadcastUserCmd
	(*TestUint64)(nil),                        // 29: Cmd.TestUint64
	(*TestSkillBroadcastUserCmd)(nil),         // 30: Cmd.TestSkillBroadcastUserCmd
	(*UseSkillUserCmd)(nil),                   // 31: Cmd.UseSkillUserCmd
	(*ChantSkillUserCmd)(nil),                 // 32: Cmd.ChantSkillUserCmd
	(*BreakChantSkillUserCmd)(nil),            // 33: Cmd.BreakChantSkillUserCmd
	(*BroadcastSkillUserCmd)(nil),             // 34: Cmd.BroadcastSkillUserCmd
	(*MapObjectData)(nil),                     // 35: Cmd.MapObjectData
	(*ReliveUserCmd)(nil),                     // 36: Cmd.ReliveUserCmd
	(*GoToUserCmd)(nil),                       // 37: Cmd.GoToUserCmd
	(*ReconnectionPosUserCmd)(nil),            // 38: Cmd.ReconnectionPosUserCmd
	(*GoToExitPosUserCmd)(nil),                // 39: Cmd.GoToExitPosUserCmd
	(*GoToRandomPosUserCmd)(nil),              // 40: Cmd.GoToRandomPosUserCmd
	(*UserRejectSettingNotifyServiceCmd)(nil), // 41: Cmd.UserRejectSettingNotifyServiceCmd
	(*NpcWalkTraceInfo)(nil),                  // 42: Cmd.NpcWalkTraceInfo
	(EAttrType)(0),                            // 43: Cmd.EAttrType
	(EUserDataType)(0),                        // 44: Cmd.EUserDataType
	(Command)(0),                              // 45: Cmd.Command
	(EProfession)(0),                          // 46: Cmd.EProfession
	(*ScenePos)(nil),                          // 47: Cmd.ScenePos
}
var file_SceneUser_proto_depIdxs = []int32{
	43, // 0: Cmd.UserAttr.type:type_name -> Cmd.EAttrType
	43, // 1: Cmd.UserAttrSvr.type:type_name -> Cmd.EAttrType
	44, // 2: Cmd.UserData.type:type_name -> Cmd.EUserDataType
	45, // 3: Cmd.UserSyncCmd.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.UserSyncCmd.param:type_name -> Cmd.CmdParam
	1,  // 5: Cmd.UserSyncCmd.type:type_name -> Cmd.EUserSyncType
	4,  // 6: Cmd.UserSyncCmd.attrs:type_name -> Cmd.UserAttr
	6,  // 7: Cmd.UserSyncCmd.datas:type_name -> Cmd.UserData
	4,  // 8: Cmd.UserSyncCmd.pointattrs:type_name -> Cmd.UserAttr
	45, // 9: Cmd.UserMessageCmd.cmd:type_name -> Cmd.Command
	2,  // 10: Cmd.UserMessageCmd.type:type_name -> Cmd.MessageType
	45, // 11: Cmd.UserGMCommand.cmd:type_name -> Cmd.Command
	45, // 12: Cmd.UserProfessionExchange.cmd:type_name -> Cmd.Command
	46, // 13: Cmd.UserProfessionExchange.profession:type_name -> Cmd.EProfession
	45, // 14: Cmd.UserTest.cmd:type_name -> Cmd.Command
	4,  // 15: Cmd.UserTest.attrs:type_name -> Cmd.UserAttr
	45, // 16: Cmd.UserFaceCmd.cmd:type_name -> Cmd.Command
	45, // 17: Cmd.MainUserDataUserCmd.cmd:type_name -> Cmd.Command
	0,  // 18: Cmd.MainUserDataUserCmd.param:type_name -> Cmd.CmdParam
	13, // 19: Cmd.MainUserDataUserCmd.data:type_name -> Cmd.MainUserData
	45, // 20: Cmd.ReqMoveUserCmd.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.ReqMoveUserCmd.param:type_name -> Cmd.CmdParam
	47, // 22: Cmd.ReqMoveUserCmd.target:type_name -> Cmd.ScenePos
	45, // 23: Cmd.RetMoveUserCmd.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.RetMoveUserCmd.param:type_name -> Cmd.CmdParam
	47, // 25: Cmd.RetMoveUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 26: Cmd.SynTimeUserCmd.cmd:type_name -> Cmd.Command
	0,  // 27: Cmd.SynTimeUserCmd.param:type_name -> Cmd.CmdParam
	45, // 28: Cmd.DeleteEntryUserCmd.cmd:type_name -> Cmd.Command
	0,  // 29: Cmd.DeleteEntryUserCmd.param:type_name -> Cmd.CmdParam
	45, // 30: Cmd.ChangeBodyUserCmd.cmd:type_name -> Cmd.Command
	0,  // 31: Cmd.ChangeBodyUserCmd.param:type_name -> Cmd.CmdParam
	45, // 32: Cmd.ChangeSceneUserCmd.cmd:type_name -> Cmd.Command
	0,  // 33: Cmd.ChangeSceneUserCmd.param:type_name -> Cmd.CmdParam
	47, // 34: Cmd.ChangeSceneUserCmd.pos:type_name -> Cmd.ScenePos
	47, // 35: Cmd.FunNpcData.pos:type_name -> Cmd.ScenePos
	45, // 36: Cmd.FuntionNpcListUserCmd.cmd:type_name -> Cmd.Command
	0,  // 37: Cmd.FuntionNpcListUserCmd.param:type_name -> Cmd.CmdParam
	21, // 38: Cmd.FuntionNpcListUserCmd.list:type_name -> Cmd.FunNpcData
	45, // 39: Cmd.DeleteStaticEntryUserCmd.cmd:type_name -> Cmd.Command
	0,  // 40: Cmd.DeleteStaticEntryUserCmd.param:type_name -> Cmd.CmdParam
	23, // 41: Cmd.DeleteStaticEntryUserCmd.list:type_name -> Cmd.GUID
	25, // 42: Cmd.HitedTarget.shareTargets:type_name -> Cmd.ShareDamTarget
	47, // 43: Cmd.PhaseData.pos:type_name -> Cmd.ScenePos
	26, // 44: Cmd.PhaseData.hitedTargets:type_name -> Cmd.HitedTarget
	45, // 45: Cmd.SkillBroadcastUserCmd.cmd:type_name -> Cmd.Command
	0,  // 46: Cmd.SkillBroadcastUserCmd.param:type_name -> Cmd.CmdParam
	27, // 47: Cmd.SkillBroadcastUserCmd.data:type_name -> Cmd.PhaseData
	45, // 48: Cmd.TestSkillBroadcastUserCmd.cmd:type_name -> Cmd.Command
	0,  // 49: Cmd.TestSkillBroadcastUserCmd.param:type_name -> Cmd.CmdParam
	29, // 50: Cmd.TestSkillBroadcastUserCmd.list:type_name -> Cmd.TestUint64
	45, // 51: Cmd.UseSkillUserCmd.cmd:type_name -> Cmd.Command
	0,  // 52: Cmd.UseSkillUserCmd.param:type_name -> Cmd.CmdParam
	47, // 53: Cmd.UseSkillUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 54: Cmd.ChantSkillUserCmd.cmd:type_name -> Cmd.Command
	0,  // 55: Cmd.ChantSkillUserCmd.param:type_name -> Cmd.CmdParam
	47, // 56: Cmd.ChantSkillUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 57: Cmd.BreakChantSkillUserCmd.cmd:type_name -> Cmd.Command
	0,  // 58: Cmd.BreakChantSkillUserCmd.param:type_name -> Cmd.CmdParam
	45, // 59: Cmd.BroadcastSkillUserCmd.cmd:type_name -> Cmd.Command
	0,  // 60: Cmd.BroadcastSkillUserCmd.param:type_name -> Cmd.CmdParam
	47, // 61: Cmd.BroadcastSkillUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 62: Cmd.MapObjectData.cmd:type_name -> Cmd.Command
	0,  // 63: Cmd.MapObjectData.param:type_name -> Cmd.CmdParam
	4,  // 64: Cmd.MapObjectData.attrs:type_name -> Cmd.UserAttr
	45, // 65: Cmd.ReliveUserCmd.cmd:type_name -> Cmd.Command
	0,  // 66: Cmd.ReliveUserCmd.param:type_name -> Cmd.CmdParam
	45, // 67: Cmd.GoToUserCmd.cmd:type_name -> Cmd.Command
	0,  // 68: Cmd.GoToUserCmd.param:type_name -> Cmd.CmdParam
	47, // 69: Cmd.GoToUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 70: Cmd.ReconnectionPosUserCmd.cmd:type_name -> Cmd.Command
	0,  // 71: Cmd.ReconnectionPosUserCmd.param:type_name -> Cmd.CmdParam
	47, // 72: Cmd.ReconnectionPosUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 73: Cmd.GoToExitPosUserCmd.cmd:type_name -> Cmd.Command
	0,  // 74: Cmd.GoToExitPosUserCmd.param:type_name -> Cmd.CmdParam
	45, // 75: Cmd.GoToRandomPosUserCmd.cmd:type_name -> Cmd.Command
	0,  // 76: Cmd.GoToRandomPosUserCmd.param:type_name -> Cmd.CmdParam
	47, // 77: Cmd.GoToRandomPosUserCmd.pos:type_name -> Cmd.ScenePos
	45, // 78: Cmd.UserRejectSettingNotifyServiceCmd.cmd:type_name -> Cmd.Command
	0,  // 79: Cmd.UserRejectSettingNotifyServiceCmd.param:type_name -> Cmd.CmdParam
	45, // 80: Cmd.NpcWalkTraceInfo.cmd:type_name -> Cmd.Command
	0,  // 81: Cmd.NpcWalkTraceInfo.param:type_name -> Cmd.CmdParam
	82, // [82:82] is the sub-list for method output_type
	82, // [82:82] is the sub-list for method input_type
	82, // [82:82] is the sub-list for extension type_name
	82, // [82:82] is the sub-list for extension extendee
	0,  // [0:82] is the sub-list for field type_name
}

func init() { file_SceneUser_proto_init() }
func file_SceneUser_proto_init() {
	if File_SceneUser_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneUser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttrSvr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSyncCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessageCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGMCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfessionExchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFaceCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainUserDataUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMoveUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetMoveUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynTimeUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBodyUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSceneUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunNpcData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuntionNpcListUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStaticEntryUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDamTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitedTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhaseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillBroadcastUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSkillBroadcastUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSkillUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChantSkillUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakChantSkillUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastSkillUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapObjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliveUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoToUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectionPosUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoToExitPosUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoToRandomPosUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRejectSettingNotifyServiceCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpcWalkTraceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneUser_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneUser_proto_goTypes,
		DependencyIndexes: file_SceneUser_proto_depIdxs,
		EnumInfos:         file_SceneUser_proto_enumTypes,
		MessageInfos:      file_SceneUser_proto_msgTypes,
	}.Build()
	File_SceneUser_proto = out.File
	file_SceneUser_proto_rawDesc = nil
	file_SceneUser_proto_goTypes = nil
	file_SceneUser_proto_depIdxs = nil
}
