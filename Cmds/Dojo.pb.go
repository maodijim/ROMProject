// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: Dojo.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DojoParam int32

const (
	DojoParam_EDOJOPARAM_DOJO_PRIVATE_INFO DojoParam = 1
	DojoParam_EDOJOPARAM_DOJO_PUBLIC_INFO  DojoParam = 2
	DojoParam_EDOJOPARAM_INVITE            DojoParam = 3
	DojoParam_EDOJOPARAM_REPLY             DojoParam = 4
	DojoParam_EDOJOPARAM_ENTERDOJO         DojoParam = 5
	DojoParam_EDOJOPARAM_ADD_MSG           DojoParam = 6
	DojoParam_EDOJOPARAM_PANEL_OPER        DojoParam = 7
	DojoParam_EDOJOPARAM_SPONSOR           DojoParam = 9
	DojoParam_EDOJOPARAM_QUERYSTATE        DojoParam = 10
	DojoParam_EDOJOPARAM_REWARD            DojoParam = 11
)

// Enum value maps for DojoParam.
var (
	DojoParam_name = map[int32]string{
		1:  "EDOJOPARAM_DOJO_PRIVATE_INFO",
		2:  "EDOJOPARAM_DOJO_PUBLIC_INFO",
		3:  "EDOJOPARAM_INVITE",
		4:  "EDOJOPARAM_REPLY",
		5:  "EDOJOPARAM_ENTERDOJO",
		6:  "EDOJOPARAM_ADD_MSG",
		7:  "EDOJOPARAM_PANEL_OPER",
		9:  "EDOJOPARAM_SPONSOR",
		10: "EDOJOPARAM_QUERYSTATE",
		11: "EDOJOPARAM_REWARD",
	}
	DojoParam_value = map[string]int32{
		"EDOJOPARAM_DOJO_PRIVATE_INFO": 1,
		"EDOJOPARAM_DOJO_PUBLIC_INFO":  2,
		"EDOJOPARAM_INVITE":            3,
		"EDOJOPARAM_REPLY":             4,
		"EDOJOPARAM_ENTERDOJO":         5,
		"EDOJOPARAM_ADD_MSG":           6,
		"EDOJOPARAM_PANEL_OPER":        7,
		"EDOJOPARAM_SPONSOR":           9,
		"EDOJOPARAM_QUERYSTATE":        10,
		"EDOJOPARAM_REWARD":            11,
	}
)

func (x DojoParam) Enum() *DojoParam {
	p := new(DojoParam)
	*p = x
	return p
}

func (x DojoParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DojoParam) Descriptor() protoreflect.EnumDescriptor {
	return file_Dojo_proto_enumTypes[0].Descriptor()
}

func (DojoParam) Type() protoreflect.EnumType {
	return &file_Dojo_proto_enumTypes[0]
}

func (x DojoParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DojoParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DojoParam(num)
	return nil
}

// Deprecated: Use DojoParam.Descriptor instead.
func (DojoParam) EnumDescriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{0}
}

type EDojoReply int32

const (
	EDojoReply_EDOJOREPLY_AGREE    EDojoReply = 1
	EDojoReply_EDOJOREPLY_DISAGREE EDojoReply = 2
)

// Enum value maps for EDojoReply.
var (
	EDojoReply_name = map[int32]string{
		1: "EDOJOREPLY_AGREE",
		2: "EDOJOREPLY_DISAGREE",
	}
	EDojoReply_value = map[string]int32{
		"EDOJOREPLY_AGREE":    1,
		"EDOJOREPLY_DISAGREE": 2,
	}
)

func (x EDojoReply) Enum() *EDojoReply {
	p := new(EDojoReply)
	*p = x
	return p
}

func (x EDojoReply) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDojoReply) Descriptor() protoreflect.EnumDescriptor {
	return file_Dojo_proto_enumTypes[1].Descriptor()
}

func (EDojoReply) Type() protoreflect.EnumType {
	return &file_Dojo_proto_enumTypes[1]
}

func (x EDojoReply) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EDojoReply) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EDojoReply(num)
	return nil
}

// Deprecated: Use EDojoReply.Descriptor instead.
func (EDojoReply) EnumDescriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{1}
}

type DojoState int32

const (
	DojoState_DOJOSTATE_NONE      DojoState = 0
	DojoState_DOJOSTATE_SPONSORED DojoState = 1
	DojoState_DOJOSTATE_OPENED    DojoState = 2
	DojoState_DOJOSTATE_ERROR     DojoState = 3
)

// Enum value maps for DojoState.
var (
	DojoState_name = map[int32]string{
		0: "DOJOSTATE_NONE",
		1: "DOJOSTATE_SPONSORED",
		2: "DOJOSTATE_OPENED",
		3: "DOJOSTATE_ERROR",
	}
	DojoState_value = map[string]int32{
		"DOJOSTATE_NONE":      0,
		"DOJOSTATE_SPONSORED": 1,
		"DOJOSTATE_OPENED":    2,
		"DOJOSTATE_ERROR":     3,
	}
)

func (x DojoState) Enum() *DojoState {
	p := new(DojoState)
	*p = x
	return p
}

func (x DojoState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DojoState) Descriptor() protoreflect.EnumDescriptor {
	return file_Dojo_proto_enumTypes[2].Descriptor()
}

func (DojoState) Type() protoreflect.EnumType {
	return &file_Dojo_proto_enumTypes[2]
}

func (x DojoState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DojoState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DojoState(num)
	return nil
}

// Deprecated: Use DojoState.Descriptor instead.
func (DojoState) EnumDescriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{2}
}

type EPassType int32

const (
	EPassType_EPASSTYPE_FIRST  EPassType = 1
	EPassType_EPASSTYPE_HELP   EPassType = 2
	EPassType_EPASSTYPE_NORMAL EPassType = 3
)

// Enum value maps for EPassType.
var (
	EPassType_name = map[int32]string{
		1: "EPASSTYPE_FIRST",
		2: "EPASSTYPE_HELP",
		3: "EPASSTYPE_NORMAL",
	}
	EPassType_value = map[string]int32{
		"EPASSTYPE_FIRST":  1,
		"EPASSTYPE_HELP":   2,
		"EPASSTYPE_NORMAL": 3,
	}
)

func (x EPassType) Enum() *EPassType {
	p := new(EPassType)
	*p = x
	return p
}

func (x EPassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPassType) Descriptor() protoreflect.EnumDescriptor {
	return file_Dojo_proto_enumTypes[3].Descriptor()
}

func (EPassType) Type() protoreflect.EnumType {
	return &file_Dojo_proto_enumTypes[3]
}

func (x EPassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPassType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPassType(num)
	return nil
}

// Deprecated: Use EPassType.Descriptor instead.
func (EPassType) EnumDescriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{3}
}

type DojoPrivateInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param       *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=1" json:"param,omitempty"`
	Groupid     *uint32    `protobuf:"varint,3,opt,name=groupid" json:"groupid,omitempty"`
	CompletedId []uint32   `protobuf:"varint,4,rep,name=completed_id,json=completedId" json:"completed_id,omitempty"`
}

// Default values for DojoPrivateInfoCmd fields.
const (
	Default_DojoPrivateInfoCmd_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoPrivateInfoCmd_Param = DojoParam_EDOJOPARAM_DOJO_PRIVATE_INFO
)

func (x *DojoPrivateInfoCmd) Reset() {
	*x = DojoPrivateInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoPrivateInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoPrivateInfoCmd) ProtoMessage() {}

func (x *DojoPrivateInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoPrivateInfoCmd.ProtoReflect.Descriptor instead.
func (*DojoPrivateInfoCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{0}
}

func (x *DojoPrivateInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoPrivateInfoCmd_Cmd
}

func (x *DojoPrivateInfoCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoPrivateInfoCmd_Param
}

func (x *DojoPrivateInfoCmd) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *DojoPrivateInfoCmd) GetCompletedId() []uint32 {
	if x != nil {
		return x.CompletedId
	}
	return nil
}

type DojoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid      *uint64 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Conent      *string `protobuf:"bytes,3,opt,name=conent" json:"conent,omitempty"`
	Iscompleted *bool   `protobuf:"varint,4,opt,name=iscompleted" json:"iscompleted,omitempty"`
}

func (x *DojoMsg) Reset() {
	*x = DojoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoMsg) ProtoMessage() {}

func (x *DojoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoMsg.ProtoReflect.Descriptor instead.
func (*DojoMsg) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{1}
}

func (x *DojoMsg) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *DojoMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DojoMsg) GetConent() string {
	if x != nil && x.Conent != nil {
		return *x.Conent
	}
	return ""
}

func (x *DojoMsg) GetIscompleted() bool {
	if x != nil && x.Iscompleted != nil {
		return *x.Iscompleted
	}
	return false
}

type DojoMsgBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs   []*DojoMsg `protobuf:"bytes,1,rep,name=msgs" json:"msgs,omitempty"`
	Dojoid *uint32    `protobuf:"varint,2,opt,name=dojoid" json:"dojoid,omitempty"`
}

func (x *DojoMsgBlob) Reset() {
	*x = DojoMsgBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoMsgBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoMsgBlob) ProtoMessage() {}

func (x *DojoMsgBlob) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoMsgBlob.ProtoReflect.Descriptor instead.
func (*DojoMsgBlob) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{2}
}

func (x *DojoMsgBlob) GetMsgs() []*DojoMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *DojoMsgBlob) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

type DojoPublicInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param   *DojoParam   `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=2" json:"param,omitempty"`
	Dojoid  *uint32      `protobuf:"varint,3,opt,name=dojoid" json:"dojoid,omitempty"`
	Msgblob *DojoMsgBlob `protobuf:"bytes,4,opt,name=msgblob" json:"msgblob,omitempty"`
}

// Default values for DojoPublicInfoCmd fields.
const (
	Default_DojoPublicInfoCmd_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoPublicInfoCmd_Param = DojoParam_EDOJOPARAM_DOJO_PUBLIC_INFO
)

func (x *DojoPublicInfoCmd) Reset() {
	*x = DojoPublicInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoPublicInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoPublicInfoCmd) ProtoMessage() {}

func (x *DojoPublicInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoPublicInfoCmd.ProtoReflect.Descriptor instead.
func (*DojoPublicInfoCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{3}
}

func (x *DojoPublicInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoPublicInfoCmd_Cmd
}

func (x *DojoPublicInfoCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoPublicInfoCmd_Param
}

func (x *DojoPublicInfoCmd) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoPublicInfoCmd) GetMsgblob() *DojoMsgBlob {
	if x != nil {
		return x.Msgblob
	}
	return nil
}

type DojoInviteCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param       *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=3" json:"param,omitempty"`
	Dojoid      *uint32    `protobuf:"varint,3,opt,name=dojoid" json:"dojoid,omitempty"`
	Sponsorid   *uint64    `protobuf:"varint,4,opt,name=sponsorid" json:"sponsorid,omitempty"`
	Sponsorname *string    `protobuf:"bytes,5,opt,name=sponsorname" json:"sponsorname,omitempty"`
}

// Default values for DojoInviteCmd fields.
const (
	Default_DojoInviteCmd_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoInviteCmd_Param = DojoParam_EDOJOPARAM_INVITE
)

func (x *DojoInviteCmd) Reset() {
	*x = DojoInviteCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoInviteCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoInviteCmd) ProtoMessage() {}

func (x *DojoInviteCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoInviteCmd.ProtoReflect.Descriptor instead.
func (*DojoInviteCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{4}
}

func (x *DojoInviteCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoInviteCmd_Cmd
}

func (x *DojoInviteCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoInviteCmd_Param
}

func (x *DojoInviteCmd) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoInviteCmd) GetSponsorid() uint64 {
	if x != nil && x.Sponsorid != nil {
		return *x.Sponsorid
	}
	return 0
}

func (x *DojoInviteCmd) GetSponsorname() string {
	if x != nil && x.Sponsorname != nil {
		return *x.Sponsorname
	}
	return ""
}

type DojoReplyCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param  *DojoParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=4" json:"param,omitempty"`
	EReply *EDojoReply `protobuf:"varint,3,opt,name=eReply,enum=Cmd.EDojoReply,def=2" json:"eReply,omitempty"`
	Userid *uint64     `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for DojoReplyCmd fields.
const (
	Default_DojoReplyCmd_Cmd    = Command_DOJO_PROTOCMD
	Default_DojoReplyCmd_Param  = DojoParam_EDOJOPARAM_REPLY
	Default_DojoReplyCmd_EReply = EDojoReply_EDOJOREPLY_DISAGREE
	Default_DojoReplyCmd_Userid = uint64(0)
)

func (x *DojoReplyCmd) Reset() {
	*x = DojoReplyCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoReplyCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoReplyCmd) ProtoMessage() {}

func (x *DojoReplyCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoReplyCmd.ProtoReflect.Descriptor instead.
func (*DojoReplyCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{5}
}

func (x *DojoReplyCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoReplyCmd_Cmd
}

func (x *DojoReplyCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoReplyCmd_Param
}

func (x *DojoReplyCmd) GetEReply() EDojoReply {
	if x != nil && x.EReply != nil {
		return *x.EReply
	}
	return Default_DojoReplyCmd_EReply
}

func (x *DojoReplyCmd) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_DojoReplyCmd_Userid
}

type EnterDojo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param  *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=5" json:"param,omitempty"`
	Dojoid *uint32    `protobuf:"varint,3,opt,name=dojoid,def=0" json:"dojoid,omitempty"`
	Userid *uint64    `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
	Zoneid *uint32    `protobuf:"varint,5,opt,name=zoneid,def=0" json:"zoneid,omitempty"`
	Time   *uint32    `protobuf:"varint,6,opt,name=time,def=0" json:"time,omitempty"`
	Sign   *string    `protobuf:"bytes,7,opt,name=sign" json:"sign,omitempty"`
}

// Default values for EnterDojo fields.
const (
	Default_EnterDojo_Cmd    = Command_DOJO_PROTOCMD
	Default_EnterDojo_Param  = DojoParam_EDOJOPARAM_ENTERDOJO
	Default_EnterDojo_Dojoid = uint32(0)
	Default_EnterDojo_Userid = uint64(0)
	Default_EnterDojo_Zoneid = uint32(0)
	Default_EnterDojo_Time   = uint32(0)
)

func (x *EnterDojo) Reset() {
	*x = EnterDojo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterDojo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterDojo) ProtoMessage() {}

func (x *EnterDojo) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterDojo.ProtoReflect.Descriptor instead.
func (*EnterDojo) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{6}
}

func (x *EnterDojo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EnterDojo_Cmd
}

func (x *EnterDojo) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EnterDojo_Param
}

func (x *EnterDojo) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return Default_EnterDojo_Dojoid
}

func (x *EnterDojo) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_EnterDojo_Userid
}

func (x *EnterDojo) GetZoneid() uint32 {
	if x != nil && x.Zoneid != nil {
		return *x.Zoneid
	}
	return Default_EnterDojo_Zoneid
}

func (x *EnterDojo) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_EnterDojo_Time
}

func (x *EnterDojo) GetSign() string {
	if x != nil && x.Sign != nil {
		return *x.Sign
	}
	return ""
}

type DojoAddMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param   *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=6" json:"param,omitempty"`
	Dojoid  *uint32    `protobuf:"varint,3,opt,name=dojoid" json:"dojoid,omitempty"`
	Dojomsg *DojoMsg   `protobuf:"bytes,4,opt,name=dojomsg" json:"dojomsg,omitempty"`
}

// Default values for DojoAddMsg fields.
const (
	Default_DojoAddMsg_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoAddMsg_Param = DojoParam_EDOJOPARAM_ADD_MSG
)

func (x *DojoAddMsg) Reset() {
	*x = DojoAddMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoAddMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoAddMsg) ProtoMessage() {}

func (x *DojoAddMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoAddMsg.ProtoReflect.Descriptor instead.
func (*DojoAddMsg) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{7}
}

func (x *DojoAddMsg) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoAddMsg_Cmd
}

func (x *DojoAddMsg) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoAddMsg_Param
}

func (x *DojoAddMsg) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoAddMsg) GetDojomsg() *DojoMsg {
	if x != nil {
		return x.Dojomsg
	}
	return nil
}

type DojoPanelOper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=7" json:"param,omitempty"`
}

// Default values for DojoPanelOper fields.
const (
	Default_DojoPanelOper_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoPanelOper_Param = DojoParam_EDOJOPARAM_PANEL_OPER
)

func (x *DojoPanelOper) Reset() {
	*x = DojoPanelOper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoPanelOper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoPanelOper) ProtoMessage() {}

func (x *DojoPanelOper) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoPanelOper.ProtoReflect.Descriptor instead.
func (*DojoPanelOper) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{8}
}

func (x *DojoPanelOper) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoPanelOper_Cmd
}

func (x *DojoPanelOper) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoPanelOper_Param
}

type DojoSponsorCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param       *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=9" json:"param,omitempty"`
	Dojoid      *uint32    `protobuf:"varint,3,opt,name=dojoid" json:"dojoid,omitempty"`
	IsCancel    *bool      `protobuf:"varint,4,opt,name=is_cancel,json=isCancel,def=0" json:"is_cancel,omitempty"`
	Sponsorid   *uint64    `protobuf:"varint,5,opt,name=sponsorid" json:"sponsorid,omitempty"`
	Sponsorname *string    `protobuf:"bytes,6,opt,name=sponsorname" json:"sponsorname,omitempty"`
	Ret         *bool      `protobuf:"varint,7,opt,name=ret" json:"ret,omitempty"`
}

// Default values for DojoSponsorCmd fields.
const (
	Default_DojoSponsorCmd_Cmd      = Command_DOJO_PROTOCMD
	Default_DojoSponsorCmd_Param    = DojoParam_EDOJOPARAM_SPONSOR
	Default_DojoSponsorCmd_IsCancel = bool(false)
)

func (x *DojoSponsorCmd) Reset() {
	*x = DojoSponsorCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoSponsorCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoSponsorCmd) ProtoMessage() {}

func (x *DojoSponsorCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoSponsorCmd.ProtoReflect.Descriptor instead.
func (*DojoSponsorCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{9}
}

func (x *DojoSponsorCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoSponsorCmd_Cmd
}

func (x *DojoSponsorCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoSponsorCmd_Param
}

func (x *DojoSponsorCmd) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoSponsorCmd) GetIsCancel() bool {
	if x != nil && x.IsCancel != nil {
		return *x.IsCancel
	}
	return Default_DojoSponsorCmd_IsCancel
}

func (x *DojoSponsorCmd) GetSponsorid() uint64 {
	if x != nil && x.Sponsorid != nil {
		return *x.Sponsorid
	}
	return 0
}

func (x *DojoSponsorCmd) GetSponsorname() string {
	if x != nil && x.Sponsorname != nil {
		return *x.Sponsorname
	}
	return ""
}

func (x *DojoSponsorCmd) GetRet() bool {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return false
}

type DojoQueryStateCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command   `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param       *DojoParam `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=10" json:"param,omitempty"`
	State       *DojoState `protobuf:"varint,3,opt,name=state,enum=Cmd.DojoState" json:"state,omitempty"`
	Dojoid      *uint32    `protobuf:"varint,4,opt,name=dojoid" json:"dojoid,omitempty"`
	Sponsorid   *uint64    `protobuf:"varint,5,opt,name=sponsorid" json:"sponsorid,omitempty"`
	Sponsorname *string    `protobuf:"bytes,6,opt,name=sponsorname" json:"sponsorname,omitempty"`
	Ret         *bool      `protobuf:"varint,7,opt,name=ret" json:"ret,omitempty"`
}

// Default values for DojoQueryStateCmd fields.
const (
	Default_DojoQueryStateCmd_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoQueryStateCmd_Param = DojoParam_EDOJOPARAM_QUERYSTATE
)

func (x *DojoQueryStateCmd) Reset() {
	*x = DojoQueryStateCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoQueryStateCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoQueryStateCmd) ProtoMessage() {}

func (x *DojoQueryStateCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoQueryStateCmd.ProtoReflect.Descriptor instead.
func (*DojoQueryStateCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{10}
}

func (x *DojoQueryStateCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoQueryStateCmd_Cmd
}

func (x *DojoQueryStateCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoQueryStateCmd_Param
}

func (x *DojoQueryStateCmd) GetState() DojoState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return DojoState_DOJOSTATE_NONE
}

func (x *DojoQueryStateCmd) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoQueryStateCmd) GetSponsorid() uint64 {
	if x != nil && x.Sponsorid != nil {
		return *x.Sponsorid
	}
	return 0
}

func (x *DojoQueryStateCmd) GetSponsorname() string {
	if x != nil && x.Sponsorname != nil {
		return *x.Sponsorname
	}
	return ""
}

func (x *DojoQueryStateCmd) GetRet() bool {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return false
}

type DojoRewardCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=58" json:"cmd,omitempty"`
	Param    *DojoParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.DojoParam,def=11" json:"param,omitempty"`
	Dojoid   *uint32     `protobuf:"varint,3,opt,name=dojoid" json:"dojoid,omitempty"`
	Passtype *EPassType  `protobuf:"varint,4,opt,name=passtype,enum=Cmd.EPassType" json:"passtype,omitempty"`
	Items    []*ItemInfo `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
}

// Default values for DojoRewardCmd fields.
const (
	Default_DojoRewardCmd_Cmd   = Command_DOJO_PROTOCMD
	Default_DojoRewardCmd_Param = DojoParam_EDOJOPARAM_REWARD
)

func (x *DojoRewardCmd) Reset() {
	*x = DojoRewardCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Dojo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DojoRewardCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DojoRewardCmd) ProtoMessage() {}

func (x *DojoRewardCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Dojo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DojoRewardCmd.ProtoReflect.Descriptor instead.
func (*DojoRewardCmd) Descriptor() ([]byte, []int) {
	return file_Dojo_proto_rawDescGZIP(), []int{11}
}

func (x *DojoRewardCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DojoRewardCmd_Cmd
}

func (x *DojoRewardCmd) GetParam() DojoParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DojoRewardCmd_Param
}

func (x *DojoRewardCmd) GetDojoid() uint32 {
	if x != nil && x.Dojoid != nil {
		return *x.Dojoid
	}
	return 0
}

func (x *DojoRewardCmd) GetPasstype() EPassType {
	if x != nil && x.Passtype != nil {
		return *x.Passtype
	}
	return EPassType_EPASSTYPE_FIRST
}

func (x *DojoRewardCmd) GetItems() []*ItemInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_Dojo_proto protoreflect.FileDescriptor

var file_Dojo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x44, 0x6f, 0x6a, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d,
	0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4,
	0x01, 0x0a, 0x12, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x07, 0x44, 0x6f, 0x6a, 0x6f, 0x4d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x6f, 0x6a, 0x6f, 0x4d, 0x73,
	0x67, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x4d, 0x73,
	0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x22,
	0xc9, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x6c,
	0x6f, 0x62, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0xcf, 0x01, 0x0a, 0x0d,
	0x44, 0x6f, 0x6a, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x45, 0x44, 0x4f,
	0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x01,
	0x0a, 0x0c, 0x44, 0x6f, 0x6a, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6d, 0x64, 0x12, 0x2d,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x36, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x10, 0x45, 0x44,
	0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3c, 0x0a, 0x06, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x44, 0x6f, 0x6a,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x3a, 0x13, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x52, 0x45, 0x50,
	0x4c, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x52, 0x06, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0xf2,
	0x01, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6a, 0x6f, 0x12, 0x2d, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x45, 0x44, 0x4f, 0x4a,
	0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x44, 0x4f, 0x4a, 0x4f,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x44, 0x6f, 0x6a, 0x6f, 0x41, 0x64, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44,
	0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x12, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x4d, 0x53, 0x47, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a,
	0x6f, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x6f, 0x6a, 0x6f, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x4d,
	0x73, 0x67, 0x52, 0x07, 0x64, 0x6f, 0x6a, 0x6f, 0x6d, 0x73, 0x67, 0x22, 0x7b, 0x0a, 0x0d, 0x44,
	0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x45, 0x44, 0x4f, 0x4a,
	0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x87, 0x02, 0x0a, 0x0e, 0x44, 0x6f, 0x6a,
	0x6f, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x44, 0x6f, 0x6a, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x45, 0x44, 0x4f, 0x4a, 0x4f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x4f, 0x52, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x11, 0x44, 0x6f, 0x6a, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x53, 0x54, 0x41, 0x54, 0x45, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6a, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6a, 0x6f,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x0d, 0x44, 0x6f, 0x6a, 0x6f, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x0d, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x44, 0x6f, 0x6a, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x64, 0x6f, 0x6a, 0x6f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x50, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x92, 0x02, 0x0a, 0x09, 0x44, 0x6f, 0x6a, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x44, 0x4f, 0x4a, 0x4f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x4a, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x43, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x44, 0x4f, 0x4a,
	0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45,
	0x50, 0x4c, 0x59, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x44, 0x4f, 0x4a, 0x4f, 0x10, 0x05, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x44,
	0x44, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x44, 0x4f, 0x4a, 0x4f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x44,
	0x4f, 0x4a, 0x4f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x0b, 0x2a, 0x3b, 0x0a, 0x0a,
	0x45, 0x44, 0x6f, 0x6a, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44,
	0x4f, 0x4a, 0x4f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x44, 0x4f, 0x4a, 0x4f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x09, 0x44, 0x6f, 0x6a,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4f, 0x4a, 0x4f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f,
	0x4a, 0x4f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x4f, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x4f, 0x4a, 0x4f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4f, 0x4a,
	0x4f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x4a,
	0x0a, 0x09, 0x45, 0x50, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x50, 0x41, 0x53, 0x53, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x50, 0x41, 0x53, 0x53, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45,
	0x4c, 0x50, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x50, 0x41, 0x53, 0x53, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x03,
}

var (
	file_Dojo_proto_rawDescOnce sync.Once
	file_Dojo_proto_rawDescData = file_Dojo_proto_rawDesc
)

func file_Dojo_proto_rawDescGZIP() []byte {
	file_Dojo_proto_rawDescOnce.Do(func() {
		file_Dojo_proto_rawDescData = protoimpl.X.CompressGZIP(file_Dojo_proto_rawDescData)
	})
	return file_Dojo_proto_rawDescData
}

var file_Dojo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_Dojo_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Dojo_proto_goTypes = []interface{}{
	(DojoParam)(0),             // 0: Cmd.DojoParam
	(EDojoReply)(0),            // 1: Cmd.EDojoReply
	(DojoState)(0),             // 2: Cmd.DojoState
	(EPassType)(0),             // 3: Cmd.EPassType
	(*DojoPrivateInfoCmd)(nil), // 4: Cmd.DojoPrivateInfoCmd
	(*DojoMsg)(nil),            // 5: Cmd.DojoMsg
	(*DojoMsgBlob)(nil),        // 6: Cmd.DojoMsgBlob
	(*DojoPublicInfoCmd)(nil),  // 7: Cmd.DojoPublicInfoCmd
	(*DojoInviteCmd)(nil),      // 8: Cmd.DojoInviteCmd
	(*DojoReplyCmd)(nil),       // 9: Cmd.DojoReplyCmd
	(*EnterDojo)(nil),          // 10: Cmd.EnterDojo
	(*DojoAddMsg)(nil),         // 11: Cmd.DojoAddMsg
	(*DojoPanelOper)(nil),      // 12: Cmd.DojoPanelOper
	(*DojoSponsorCmd)(nil),     // 13: Cmd.DojoSponsorCmd
	(*DojoQueryStateCmd)(nil),  // 14: Cmd.DojoQueryStateCmd
	(*DojoRewardCmd)(nil),      // 15: Cmd.DojoRewardCmd
	(Command)(0),               // 16: Cmd.Command
	(*ItemInfo)(nil),           // 17: Cmd.ItemInfo
}
var file_Dojo_proto_depIdxs = []int32{
	16, // 0: Cmd.DojoPrivateInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.DojoPrivateInfoCmd.param:type_name -> Cmd.DojoParam
	5,  // 2: Cmd.DojoMsgBlob.msgs:type_name -> Cmd.DojoMsg
	16, // 3: Cmd.DojoPublicInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.DojoPublicInfoCmd.param:type_name -> Cmd.DojoParam
	6,  // 5: Cmd.DojoPublicInfoCmd.msgblob:type_name -> Cmd.DojoMsgBlob
	16, // 6: Cmd.DojoInviteCmd.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.DojoInviteCmd.param:type_name -> Cmd.DojoParam
	16, // 8: Cmd.DojoReplyCmd.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.DojoReplyCmd.param:type_name -> Cmd.DojoParam
	1,  // 10: Cmd.DojoReplyCmd.eReply:type_name -> Cmd.EDojoReply
	16, // 11: Cmd.EnterDojo.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.EnterDojo.param:type_name -> Cmd.DojoParam
	16, // 13: Cmd.DojoAddMsg.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.DojoAddMsg.param:type_name -> Cmd.DojoParam
	5,  // 15: Cmd.DojoAddMsg.dojomsg:type_name -> Cmd.DojoMsg
	16, // 16: Cmd.DojoPanelOper.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.DojoPanelOper.param:type_name -> Cmd.DojoParam
	16, // 18: Cmd.DojoSponsorCmd.cmd:type_name -> Cmd.Command
	0,  // 19: Cmd.DojoSponsorCmd.param:type_name -> Cmd.DojoParam
	16, // 20: Cmd.DojoQueryStateCmd.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.DojoQueryStateCmd.param:type_name -> Cmd.DojoParam
	2,  // 22: Cmd.DojoQueryStateCmd.state:type_name -> Cmd.DojoState
	16, // 23: Cmd.DojoRewardCmd.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.DojoRewardCmd.param:type_name -> Cmd.DojoParam
	3,  // 25: Cmd.DojoRewardCmd.passtype:type_name -> Cmd.EPassType
	17, // 26: Cmd.DojoRewardCmd.items:type_name -> Cmd.ItemInfo
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_Dojo_proto_init() }
func file_Dojo_proto_init() {
	if File_Dojo_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_SceneItem_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Dojo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoPrivateInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoMsgBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoPublicInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoInviteCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoReplyCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterDojo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoAddMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoPanelOper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoSponsorCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoQueryStateCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Dojo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DojoRewardCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Dojo_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Dojo_proto_goTypes,
		DependencyIndexes: file_Dojo_proto_depIdxs,
		EnumInfos:         file_Dojo_proto_enumTypes,
		MessageInfos:      file_Dojo_proto_msgTypes,
	}.Build()
	File_Dojo_proto = out.File
	file_Dojo_proto_rawDesc = nil
	file_Dojo_proto_goTypes = nil
	file_Dojo_proto_depIdxs = nil
}
