// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: Authorize.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthorizeParam int32

const (
	AuthorizeParam_SET_AUTHORIZE_USER_CMD         AuthorizeParam = 1
	AuthorizeParam_RESET_AUTHORIZE_USER_CMD       AuthorizeParam = 2
	AuthorizeParam_SYNC_AUTHORIZE_TO_SESSION      AuthorizeParam = 3
	AuthorizeParam_NOTIFY_AUTHORIZE_USER_CMD      AuthorizeParam = 4
	AuthorizeParam_SYNC_REAL_AUTHORIZE_TO_SESSION AuthorizeParam = 5
)

// Enum value maps for AuthorizeParam.
var (
	AuthorizeParam_name = map[int32]string{
		1: "SET_AUTHORIZE_USER_CMD",
		2: "RESET_AUTHORIZE_USER_CMD",
		3: "SYNC_AUTHORIZE_TO_SESSION",
		4: "NOTIFY_AUTHORIZE_USER_CMD",
		5: "SYNC_REAL_AUTHORIZE_TO_SESSION",
	}
	AuthorizeParam_value = map[string]int32{
		"SET_AUTHORIZE_USER_CMD":         1,
		"RESET_AUTHORIZE_USER_CMD":       2,
		"SYNC_AUTHORIZE_TO_SESSION":      3,
		"NOTIFY_AUTHORIZE_USER_CMD":      4,
		"SYNC_REAL_AUTHORIZE_TO_SESSION": 5,
	}
)

func (x AuthorizeParam) Enum() *AuthorizeParam {
	p := new(AuthorizeParam)
	*p = x
	return p
}

func (x AuthorizeParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizeParam) Descriptor() protoreflect.EnumDescriptor {
	return file_Authorize_proto_enumTypes[0].Descriptor()
}

func (AuthorizeParam) Type() protoreflect.EnumType {
	return &file_Authorize_proto_enumTypes[0]
}

func (x AuthorizeParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthorizeParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthorizeParam(num)
	return nil
}

// Deprecated: Use AuthorizeParam.Descriptor instead.
func (AuthorizeParam) EnumDescriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{0}
}

type EUnlockType int32

const (
	EUnlockType_EUNLOCKTYPE_MIN                 EUnlockType = 0
	EUnlockType_EUNLOCKTYPE_REFINE              EUnlockType = 1
	EUnlockType_EUNLOCKTYPE_TRADE               EUnlockType = 2
	EUnlockType_EUNLOCKTYPE_EQUIP_UPGRADE       EUnlockType = 3
	EUnlockType_EUNLOCKTYPE_EQUIP_HOLE          EUnlockType = 4
	EUnlockType_EUNLOCKTYPE_ENCHANT             EUnlockType = 5
	EUnlockType_EUNLOCKTYPE_NPC_BUY             EUnlockType = 6
	EUnlockType_EUNLOCKTYPE_GUILD               EUnlockType = 7
	EUnlockType_EUNLOCKTYPE_FRIEND              EUnlockType = 8
	EUnlockType_EUNLOCKTYPE_SELL                EUnlockType = 9
	EUnlockType_EUNLOCKTYPE_USEITEM             EUnlockType = 10
	EUnlockType_EUNLOCKTYPE_TRADE_GIFT          EUnlockType = 11
	EUnlockType_EUNLOCKTYPE_DECOMPOSE           EUnlockType = 12
	EUnlockType_EUNLOCKTYPE_AUCTION_SELL        EUnlockType = 13
	EUnlockType_EUNLOCKTYPE_AUCTION_BUY         EUnlockType = 14
	EUnlockType_EUNLOCKTYPE_ITEM_CODE           EUnlockType = 15
	EUnlockType_EUNLOCKTYPE_CARD_DECOMPOSE_DRAW EUnlockType = 16
	EUnlockType_EUNLOCKTYPE_LOTTERY             EUnlockType = 17
	EUnlockType_EUNLOCKTYPE_GEM_COMPOSE         EUnlockType = 19
	EUnlockType_EUNLOCKTYPE_EQUIP_RECOVERY      EUnlockType = 20
	EUnlockType_EUNLOCKTYPE_MAX                 EUnlockType = 21
)

// Enum value maps for EUnlockType.
var (
	EUnlockType_name = map[int32]string{
		0:  "EUNLOCKTYPE_MIN",
		1:  "EUNLOCKTYPE_REFINE",
		2:  "EUNLOCKTYPE_TRADE",
		3:  "EUNLOCKTYPE_EQUIP_UPGRADE",
		4:  "EUNLOCKTYPE_EQUIP_HOLE",
		5:  "EUNLOCKTYPE_ENCHANT",
		6:  "EUNLOCKTYPE_NPC_BUY",
		7:  "EUNLOCKTYPE_GUILD",
		8:  "EUNLOCKTYPE_FRIEND",
		9:  "EUNLOCKTYPE_SELL",
		10: "EUNLOCKTYPE_USEITEM",
		11: "EUNLOCKTYPE_TRADE_GIFT",
		12: "EUNLOCKTYPE_DECOMPOSE",
		13: "EUNLOCKTYPE_AUCTION_SELL",
		14: "EUNLOCKTYPE_AUCTION_BUY",
		15: "EUNLOCKTYPE_ITEM_CODE",
		16: "EUNLOCKTYPE_CARD_DECOMPOSE_DRAW",
		17: "EUNLOCKTYPE_LOTTERY",
		19: "EUNLOCKTYPE_GEM_COMPOSE",
		20: "EUNLOCKTYPE_EQUIP_RECOVERY",
		21: "EUNLOCKTYPE_MAX",
	}
	EUnlockType_value = map[string]int32{
		"EUNLOCKTYPE_MIN":                 0,
		"EUNLOCKTYPE_REFINE":              1,
		"EUNLOCKTYPE_TRADE":               2,
		"EUNLOCKTYPE_EQUIP_UPGRADE":       3,
		"EUNLOCKTYPE_EQUIP_HOLE":          4,
		"EUNLOCKTYPE_ENCHANT":             5,
		"EUNLOCKTYPE_NPC_BUY":             6,
		"EUNLOCKTYPE_GUILD":               7,
		"EUNLOCKTYPE_FRIEND":              8,
		"EUNLOCKTYPE_SELL":                9,
		"EUNLOCKTYPE_USEITEM":             10,
		"EUNLOCKTYPE_TRADE_GIFT":          11,
		"EUNLOCKTYPE_DECOMPOSE":           12,
		"EUNLOCKTYPE_AUCTION_SELL":        13,
		"EUNLOCKTYPE_AUCTION_BUY":         14,
		"EUNLOCKTYPE_ITEM_CODE":           15,
		"EUNLOCKTYPE_CARD_DECOMPOSE_DRAW": 16,
		"EUNLOCKTYPE_LOTTERY":             17,
		"EUNLOCKTYPE_GEM_COMPOSE":         19,
		"EUNLOCKTYPE_EQUIP_RECOVERY":      20,
		"EUNLOCKTYPE_MAX":                 21,
	}
)

func (x EUnlockType) Enum() *EUnlockType {
	p := new(EUnlockType)
	*p = x
	return p
}

func (x EUnlockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EUnlockType) Descriptor() protoreflect.EnumDescriptor {
	return file_Authorize_proto_enumTypes[1].Descriptor()
}

func (EUnlockType) Type() protoreflect.EnumType {
	return &file_Authorize_proto_enumTypes[1]
}

func (x EUnlockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EUnlockType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EUnlockType(num)
	return nil
}

// Deprecated: Use EUnlockType.Descriptor instead.
func (EUnlockType) EnumDescriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{1}
}

type SetAuthorizeUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=62" json:"cmd,omitempty"`
	Param    *AuthorizeParam `protobuf:"varint,2,opt,name=param,enum=Cmd.AuthorizeParam,def=1" json:"param,omitempty"`
	Password *string         `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	Oldpwd   *string         `protobuf:"bytes,4,opt,name=oldpwd" json:"oldpwd,omitempty"`
}

// Default values for SetAuthorizeUserCmd fields.
const (
	Default_SetAuthorizeUserCmd_Cmd   = Command_SESSION_USER_AUTHORIZE_PROTOCMD
	Default_SetAuthorizeUserCmd_Param = AuthorizeParam_SET_AUTHORIZE_USER_CMD
)

func (x *SetAuthorizeUserCmd) Reset() {
	*x = SetAuthorizeUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Authorize_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAuthorizeUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAuthorizeUserCmd) ProtoMessage() {}

func (x *SetAuthorizeUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Authorize_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAuthorizeUserCmd.ProtoReflect.Descriptor instead.
func (*SetAuthorizeUserCmd) Descriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{0}
}

func (x *SetAuthorizeUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SetAuthorizeUserCmd_Cmd
}

func (x *SetAuthorizeUserCmd) GetParam() AuthorizeParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SetAuthorizeUserCmd_Param
}

func (x *SetAuthorizeUserCmd) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *SetAuthorizeUserCmd) GetOldpwd() string {
	if x != nil && x.Oldpwd != nil {
		return *x.Oldpwd
	}
	return ""
}

type ResetAuthorizeUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=62" json:"cmd,omitempty"`
	Param  *AuthorizeParam `protobuf:"varint,2,opt,name=param,enum=Cmd.AuthorizeParam,def=2" json:"param,omitempty"`
	Reset_ *bool           `protobuf:"varint,3,req,name=reset" json:"reset,omitempty"`
}

// Default values for ResetAuthorizeUserCmd fields.
const (
	Default_ResetAuthorizeUserCmd_Cmd   = Command_SESSION_USER_AUTHORIZE_PROTOCMD
	Default_ResetAuthorizeUserCmd_Param = AuthorizeParam_RESET_AUTHORIZE_USER_CMD
)

func (x *ResetAuthorizeUserCmd) Reset() {
	*x = ResetAuthorizeUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Authorize_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAuthorizeUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAuthorizeUserCmd) ProtoMessage() {}

func (x *ResetAuthorizeUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Authorize_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAuthorizeUserCmd.ProtoReflect.Descriptor instead.
func (*ResetAuthorizeUserCmd) Descriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{1}
}

func (x *ResetAuthorizeUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ResetAuthorizeUserCmd_Cmd
}

func (x *ResetAuthorizeUserCmd) GetParam() AuthorizeParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ResetAuthorizeUserCmd_Param
}

func (x *ResetAuthorizeUserCmd) GetReset_() bool {
	if x != nil && x.Reset_ != nil {
		return *x.Reset_
	}
	return false
}

type SyncAuthorizeToSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=62" json:"cmd,omitempty"`
	Param     *AuthorizeParam `protobuf:"varint,2,opt,name=param,enum=Cmd.AuthorizeParam,def=3" json:"param,omitempty"`
	Ignorepwd *bool           `protobuf:"varint,3,opt,name=ignorepwd,def=0" json:"ignorepwd,omitempty"`
	Password  *string         `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Resettime *uint32         `protobuf:"varint,5,opt,name=resettime,def=0" json:"resettime,omitempty"`
}

// Default values for SyncAuthorizeToSession fields.
const (
	Default_SyncAuthorizeToSession_Cmd       = Command_SESSION_USER_AUTHORIZE_PROTOCMD
	Default_SyncAuthorizeToSession_Param     = AuthorizeParam_SYNC_AUTHORIZE_TO_SESSION
	Default_SyncAuthorizeToSession_Ignorepwd = bool(false)
	Default_SyncAuthorizeToSession_Resettime = uint32(0)
)

func (x *SyncAuthorizeToSession) Reset() {
	*x = SyncAuthorizeToSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Authorize_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAuthorizeToSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAuthorizeToSession) ProtoMessage() {}

func (x *SyncAuthorizeToSession) ProtoReflect() protoreflect.Message {
	mi := &file_Authorize_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAuthorizeToSession.ProtoReflect.Descriptor instead.
func (*SyncAuthorizeToSession) Descriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{2}
}

func (x *SyncAuthorizeToSession) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SyncAuthorizeToSession_Cmd
}

func (x *SyncAuthorizeToSession) GetParam() AuthorizeParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SyncAuthorizeToSession_Param
}

func (x *SyncAuthorizeToSession) GetIgnorepwd() bool {
	if x != nil && x.Ignorepwd != nil {
		return *x.Ignorepwd
	}
	return Default_SyncAuthorizeToSession_Ignorepwd
}

func (x *SyncAuthorizeToSession) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *SyncAuthorizeToSession) GetResettime() uint32 {
	if x != nil && x.Resettime != nil {
		return *x.Resettime
	}
	return Default_SyncAuthorizeToSession_Resettime
}

type NotifyAuthorizeUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=62" json:"cmd,omitempty"`
	Param *AuthorizeParam `protobuf:"varint,2,opt,name=param,enum=Cmd.AuthorizeParam,def=4" json:"param,omitempty"`
}

// Default values for NotifyAuthorizeUserCmd fields.
const (
	Default_NotifyAuthorizeUserCmd_Cmd   = Command_SESSION_USER_AUTHORIZE_PROTOCMD
	Default_NotifyAuthorizeUserCmd_Param = AuthorizeParam_NOTIFY_AUTHORIZE_USER_CMD
)

func (x *NotifyAuthorizeUserCmd) Reset() {
	*x = NotifyAuthorizeUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Authorize_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAuthorizeUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAuthorizeUserCmd) ProtoMessage() {}

func (x *NotifyAuthorizeUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_Authorize_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAuthorizeUserCmd.ProtoReflect.Descriptor instead.
func (*NotifyAuthorizeUserCmd) Descriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{3}
}

func (x *NotifyAuthorizeUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NotifyAuthorizeUserCmd_Cmd
}

func (x *NotifyAuthorizeUserCmd) GetParam() AuthorizeParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NotifyAuthorizeUserCmd_Param
}

type SyncRealAuthorizeToSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=62" json:"cmd,omitempty"`
	Param      *AuthorizeParam `protobuf:"varint,2,opt,name=param,enum=Cmd.AuthorizeParam,def=5" json:"param,omitempty"`
	Authorized *bool           `protobuf:"varint,3,opt,name=authorized,def=0" json:"authorized,omitempty"`
}

// Default values for SyncRealAuthorizeToSession fields.
const (
	Default_SyncRealAuthorizeToSession_Cmd        = Command_SESSION_USER_AUTHORIZE_PROTOCMD
	Default_SyncRealAuthorizeToSession_Param      = AuthorizeParam_SYNC_REAL_AUTHORIZE_TO_SESSION
	Default_SyncRealAuthorizeToSession_Authorized = bool(false)
)

func (x *SyncRealAuthorizeToSession) Reset() {
	*x = SyncRealAuthorizeToSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Authorize_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRealAuthorizeToSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRealAuthorizeToSession) ProtoMessage() {}

func (x *SyncRealAuthorizeToSession) ProtoReflect() protoreflect.Message {
	mi := &file_Authorize_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRealAuthorizeToSession.ProtoReflect.Descriptor instead.
func (*SyncRealAuthorizeToSession) Descriptor() ([]byte, []int) {
	return file_Authorize_proto_rawDescGZIP(), []int{4}
}

func (x *SyncRealAuthorizeToSession) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_SyncRealAuthorizeToSession_Cmd
}

func (x *SyncRealAuthorizeToSession) GetParam() AuthorizeParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_SyncRealAuthorizeToSession_Param
}

func (x *SyncRealAuthorizeToSession) GetAuthorized() bool {
	if x != nil && x.Authorized != nil {
		return *x.Authorized
	}
	return Default_SyncRealAuthorizeToSession_Authorized
}

var File_Authorize_proto protoreflect.FileDescriptor

var file_Authorize_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x16, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6c,
	0x64, 0x70, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x70,
	0x77, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x18, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x81, 0x02, 0x0a, 0x16, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x09, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x77, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xcf,
	0x01, 0x0a, 0x1a, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x3a, 0x1e, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x2a, 0xac, 0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f,
	0x52, 0x49, 0x5a, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f,
	0x54, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x2a,
	0xb9, 0x04, 0x0a, 0x0b, 0x45, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44,
	0x45, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45,
	0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x48, 0x4f, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x43, 0x48, 0x41, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x55, 0x4e, 0x4c, 0x4f,
	0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x50, 0x43, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x06,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x55, 0x4e, 0x4c, 0x4f,
	0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x08, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x45, 0x4c, 0x4c, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x0a, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x55,
	0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x53, 0x45, 0x10, 0x0c, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4c,
	0x4c, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x0e,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x0f, 0x12, 0x23, 0x0a, 0x1f, 0x45,
	0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x44, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x10,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x4f, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x11, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x55, 0x4e,
	0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4d, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x53, 0x45, 0x10, 0x13, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43,
	0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x43, 0x4f,
	0x56, 0x45, 0x52, 0x59, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x55, 0x4e, 0x4c, 0x4f, 0x43,
	0x4b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x15,
}

var (
	file_Authorize_proto_rawDescOnce sync.Once
	file_Authorize_proto_rawDescData = file_Authorize_proto_rawDesc
)

func file_Authorize_proto_rawDescGZIP() []byte {
	file_Authorize_proto_rawDescOnce.Do(func() {
		file_Authorize_proto_rawDescData = protoimpl.X.CompressGZIP(file_Authorize_proto_rawDescData)
	})
	return file_Authorize_proto_rawDescData
}

var file_Authorize_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Authorize_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_Authorize_proto_goTypes = []interface{}{
	(AuthorizeParam)(0),                // 0: Cmd.AuthorizeParam
	(EUnlockType)(0),                   // 1: Cmd.EUnlockType
	(*SetAuthorizeUserCmd)(nil),        // 2: Cmd.SetAuthorizeUserCmd
	(*ResetAuthorizeUserCmd)(nil),      // 3: Cmd.ResetAuthorizeUserCmd
	(*SyncAuthorizeToSession)(nil),     // 4: Cmd.SyncAuthorizeToSession
	(*NotifyAuthorizeUserCmd)(nil),     // 5: Cmd.NotifyAuthorizeUserCmd
	(*SyncRealAuthorizeToSession)(nil), // 6: Cmd.SyncRealAuthorizeToSession
	(Command)(0),                       // 7: Cmd.Command
}
var file_Authorize_proto_depIdxs = []int32{
	7,  // 0: Cmd.SetAuthorizeUserCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.SetAuthorizeUserCmd.param:type_name -> Cmd.AuthorizeParam
	7,  // 2: Cmd.ResetAuthorizeUserCmd.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.ResetAuthorizeUserCmd.param:type_name -> Cmd.AuthorizeParam
	7,  // 4: Cmd.SyncAuthorizeToSession.cmd:type_name -> Cmd.Command
	0,  // 5: Cmd.SyncAuthorizeToSession.param:type_name -> Cmd.AuthorizeParam
	7,  // 6: Cmd.NotifyAuthorizeUserCmd.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.NotifyAuthorizeUserCmd.param:type_name -> Cmd.AuthorizeParam
	7,  // 8: Cmd.SyncRealAuthorizeToSession.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.SyncRealAuthorizeToSession.param:type_name -> Cmd.AuthorizeParam
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_Authorize_proto_init() }
func file_Authorize_proto_init() {
	if File_Authorize_proto != nil {
		return
	}
	file_xCmd_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Authorize_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAuthorizeUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Authorize_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAuthorizeUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Authorize_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAuthorizeToSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Authorize_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAuthorizeUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Authorize_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRealAuthorizeToSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Authorize_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Authorize_proto_goTypes,
		DependencyIndexes: file_Authorize_proto_depIdxs,
		EnumInfos:         file_Authorize_proto_enumTypes,
		MessageInfos:      file_Authorize_proto_msgTypes,
	}.Build()
	File_Authorize_proto = out.File
	file_Authorize_proto_rawDesc = nil
	file_Authorize_proto_goTypes = nil
	file_Authorize_proto_depIdxs = nil
}
