// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: InfiniteTower.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TowerParam int32

const (
	TowerParam_ETOWERPARAM_TEAMTOWERINFO    TowerParam = 1
	TowerParam_ETOWERPARAM_TEAMTOWERSUMMARY TowerParam = 2
	TowerParam_ETOWERPARAM_INVITE           TowerParam = 3
	TowerParam_ETOWERPARAM_REPLY            TowerParam = 4
	TowerParam_ETOWERPARAM_ENTERTOWER       TowerParam = 5
	TowerParam_ETOWERPARAM_USERTOWERINFO    TowerParam = 7
	TowerParam_ETOWERPARAM_LAYER_SYNC       TowerParam = 8
	TowerParam_ETOWERPARAM_NEW_EVERLAYER    TowerParam = 9
	TowerParam_ETOWERPARAM_TOWERINFO        TowerParam = 10
)

// Enum value maps for TowerParam.
var (
	TowerParam_name = map[int32]string{
		1:  "ETOWERPARAM_TEAMTOWERINFO",
		2:  "ETOWERPARAM_TEAMTOWERSUMMARY",
		3:  "ETOWERPARAM_INVITE",
		4:  "ETOWERPARAM_REPLY",
		5:  "ETOWERPARAM_ENTERTOWER",
		7:  "ETOWERPARAM_USERTOWERINFO",
		8:  "ETOWERPARAM_LAYER_SYNC",
		9:  "ETOWERPARAM_NEW_EVERLAYER",
		10: "ETOWERPARAM_TOWERINFO",
	}
	TowerParam_value = map[string]int32{
		"ETOWERPARAM_TEAMTOWERINFO":    1,
		"ETOWERPARAM_TEAMTOWERSUMMARY": 2,
		"ETOWERPARAM_INVITE":           3,
		"ETOWERPARAM_REPLY":            4,
		"ETOWERPARAM_ENTERTOWER":       5,
		"ETOWERPARAM_USERTOWERINFO":    7,
		"ETOWERPARAM_LAYER_SYNC":       8,
		"ETOWERPARAM_NEW_EVERLAYER":    9,
		"ETOWERPARAM_TOWERINFO":        10,
	}
)

func (x TowerParam) Enum() *TowerParam {
	p := new(TowerParam)
	*p = x
	return p
}

func (x TowerParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TowerParam) Descriptor() protoreflect.EnumDescriptor {
	return file_InfiniteTower_proto_enumTypes[0].Descriptor()
}

func (TowerParam) Type() protoreflect.EnumType {
	return &file_InfiniteTower_proto_enumTypes[0]
}

func (x TowerParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TowerParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TowerParam(num)
	return nil
}

// Deprecated: Use TowerParam.Descriptor instead.
func (TowerParam) EnumDescriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{0}
}

type ETowerReply int32

const (
	ETowerReply_ETOWERREPLY_AGREE    ETowerReply = 1
	ETowerReply_ETOWERREPLY_DISAGREE ETowerReply = 2
)

// Enum value maps for ETowerReply.
var (
	ETowerReply_name = map[int32]string{
		1: "ETOWERREPLY_AGREE",
		2: "ETOWERREPLY_DISAGREE",
	}
	ETowerReply_value = map[string]int32{
		"ETOWERREPLY_AGREE":    1,
		"ETOWERREPLY_DISAGREE": 2,
	}
)

func (x ETowerReply) Enum() *ETowerReply {
	p := new(ETowerReply)
	*p = x
	return p
}

func (x ETowerReply) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETowerReply) Descriptor() protoreflect.EnumDescriptor {
	return file_InfiniteTower_proto_enumTypes[1].Descriptor()
}

func (ETowerReply) Type() protoreflect.EnumType {
	return &file_InfiniteTower_proto_enumTypes[1]
}

func (x ETowerReply) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETowerReply) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETowerReply(num)
	return nil
}

// Deprecated: Use ETowerReply.Descriptor instead.
func (ETowerReply) EnumDescriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{1}
}

type UserTowerLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer    *uint32 `protobuf:"varint,1,opt,name=layer,def=0" json:"layer,omitempty"`
	Utime    *uint32 `protobuf:"varint,2,opt,name=utime,def=0" json:"utime,omitempty"`
	Rewarded *bool   `protobuf:"varint,3,opt,name=rewarded,def=0" json:"rewarded,omitempty"`
}

// Default values for UserTowerLayer fields.
const (
	Default_UserTowerLayer_Layer    = uint32(0)
	Default_UserTowerLayer_Utime    = uint32(0)
	Default_UserTowerLayer_Rewarded = bool(false)
)

func (x *UserTowerLayer) Reset() {
	*x = UserTowerLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTowerLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTowerLayer) ProtoMessage() {}

func (x *UserTowerLayer) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTowerLayer.ProtoReflect.Descriptor instead.
func (*UserTowerLayer) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{0}
}

func (x *UserTowerLayer) GetLayer() uint32 {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return Default_UserTowerLayer_Layer
}

func (x *UserTowerLayer) GetUtime() uint32 {
	if x != nil && x.Utime != nil {
		return *x.Utime
	}
	return Default_UserTowerLayer_Utime
}

func (x *UserTowerLayer) GetRewarded() bool {
	if x != nil && x.Rewarded != nil {
		return *x.Rewarded
	}
	return Default_UserTowerLayer_Rewarded
}

type UserTowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldmaxlayer    *uint32           `protobuf:"varint,1,opt,name=oldmaxlayer,def=0" json:"oldmaxlayer,omitempty"`
	Curmaxlayer    *uint32           `protobuf:"varint,2,opt,name=curmaxlayer,def=0" json:"curmaxlayer,omitempty"`
	Layers         []*UserTowerLayer `protobuf:"bytes,3,rep,name=layers" json:"layers,omitempty"`
	Maxlayer       *uint32           `protobuf:"varint,4,opt,name=maxlayer,def=0" json:"maxlayer,omitempty"`
	RecordLayer    *uint32           `protobuf:"varint,5,opt,name=record_layer,json=recordLayer,def=0" json:"record_layer,omitempty"`
	Everpasslayers []*UserTowerLayer `protobuf:"bytes,6,rep,name=everpasslayers" json:"everpasslayers,omitempty"`
}

// Default values for UserTowerInfo fields.
const (
	Default_UserTowerInfo_Oldmaxlayer = uint32(0)
	Default_UserTowerInfo_Curmaxlayer = uint32(0)
	Default_UserTowerInfo_Maxlayer    = uint32(0)
	Default_UserTowerInfo_RecordLayer = uint32(0)
)

func (x *UserTowerInfo) Reset() {
	*x = UserTowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTowerInfo) ProtoMessage() {}

func (x *UserTowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTowerInfo.ProtoReflect.Descriptor instead.
func (*UserTowerInfo) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{1}
}

func (x *UserTowerInfo) GetOldmaxlayer() uint32 {
	if x != nil && x.Oldmaxlayer != nil {
		return *x.Oldmaxlayer
	}
	return Default_UserTowerInfo_Oldmaxlayer
}

func (x *UserTowerInfo) GetCurmaxlayer() uint32 {
	if x != nil && x.Curmaxlayer != nil {
		return *x.Curmaxlayer
	}
	return Default_UserTowerInfo_Curmaxlayer
}

func (x *UserTowerInfo) GetLayers() []*UserTowerLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *UserTowerInfo) GetMaxlayer() uint32 {
	if x != nil && x.Maxlayer != nil {
		return *x.Maxlayer
	}
	return Default_UserTowerInfo_Maxlayer
}

func (x *UserTowerInfo) GetRecordLayer() uint32 {
	if x != nil && x.RecordLayer != nil {
		return *x.RecordLayer
	}
	return Default_UserTowerInfo_RecordLayer
}

func (x *UserTowerInfo) GetEverpasslayers() []*UserTowerLayer {
	if x != nil {
		return x.Everpasslayers
	}
	return nil
}

type TeamTowerSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teamid      *uint64        `protobuf:"varint,1,opt,name=teamid,def=0" json:"teamid,omitempty"`
	Layer       *uint32        `protobuf:"varint,2,opt,name=layer,def=0" json:"layer,omitempty"`
	Leadertower *UserTowerInfo `protobuf:"bytes,4,opt,name=leadertower" json:"leadertower,omitempty"`
	Members     []uint64       `protobuf:"varint,3,rep,name=members" json:"members,omitempty"`
}

// Default values for TeamTowerSummary fields.
const (
	Default_TeamTowerSummary_Teamid = uint64(0)
	Default_TeamTowerSummary_Layer  = uint32(0)
)

func (x *TeamTowerSummary) Reset() {
	*x = TeamTowerSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTowerSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTowerSummary) ProtoMessage() {}

func (x *TeamTowerSummary) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTowerSummary.ProtoReflect.Descriptor instead.
func (*TeamTowerSummary) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{2}
}

func (x *TeamTowerSummary) GetTeamid() uint64 {
	if x != nil && x.Teamid != nil {
		return *x.Teamid
	}
	return Default_TeamTowerSummary_Teamid
}

func (x *TeamTowerSummary) GetLayer() uint32 {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return Default_TeamTowerSummary_Layer
}

func (x *TeamTowerSummary) GetLeadertower() *UserTowerInfo {
	if x != nil {
		return x.Leadertower
	}
	return nil
}

func (x *TeamTowerSummary) GetMembers() []uint64 {
	if x != nil {
		return x.Members
	}
	return nil
}

type TeamTowerInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param  *TowerParam `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=1" json:"param,omitempty"`
	Teamid *uint64     `protobuf:"varint,3,opt,name=teamid,def=0" json:"teamid,omitempty"`
}

// Default values for TeamTowerInfoCmd fields.
const (
	Default_TeamTowerInfoCmd_Cmd    = Command_INFINITE_TOWER_PROTOCMD
	Default_TeamTowerInfoCmd_Param  = TowerParam_ETOWERPARAM_TEAMTOWERINFO
	Default_TeamTowerInfoCmd_Teamid = uint64(0)
)

func (x *TeamTowerInfoCmd) Reset() {
	*x = TeamTowerInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTowerInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTowerInfoCmd) ProtoMessage() {}

func (x *TeamTowerInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTowerInfoCmd.ProtoReflect.Descriptor instead.
func (*TeamTowerInfoCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{3}
}

func (x *TeamTowerInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TeamTowerInfoCmd_Cmd
}

func (x *TeamTowerInfoCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TeamTowerInfoCmd_Param
}

func (x *TeamTowerInfoCmd) GetTeamid() uint64 {
	if x != nil && x.Teamid != nil {
		return *x.Teamid
	}
	return Default_TeamTowerInfoCmd_Teamid
}

type TeamTowerSummaryCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param       *TowerParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=2" json:"param,omitempty"`
	Teamtower   *TeamTowerSummary `protobuf:"bytes,3,opt,name=teamtower" json:"teamtower,omitempty"`
	Maxlayer    *uint32           `protobuf:"varint,4,opt,name=maxlayer,def=0" json:"maxlayer,omitempty"`
	Refreshtime *uint32           `protobuf:"varint,5,opt,name=refreshtime,def=0" json:"refreshtime,omitempty"`
}

// Default values for TeamTowerSummaryCmd fields.
const (
	Default_TeamTowerSummaryCmd_Cmd         = Command_INFINITE_TOWER_PROTOCMD
	Default_TeamTowerSummaryCmd_Param       = TowerParam_ETOWERPARAM_TEAMTOWERSUMMARY
	Default_TeamTowerSummaryCmd_Maxlayer    = uint32(0)
	Default_TeamTowerSummaryCmd_Refreshtime = uint32(0)
)

func (x *TeamTowerSummaryCmd) Reset() {
	*x = TeamTowerSummaryCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTowerSummaryCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTowerSummaryCmd) ProtoMessage() {}

func (x *TeamTowerSummaryCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTowerSummaryCmd.ProtoReflect.Descriptor instead.
func (*TeamTowerSummaryCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{4}
}

func (x *TeamTowerSummaryCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TeamTowerSummaryCmd_Cmd
}

func (x *TeamTowerSummaryCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TeamTowerSummaryCmd_Param
}

func (x *TeamTowerSummaryCmd) GetTeamtower() *TeamTowerSummary {
	if x != nil {
		return x.Teamtower
	}
	return nil
}

func (x *TeamTowerSummaryCmd) GetMaxlayer() uint32 {
	if x != nil && x.Maxlayer != nil {
		return *x.Maxlayer
	}
	return Default_TeamTowerSummaryCmd_Maxlayer
}

func (x *TeamTowerSummaryCmd) GetRefreshtime() uint32 {
	if x != nil && x.Refreshtime != nil {
		return *x.Refreshtime
	}
	return Default_TeamTowerSummaryCmd_Refreshtime
}

type TeamTowerInviteCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param    *TowerParam `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=3" json:"param,omitempty"`
	Iscancel *bool       `protobuf:"varint,3,opt,name=iscancel,def=0" json:"iscancel,omitempty"`
}

// Default values for TeamTowerInviteCmd fields.
const (
	Default_TeamTowerInviteCmd_Cmd      = Command_INFINITE_TOWER_PROTOCMD
	Default_TeamTowerInviteCmd_Param    = TowerParam_ETOWERPARAM_INVITE
	Default_TeamTowerInviteCmd_Iscancel = bool(false)
)

func (x *TeamTowerInviteCmd) Reset() {
	*x = TeamTowerInviteCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTowerInviteCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTowerInviteCmd) ProtoMessage() {}

func (x *TeamTowerInviteCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTowerInviteCmd.ProtoReflect.Descriptor instead.
func (*TeamTowerInviteCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{5}
}

func (x *TeamTowerInviteCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TeamTowerInviteCmd_Cmd
}

func (x *TeamTowerInviteCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TeamTowerInviteCmd_Param
}

func (x *TeamTowerInviteCmd) GetIscancel() bool {
	if x != nil && x.Iscancel != nil {
		return *x.Iscancel
	}
	return Default_TeamTowerInviteCmd_Iscancel
}

type TeamTowerReplyCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command     `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param  *TowerParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=4" json:"param,omitempty"`
	EReply *ETowerReply `protobuf:"varint,3,opt,name=eReply,enum=Cmd.ETowerReply,def=2" json:"eReply,omitempty"`
	Userid *uint64      `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
}

// Default values for TeamTowerReplyCmd fields.
const (
	Default_TeamTowerReplyCmd_Cmd    = Command_INFINITE_TOWER_PROTOCMD
	Default_TeamTowerReplyCmd_Param  = TowerParam_ETOWERPARAM_REPLY
	Default_TeamTowerReplyCmd_EReply = ETowerReply_ETOWERREPLY_DISAGREE
	Default_TeamTowerReplyCmd_Userid = uint64(0)
)

func (x *TeamTowerReplyCmd) Reset() {
	*x = TeamTowerReplyCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTowerReplyCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTowerReplyCmd) ProtoMessage() {}

func (x *TeamTowerReplyCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTowerReplyCmd.ProtoReflect.Descriptor instead.
func (*TeamTowerReplyCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{6}
}

func (x *TeamTowerReplyCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TeamTowerReplyCmd_Cmd
}

func (x *TeamTowerReplyCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TeamTowerReplyCmd_Param
}

func (x *TeamTowerReplyCmd) GetEReply() ETowerReply {
	if x != nil && x.EReply != nil {
		return *x.EReply
	}
	return Default_TeamTowerReplyCmd_EReply
}

func (x *TeamTowerReplyCmd) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_TeamTowerReplyCmd_Userid
}

type EnterTower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param     *TowerParam `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=5" json:"param,omitempty"`
	Layer     *uint32     `protobuf:"varint,3,opt,name=layer,def=0" json:"layer,omitempty"`
	Userid    *uint64     `protobuf:"varint,4,opt,name=userid,def=0" json:"userid,omitempty"`
	Zoneid    *uint32     `protobuf:"varint,5,opt,name=zoneid,def=0" json:"zoneid,omitempty"`
	Time      *uint32     `protobuf:"varint,6,opt,name=time,def=0" json:"time,omitempty"`
	Sign      *string     `protobuf:"bytes,7,opt,name=sign" json:"sign,omitempty"`
	Gomaptype *uint32     `protobuf:"varint,8,opt,name=gomaptype,def=0" json:"gomaptype,omitempty"`
}

// Default values for EnterTower fields.
const (
	Default_EnterTower_Cmd       = Command_INFINITE_TOWER_PROTOCMD
	Default_EnterTower_Param     = TowerParam_ETOWERPARAM_ENTERTOWER
	Default_EnterTower_Layer     = uint32(0)
	Default_EnterTower_Userid    = uint64(0)
	Default_EnterTower_Zoneid    = uint32(0)
	Default_EnterTower_Time      = uint32(0)
	Default_EnterTower_Gomaptype = uint32(0)
)

func (x *EnterTower) Reset() {
	*x = EnterTower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterTower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterTower) ProtoMessage() {}

func (x *EnterTower) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterTower.ProtoReflect.Descriptor instead.
func (*EnterTower) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{7}
}

func (x *EnterTower) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EnterTower_Cmd
}

func (x *EnterTower) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EnterTower_Param
}

func (x *EnterTower) GetLayer() uint32 {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return Default_EnterTower_Layer
}

func (x *EnterTower) GetUserid() uint64 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return Default_EnterTower_Userid
}

func (x *EnterTower) GetZoneid() uint32 {
	if x != nil && x.Zoneid != nil {
		return *x.Zoneid
	}
	return Default_EnterTower_Zoneid
}

func (x *EnterTower) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return Default_EnterTower_Time
}

func (x *EnterTower) GetSign() string {
	if x != nil && x.Sign != nil {
		return *x.Sign
	}
	return ""
}

func (x *EnterTower) GetGomaptype() uint32 {
	if x != nil && x.Gomaptype != nil {
		return *x.Gomaptype
	}
	return Default_EnterTower_Gomaptype
}

type UserTowerInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param     *TowerParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=7" json:"param,omitempty"`
	Usertower *UserTowerInfo `protobuf:"bytes,3,opt,name=usertower" json:"usertower,omitempty"`
}

// Default values for UserTowerInfoCmd fields.
const (
	Default_UserTowerInfoCmd_Cmd   = Command_INFINITE_TOWER_PROTOCMD
	Default_UserTowerInfoCmd_Param = TowerParam_ETOWERPARAM_USERTOWERINFO
)

func (x *UserTowerInfoCmd) Reset() {
	*x = UserTowerInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTowerInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTowerInfoCmd) ProtoMessage() {}

func (x *UserTowerInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTowerInfoCmd.ProtoReflect.Descriptor instead.
func (*UserTowerInfoCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{8}
}

func (x *UserTowerInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UserTowerInfoCmd_Cmd
}

func (x *UserTowerInfoCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UserTowerInfoCmd_Param
}

func (x *UserTowerInfoCmd) GetUsertower() *UserTowerInfo {
	if x != nil {
		return x.Usertower
	}
	return nil
}

type TowerLayerSyncTowerCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param *TowerParam `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=8" json:"param,omitempty"`
	Layer *uint32     `protobuf:"varint,3,opt,name=layer,def=0" json:"layer,omitempty"`
}

// Default values for TowerLayerSyncTowerCmd fields.
const (
	Default_TowerLayerSyncTowerCmd_Cmd   = Command_INFINITE_TOWER_PROTOCMD
	Default_TowerLayerSyncTowerCmd_Param = TowerParam_ETOWERPARAM_LAYER_SYNC
	Default_TowerLayerSyncTowerCmd_Layer = uint32(0)
)

func (x *TowerLayerSyncTowerCmd) Reset() {
	*x = TowerLayerSyncTowerCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerLayerSyncTowerCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerLayerSyncTowerCmd) ProtoMessage() {}

func (x *TowerLayerSyncTowerCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerLayerSyncTowerCmd.ProtoReflect.Descriptor instead.
func (*TowerLayerSyncTowerCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{9}
}

func (x *TowerLayerSyncTowerCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TowerLayerSyncTowerCmd_Cmd
}

func (x *TowerLayerSyncTowerCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TowerLayerSyncTowerCmd_Param
}

func (x *TowerLayerSyncTowerCmd) GetLayer() uint32 {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return Default_TowerLayerSyncTowerCmd_Layer
}

type TowerInfoCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param       *TowerParam `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=10" json:"param,omitempty"`
	Maxlayer    *uint32     `protobuf:"varint,3,opt,name=maxlayer,def=0" json:"maxlayer,omitempty"`
	Refreshtime *uint32     `protobuf:"varint,4,opt,name=refreshtime,def=0" json:"refreshtime,omitempty"`
}

// Default values for TowerInfoCmd fields.
const (
	Default_TowerInfoCmd_Cmd         = Command_INFINITE_TOWER_PROTOCMD
	Default_TowerInfoCmd_Param       = TowerParam_ETOWERPARAM_TOWERINFO
	Default_TowerInfoCmd_Maxlayer    = uint32(0)
	Default_TowerInfoCmd_Refreshtime = uint32(0)
)

func (x *TowerInfoCmd) Reset() {
	*x = TowerInfoCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerInfoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerInfoCmd) ProtoMessage() {}

func (x *TowerInfoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerInfoCmd.ProtoReflect.Descriptor instead.
func (*TowerInfoCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{10}
}

func (x *TowerInfoCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_TowerInfoCmd_Cmd
}

func (x *TowerInfoCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_TowerInfoCmd_Param
}

func (x *TowerInfoCmd) GetMaxlayer() uint32 {
	if x != nil && x.Maxlayer != nil {
		return *x.Maxlayer
	}
	return Default_TowerInfoCmd_Maxlayer
}

func (x *TowerInfoCmd) GetRefreshtime() uint32 {
	if x != nil && x.Refreshtime != nil {
		return *x.Refreshtime
	}
	return Default_TowerInfoCmd_Refreshtime
}

type NewEverLayerTowerCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command          `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=20" json:"cmd,omitempty"`
	Param  *TowerParam       `protobuf:"varint,2,opt,name=param,enum=Cmd.TowerParam,def=9" json:"param,omitempty"`
	Layers []*UserTowerLayer `protobuf:"bytes,3,rep,name=layers" json:"layers,omitempty"`
}

// Default values for NewEverLayerTowerCmd fields.
const (
	Default_NewEverLayerTowerCmd_Cmd   = Command_INFINITE_TOWER_PROTOCMD
	Default_NewEverLayerTowerCmd_Param = TowerParam_ETOWERPARAM_NEW_EVERLAYER
)

func (x *NewEverLayerTowerCmd) Reset() {
	*x = NewEverLayerTowerCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InfiniteTower_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEverLayerTowerCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEverLayerTowerCmd) ProtoMessage() {}

func (x *NewEverLayerTowerCmd) ProtoReflect() protoreflect.Message {
	mi := &file_InfiniteTower_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEverLayerTowerCmd.ProtoReflect.Descriptor instead.
func (*NewEverLayerTowerCmd) Descriptor() ([]byte, []int) {
	return file_InfiniteTower_proto_rawDescGZIP(), []int{11}
}

func (x *NewEverLayerTowerCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NewEverLayerTowerCmd_Cmd
}

func (x *NewEverLayerTowerCmd) GetParam() TowerParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NewEverLayerTowerCmd_Param
}

func (x *NewEverLayerTowerCmd) GetLayers() []*UserTowerLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

var File_InfiniteTower_proto protoreflect.FileDescriptor

var file_InfiniteTower_proto_rawDesc = []byte{
	0x0a, 0x13, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x22, 0x88, 0x02,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x23, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x6d, 0x61, 0x78, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x6d, 0x61, 0x78, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x65,
	0x76, 0x65, 0x72, 0x70, 0x61, 0x73, 0x73, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x72, 0x70, 0x61,
	0x73, 0x73, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x61,
	0x6d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45,
	0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x19, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x19, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x8c, 0x02, 0x0a,
	0x13, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1c, 0x45,
	0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x54,
	0x4f, 0x57, 0x45, 0x52, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x54, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x09, 0x74, 0x65,
	0x61, 0x6d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x12,
	0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49,
	0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x12, 0x45, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x08, 0x69, 0x73, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x08, 0x69, 0x73, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x54, 0x65,
	0x61, 0x6d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6d, 0x64, 0x12,
	0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49, 0x4e, 0x46, 0x49,
	0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x11, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x3e, 0x0a, 0x06, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x3a, 0x14, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x52, 0x06, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x19, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0x9f, 0x02,
	0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54,
	0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x7a, 0x6f, 0x6e,
	0x65, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1f,
	0x0a, 0x09, 0x67, 0x6f, 0x6d, 0x61, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x67, 0x6f, 0x6d, 0x61, 0x70, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xbf, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x45,
	0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x54,
	0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x30, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54,
	0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xc9, 0x01,
	0x0a, 0x0c, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x37,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49, 0x4e, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x54, 0x6f, 0x77,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x4e, 0x65,
	0x77, 0x45, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x17, 0x49,
	0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x45, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x45, 0x56, 0x45,
	0x52, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a,
	0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2a, 0x8d, 0x02, 0x0a, 0x0a, 0x54,
	0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x54, 0x4f, 0x57,
	0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x54, 0x4f, 0x57,
	0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x54, 0x4f, 0x57, 0x45,
	0x52, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x54,
	0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x08,
	0x12, 0x1d, 0x0a, 0x19, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x4e, 0x45, 0x57, 0x5f, 0x45, 0x56, 0x45, 0x52, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x09, 0x12,
	0x19, 0x0a, 0x15, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x54,
	0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0a, 0x2a, 0x3e, 0x0a, 0x0b, 0x45, 0x54,
	0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x54, 0x4f,
	0x57, 0x45, 0x52, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x02,
}

var (
	file_InfiniteTower_proto_rawDescOnce sync.Once
	file_InfiniteTower_proto_rawDescData = file_InfiniteTower_proto_rawDesc
)

func file_InfiniteTower_proto_rawDescGZIP() []byte {
	file_InfiniteTower_proto_rawDescOnce.Do(func() {
		file_InfiniteTower_proto_rawDescData = protoimpl.X.CompressGZIP(file_InfiniteTower_proto_rawDescData)
	})
	return file_InfiniteTower_proto_rawDescData
}

var file_InfiniteTower_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_InfiniteTower_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_InfiniteTower_proto_goTypes = []interface{}{
	(TowerParam)(0),                // 0: Cmd.TowerParam
	(ETowerReply)(0),               // 1: Cmd.ETowerReply
	(*UserTowerLayer)(nil),         // 2: Cmd.UserTowerLayer
	(*UserTowerInfo)(nil),          // 3: Cmd.UserTowerInfo
	(*TeamTowerSummary)(nil),       // 4: Cmd.TeamTowerSummary
	(*TeamTowerInfoCmd)(nil),       // 5: Cmd.TeamTowerInfoCmd
	(*TeamTowerSummaryCmd)(nil),    // 6: Cmd.TeamTowerSummaryCmd
	(*TeamTowerInviteCmd)(nil),     // 7: Cmd.TeamTowerInviteCmd
	(*TeamTowerReplyCmd)(nil),      // 8: Cmd.TeamTowerReplyCmd
	(*EnterTower)(nil),             // 9: Cmd.EnterTower
	(*UserTowerInfoCmd)(nil),       // 10: Cmd.UserTowerInfoCmd
	(*TowerLayerSyncTowerCmd)(nil), // 11: Cmd.TowerLayerSyncTowerCmd
	(*TowerInfoCmd)(nil),           // 12: Cmd.TowerInfoCmd
	(*NewEverLayerTowerCmd)(nil),   // 13: Cmd.NewEverLayerTowerCmd
	(Command)(0),                   // 14: Cmd.Command
}
var file_InfiniteTower_proto_depIdxs = []int32{
	2,  // 0: Cmd.UserTowerInfo.layers:type_name -> Cmd.UserTowerLayer
	2,  // 1: Cmd.UserTowerInfo.everpasslayers:type_name -> Cmd.UserTowerLayer
	3,  // 2: Cmd.TeamTowerSummary.leadertower:type_name -> Cmd.UserTowerInfo
	14, // 3: Cmd.TeamTowerInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.TeamTowerInfoCmd.param:type_name -> Cmd.TowerParam
	14, // 5: Cmd.TeamTowerSummaryCmd.cmd:type_name -> Cmd.Command
	0,  // 6: Cmd.TeamTowerSummaryCmd.param:type_name -> Cmd.TowerParam
	4,  // 7: Cmd.TeamTowerSummaryCmd.teamtower:type_name -> Cmd.TeamTowerSummary
	14, // 8: Cmd.TeamTowerInviteCmd.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.TeamTowerInviteCmd.param:type_name -> Cmd.TowerParam
	14, // 10: Cmd.TeamTowerReplyCmd.cmd:type_name -> Cmd.Command
	0,  // 11: Cmd.TeamTowerReplyCmd.param:type_name -> Cmd.TowerParam
	1,  // 12: Cmd.TeamTowerReplyCmd.eReply:type_name -> Cmd.ETowerReply
	14, // 13: Cmd.EnterTower.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.EnterTower.param:type_name -> Cmd.TowerParam
	14, // 15: Cmd.UserTowerInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 16: Cmd.UserTowerInfoCmd.param:type_name -> Cmd.TowerParam
	3,  // 17: Cmd.UserTowerInfoCmd.usertower:type_name -> Cmd.UserTowerInfo
	14, // 18: Cmd.TowerLayerSyncTowerCmd.cmd:type_name -> Cmd.Command
	0,  // 19: Cmd.TowerLayerSyncTowerCmd.param:type_name -> Cmd.TowerParam
	14, // 20: Cmd.TowerInfoCmd.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.TowerInfoCmd.param:type_name -> Cmd.TowerParam
	14, // 22: Cmd.NewEverLayerTowerCmd.cmd:type_name -> Cmd.Command
	0,  // 23: Cmd.NewEverLayerTowerCmd.param:type_name -> Cmd.TowerParam
	2,  // 24: Cmd.NewEverLayerTowerCmd.layers:type_name -> Cmd.UserTowerLayer
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_InfiniteTower_proto_init() }
func file_InfiniteTower_proto_init() {
	if File_InfiniteTower_proto != nil {
		return
	}
	file_xCmd_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_InfiniteTower_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTowerLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTowerSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTowerInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTowerSummaryCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTowerInviteCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTowerReplyCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterTower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTowerInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerLayerSyncTowerCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerInfoCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_InfiniteTower_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEverLayerTowerCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_InfiniteTower_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_InfiniteTower_proto_goTypes,
		DependencyIndexes: file_InfiniteTower_proto_depIdxs,
		EnumInfos:         file_InfiniteTower_proto_enumTypes,
		MessageInfos:      file_InfiniteTower_proto_msgTypes,
	}.Build()
	File_InfiniteTower_proto = out.File
	file_InfiniteTower_proto_rawDesc = nil
	file_InfiniteTower_proto_goTypes = nil
	file_InfiniteTower_proto_depIdxs = nil
}
