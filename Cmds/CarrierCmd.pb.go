// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: CarrierCmd.proto

package Cmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CarrierParam int32

const (
	CarrierParam_MAPPARAM_CARRIER_INFO              CarrierParam = 1
	CarrierParam_MAPPARAM_JOIN_CARRIER              CarrierParam = 2
	CarrierParam_MAPPARAM_RET_JOIN_CARRIER          CarrierParam = 3
	CarrierParam_MAPPARAM_LEAVE_CARRIER             CarrierParam = 4
	CarrierParam_MAPPARAM_CARRIER_MOVE              CarrierParam = 5
	CarrierParam_MAPPARAM_CREATE_CARRIER            CarrierParam = 6
	CarrierParam_MAPPARAM_CARRIER_START             CarrierParam = 7
	CarrierParam_MAPPARAM_CARRIER_WAIT_LIST         CarrierParam = 8
	CarrierParam_MAPPARAM_REACH_CARRIER             CarrierParam = 9
	CarrierParam_MAPPARAM_INVITE_CARRIER            CarrierParam = 10
	CarrierParam_MAPPARAM_CHANGE_CARRIER            CarrierParam = 11
	CarrierParam_MAPPARAM_FERRISWHEEL_INVITE        CarrierParam = 12
	CarrierParam_MAPPARAM_FERRISWHEEL_PROCESSINVITE CarrierParam = 13
	CarrierParam_MAPPARAM_START_FERRISWHEEL         CarrierParam = 14
	CarrierParam_MAPPARAM_CATCH_USER_JOIN_CARRIER   CarrierParam = 15
)

// Enum value maps for CarrierParam.
var (
	CarrierParam_name = map[int32]string{
		1:  "MAPPARAM_CARRIER_INFO",
		2:  "MAPPARAM_JOIN_CARRIER",
		3:  "MAPPARAM_RET_JOIN_CARRIER",
		4:  "MAPPARAM_LEAVE_CARRIER",
		5:  "MAPPARAM_CARRIER_MOVE",
		6:  "MAPPARAM_CREATE_CARRIER",
		7:  "MAPPARAM_CARRIER_START",
		8:  "MAPPARAM_CARRIER_WAIT_LIST",
		9:  "MAPPARAM_REACH_CARRIER",
		10: "MAPPARAM_INVITE_CARRIER",
		11: "MAPPARAM_CHANGE_CARRIER",
		12: "MAPPARAM_FERRISWHEEL_INVITE",
		13: "MAPPARAM_FERRISWHEEL_PROCESSINVITE",
		14: "MAPPARAM_START_FERRISWHEEL",
		15: "MAPPARAM_CATCH_USER_JOIN_CARRIER",
	}
	CarrierParam_value = map[string]int32{
		"MAPPARAM_CARRIER_INFO":              1,
		"MAPPARAM_JOIN_CARRIER":              2,
		"MAPPARAM_RET_JOIN_CARRIER":          3,
		"MAPPARAM_LEAVE_CARRIER":             4,
		"MAPPARAM_CARRIER_MOVE":              5,
		"MAPPARAM_CREATE_CARRIER":            6,
		"MAPPARAM_CARRIER_START":             7,
		"MAPPARAM_CARRIER_WAIT_LIST":         8,
		"MAPPARAM_REACH_CARRIER":             9,
		"MAPPARAM_INVITE_CARRIER":            10,
		"MAPPARAM_CHANGE_CARRIER":            11,
		"MAPPARAM_FERRISWHEEL_INVITE":        12,
		"MAPPARAM_FERRISWHEEL_PROCESSINVITE": 13,
		"MAPPARAM_START_FERRISWHEEL":         14,
		"MAPPARAM_CATCH_USER_JOIN_CARRIER":   15,
	}
)

func (x CarrierParam) Enum() *CarrierParam {
	p := new(CarrierParam)
	*p = x
	return p
}

func (x CarrierParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarrierParam) Descriptor() protoreflect.EnumDescriptor {
	return file_CarrierCmd_proto_enumTypes[0].Descriptor()
}

func (CarrierParam) Type() protoreflect.EnumType {
	return &file_CarrierCmd_proto_enumTypes[0]
}

func (x CarrierParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CarrierParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CarrierParam(num)
	return nil
}

// Deprecated: Use CarrierParam.Descriptor instead.
func (CarrierParam) EnumDescriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{0}
}

type EFerrisAction int32

const (
	EFerrisAction_EFERRISACTION_MIN      EFerrisAction = 0
	EFerrisAction_EFERRISACTION_AGREE    EFerrisAction = 1
	EFerrisAction_EFERRISACTION_DISAGREE EFerrisAction = 2
	EFerrisAction_EFERRISACTION_MAX      EFerrisAction = 3
)

// Enum value maps for EFerrisAction.
var (
	EFerrisAction_name = map[int32]string{
		0: "EFERRISACTION_MIN",
		1: "EFERRISACTION_AGREE",
		2: "EFERRISACTION_DISAGREE",
		3: "EFERRISACTION_MAX",
	}
	EFerrisAction_value = map[string]int32{
		"EFERRISACTION_MIN":      0,
		"EFERRISACTION_AGREE":    1,
		"EFERRISACTION_DISAGREE": 2,
		"EFERRISACTION_MAX":      3,
	}
)

func (x EFerrisAction) Enum() *EFerrisAction {
	p := new(EFerrisAction)
	*p = x
	return p
}

func (x EFerrisAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EFerrisAction) Descriptor() protoreflect.EnumDescriptor {
	return file_CarrierCmd_proto_enumTypes[1].Descriptor()
}

func (EFerrisAction) Type() protoreflect.EnumType {
	return &file_CarrierCmd_proto_enumTypes[1]
}

func (x EFerrisAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EFerrisAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EFerrisAction(num)
	return nil
}

// Deprecated: Use EFerrisAction.Descriptor instead.
func (EFerrisAction) EnumDescriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{1}
}

type CarrierMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Index *uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Name  *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *CarrierMember) Reset() {
	*x = CarrierMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierMember) ProtoMessage() {}

func (x *CarrierMember) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierMember.ProtoReflect.Descriptor instead.
func (*CarrierMember) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{0}
}

func (x *CarrierMember) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CarrierMember) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CarrierMember) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CarrierInfoUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd           *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param         *CarrierParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=1" json:"param,omitempty"`
	Carrierid     *uint32          `protobuf:"varint,3,opt,name=carrierid" json:"carrierid,omitempty"`
	Masterid      *uint64          `protobuf:"varint,4,opt,name=masterid" json:"masterid,omitempty"`
	Members       []*CarrierMember `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	Needanimation *uint32          `protobuf:"varint,6,opt,name=needanimation,def=1" json:"needanimation,omitempty"`
}

// Default values for CarrierInfoUserCmd fields.
const (
	Default_CarrierInfoUserCmd_Cmd           = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CarrierInfoUserCmd_Param         = CarrierParam_MAPPARAM_CARRIER_INFO
	Default_CarrierInfoUserCmd_Needanimation = uint32(1)
)

func (x *CarrierInfoUserCmd) Reset() {
	*x = CarrierInfoUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierInfoUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierInfoUserCmd) ProtoMessage() {}

func (x *CarrierInfoUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierInfoUserCmd.ProtoReflect.Descriptor instead.
func (*CarrierInfoUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{1}
}

func (x *CarrierInfoUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CarrierInfoUserCmd_Cmd
}

func (x *CarrierInfoUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CarrierInfoUserCmd_Param
}

func (x *CarrierInfoUserCmd) GetCarrierid() uint32 {
	if x != nil && x.Carrierid != nil {
		return *x.Carrierid
	}
	return 0
}

func (x *CarrierInfoUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

func (x *CarrierInfoUserCmd) GetMembers() []*CarrierMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CarrierInfoUserCmd) GetNeedanimation() uint32 {
	if x != nil && x.Needanimation != nil {
		return *x.Needanimation
	}
	return Default_CarrierInfoUserCmd_Needanimation
}

type CreateCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param     *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=6" json:"param,omitempty"`
	Carrierid *uint32       `protobuf:"varint,3,opt,name=carrierid" json:"carrierid,omitempty"`
	Line      *uint32       `protobuf:"varint,4,opt,name=line" json:"line,omitempty"`
}

// Default values for CreateCarrierUserCmd fields.
const (
	Default_CreateCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CreateCarrierUserCmd_Param = CarrierParam_MAPPARAM_CREATE_CARRIER
)

func (x *CreateCarrierUserCmd) Reset() {
	*x = CreateCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCarrierUserCmd) ProtoMessage() {}

func (x *CreateCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*CreateCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CreateCarrierUserCmd_Cmd
}

func (x *CreateCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CreateCarrierUserCmd_Param
}

func (x *CreateCarrierUserCmd) GetCarrierid() uint32 {
	if x != nil && x.Carrierid != nil {
		return *x.Carrierid
	}
	return 0
}

func (x *CreateCarrierUserCmd) GetLine() uint32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

type InviteCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param      *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=10" json:"param,omitempty"`
	Masterid   *uint64       `protobuf:"varint,3,opt,name=masterid" json:"masterid,omitempty"`
	Mastername *string       `protobuf:"bytes,4,opt,name=mastername" json:"mastername,omitempty"`
	Carrierid  *uint32       `protobuf:"varint,5,opt,name=carrierid" json:"carrierid,omitempty"`
}

// Default values for InviteCarrierUserCmd fields.
const (
	Default_InviteCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_InviteCarrierUserCmd_Param = CarrierParam_MAPPARAM_INVITE_CARRIER
)

func (x *InviteCarrierUserCmd) Reset() {
	*x = InviteCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteCarrierUserCmd) ProtoMessage() {}

func (x *InviteCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*InviteCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{3}
}

func (x *InviteCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_InviteCarrierUserCmd_Cmd
}

func (x *InviteCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_InviteCarrierUserCmd_Param
}

func (x *InviteCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

func (x *InviteCarrierUserCmd) GetMastername() string {
	if x != nil && x.Mastername != nil {
		return *x.Mastername
	}
	return ""
}

func (x *InviteCarrierUserCmd) GetCarrierid() uint32 {
	if x != nil && x.Carrierid != nil {
		return *x.Carrierid
	}
	return 0
}

type JoinCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param      *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=2" json:"param,omitempty"`
	Masterid   *uint64       `protobuf:"varint,3,opt,name=masterid" json:"masterid,omitempty"`
	Mastername *string       `protobuf:"bytes,4,opt,name=mastername" json:"mastername,omitempty"`
	Carrierid  *uint32       `protobuf:"varint,5,opt,name=carrierid" json:"carrierid,omitempty"`
	Agree      *bool         `protobuf:"varint,6,opt,name=agree" json:"agree,omitempty"`
}

// Default values for JoinCarrierUserCmd fields.
const (
	Default_JoinCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_JoinCarrierUserCmd_Param = CarrierParam_MAPPARAM_JOIN_CARRIER
)

func (x *JoinCarrierUserCmd) Reset() {
	*x = JoinCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCarrierUserCmd) ProtoMessage() {}

func (x *JoinCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*JoinCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{4}
}

func (x *JoinCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_JoinCarrierUserCmd_Cmd
}

func (x *JoinCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_JoinCarrierUserCmd_Param
}

func (x *JoinCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

func (x *JoinCarrierUserCmd) GetMastername() string {
	if x != nil && x.Mastername != nil {
		return *x.Mastername
	}
	return ""
}

func (x *JoinCarrierUserCmd) GetCarrierid() uint32 {
	if x != nil && x.Carrierid != nil {
		return *x.Carrierid
	}
	return 0
}

func (x *JoinCarrierUserCmd) GetAgree() bool {
	if x != nil && x.Agree != nil {
		return *x.Agree
	}
	return false
}

type RetJoinCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param      *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=3" json:"param,omitempty"`
	Membername *string       `protobuf:"bytes,3,opt,name=membername" json:"membername,omitempty"`
	Agree      *bool         `protobuf:"varint,4,opt,name=agree" json:"agree,omitempty"`
	Memberid   *uint64       `protobuf:"varint,5,opt,name=memberid" json:"memberid,omitempty"`
	Masterid   *uint64       `protobuf:"varint,6,opt,name=masterid" json:"masterid,omitempty"`
}

// Default values for RetJoinCarrierUserCmd fields.
const (
	Default_RetJoinCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_RetJoinCarrierUserCmd_Param = CarrierParam_MAPPARAM_RET_JOIN_CARRIER
)

func (x *RetJoinCarrierUserCmd) Reset() {
	*x = RetJoinCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetJoinCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetJoinCarrierUserCmd) ProtoMessage() {}

func (x *RetJoinCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetJoinCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*RetJoinCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{5}
}

func (x *RetJoinCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_RetJoinCarrierUserCmd_Cmd
}

func (x *RetJoinCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_RetJoinCarrierUserCmd_Param
}

func (x *RetJoinCarrierUserCmd) GetMembername() string {
	if x != nil && x.Membername != nil {
		return *x.Membername
	}
	return ""
}

func (x *RetJoinCarrierUserCmd) GetAgree() bool {
	if x != nil && x.Agree != nil {
		return *x.Agree
	}
	return false
}

func (x *RetJoinCarrierUserCmd) GetMemberid() uint64 {
	if x != nil && x.Memberid != nil {
		return *x.Memberid
	}
	return 0
}

func (x *RetJoinCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

type LeaveCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param       *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=4" json:"param,omitempty"`
	Charid      *uint64       `protobuf:"varint,3,opt,name=charid" json:"charid,omitempty"`
	Pos         *ScenePos     `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
	Masterid    *uint64       `protobuf:"varint,5,opt,name=masterid" json:"masterid,omitempty"`
	Newmasterid *uint64       `protobuf:"varint,6,opt,name=newmasterid" json:"newmasterid,omitempty"`
	All         *bool         `protobuf:"varint,7,opt,name=all,def=0" json:"all,omitempty"`
}

// Default values for LeaveCarrierUserCmd fields.
const (
	Default_LeaveCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_LeaveCarrierUserCmd_Param = CarrierParam_MAPPARAM_LEAVE_CARRIER
	Default_LeaveCarrierUserCmd_All   = bool(false)
)

func (x *LeaveCarrierUserCmd) Reset() {
	*x = LeaveCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveCarrierUserCmd) ProtoMessage() {}

func (x *LeaveCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*LeaveCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{6}
}

func (x *LeaveCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_LeaveCarrierUserCmd_Cmd
}

func (x *LeaveCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_LeaveCarrierUserCmd_Param
}

func (x *LeaveCarrierUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *LeaveCarrierUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *LeaveCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

func (x *LeaveCarrierUserCmd) GetNewmasterid() uint64 {
	if x != nil && x.Newmasterid != nil {
		return *x.Newmasterid
	}
	return 0
}

func (x *LeaveCarrierUserCmd) GetAll() bool {
	if x != nil && x.All != nil {
		return *x.All
	}
	return Default_LeaveCarrierUserCmd_All
}

type ReachCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=9" json:"param,omitempty"`
	Pos      *ScenePos     `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
	Masterid *uint64       `protobuf:"varint,4,opt,name=masterid" json:"masterid,omitempty"`
}

// Default values for ReachCarrierUserCmd fields.
const (
	Default_ReachCarrierUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_ReachCarrierUserCmd_Param = CarrierParam_MAPPARAM_REACH_CARRIER
)

func (x *ReachCarrierUserCmd) Reset() {
	*x = ReachCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReachCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachCarrierUserCmd) ProtoMessage() {}

func (x *ReachCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*ReachCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{7}
}

func (x *ReachCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ReachCarrierUserCmd_Cmd
}

func (x *ReachCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ReachCarrierUserCmd_Param
}

func (x *ReachCarrierUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *ReachCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

type CarrierMoveUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=5" json:"param,omitempty"`
	Pos      *ScenePos     `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
	Progress *uint32       `protobuf:"varint,4,opt,name=progress" json:"progress,omitempty"`
	Masterid *uint64       `protobuf:"varint,5,opt,name=masterid" json:"masterid,omitempty"`
}

// Default values for CarrierMoveUserCmd fields.
const (
	Default_CarrierMoveUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CarrierMoveUserCmd_Param = CarrierParam_MAPPARAM_CARRIER_MOVE
)

func (x *CarrierMoveUserCmd) Reset() {
	*x = CarrierMoveUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierMoveUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierMoveUserCmd) ProtoMessage() {}

func (x *CarrierMoveUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierMoveUserCmd.ProtoReflect.Descriptor instead.
func (*CarrierMoveUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{8}
}

func (x *CarrierMoveUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CarrierMoveUserCmd_Cmd
}

func (x *CarrierMoveUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CarrierMoveUserCmd_Param
}

func (x *CarrierMoveUserCmd) GetPos() *ScenePos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *CarrierMoveUserCmd) GetProgress() uint32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *CarrierMoveUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

type CarrierStartUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=7" json:"param,omitempty"`
	Line     *uint32       `protobuf:"varint,3,opt,name=line" json:"line,omitempty"`
	Masterid *uint64       `protobuf:"varint,4,opt,name=masterid" json:"masterid,omitempty"`
}

// Default values for CarrierStartUserCmd fields.
const (
	Default_CarrierStartUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CarrierStartUserCmd_Param = CarrierParam_MAPPARAM_CARRIER_START
)

func (x *CarrierStartUserCmd) Reset() {
	*x = CarrierStartUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierStartUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierStartUserCmd) ProtoMessage() {}

func (x *CarrierStartUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierStartUserCmd.ProtoReflect.Descriptor instead.
func (*CarrierStartUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{9}
}

func (x *CarrierStartUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CarrierStartUserCmd_Cmd
}

func (x *CarrierStartUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CarrierStartUserCmd_Param
}

func (x *CarrierStartUserCmd) GetLine() uint32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *CarrierStartUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

type CarrierWaitListUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam    `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=8" json:"param,omitempty"`
	Members  []*CarrierMember `protobuf:"bytes,3,rep,name=members" json:"members,omitempty"`
	Masterid *uint64          `protobuf:"varint,4,opt,name=masterid" json:"masterid,omitempty"`
}

// Default values for CarrierWaitListUserCmd fields.
const (
	Default_CarrierWaitListUserCmd_Cmd   = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CarrierWaitListUserCmd_Param = CarrierParam_MAPPARAM_CARRIER_WAIT_LIST
)

func (x *CarrierWaitListUserCmd) Reset() {
	*x = CarrierWaitListUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierWaitListUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierWaitListUserCmd) ProtoMessage() {}

func (x *CarrierWaitListUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierWaitListUserCmd.ProtoReflect.Descriptor instead.
func (*CarrierWaitListUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{10}
}

func (x *CarrierWaitListUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CarrierWaitListUserCmd_Cmd
}

func (x *CarrierWaitListUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CarrierWaitListUserCmd_Param
}

func (x *CarrierWaitListUserCmd) GetMembers() []*CarrierMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CarrierWaitListUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return 0
}

type ChangeCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param     *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=11" json:"param,omitempty"`
	Carrierid *uint32       `protobuf:"varint,3,opt,name=carrierid,def=0" json:"carrierid,omitempty"`
	Masterid  *uint64       `protobuf:"varint,4,opt,name=masterid,def=0" json:"masterid,omitempty"`
}

// Default values for ChangeCarrierUserCmd fields.
const (
	Default_ChangeCarrierUserCmd_Cmd       = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_ChangeCarrierUserCmd_Param     = CarrierParam_MAPPARAM_CHANGE_CARRIER
	Default_ChangeCarrierUserCmd_Carrierid = uint32(0)
	Default_ChangeCarrierUserCmd_Masterid  = uint64(0)
)

func (x *ChangeCarrierUserCmd) Reset() {
	*x = ChangeCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCarrierUserCmd) ProtoMessage() {}

func (x *ChangeCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*ChangeCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ChangeCarrierUserCmd_Cmd
}

func (x *ChangeCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ChangeCarrierUserCmd_Param
}

func (x *ChangeCarrierUserCmd) GetCarrierid() uint32 {
	if x != nil && x.Carrierid != nil {
		return *x.Carrierid
	}
	return Default_ChangeCarrierUserCmd_Carrierid
}

func (x *ChangeCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return Default_ChangeCarrierUserCmd_Masterid
}

type FerrisWheelInviteCarrierCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param      *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=12" json:"param,omitempty"`
	Targetid   *uint64       `protobuf:"varint,3,opt,name=targetid,def=0" json:"targetid,omitempty"`
	Targetname *string       `protobuf:"bytes,4,opt,name=targetname" json:"targetname,omitempty"`
	Id         *uint32       `protobuf:"varint,5,opt,name=id,def=1" json:"id,omitempty"`
}

// Default values for FerrisWheelInviteCarrierCmd fields.
const (
	Default_FerrisWheelInviteCarrierCmd_Cmd      = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_FerrisWheelInviteCarrierCmd_Param    = CarrierParam_MAPPARAM_FERRISWHEEL_INVITE
	Default_FerrisWheelInviteCarrierCmd_Targetid = uint64(0)
	Default_FerrisWheelInviteCarrierCmd_Id       = uint32(1)
)

func (x *FerrisWheelInviteCarrierCmd) Reset() {
	*x = FerrisWheelInviteCarrierCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FerrisWheelInviteCarrierCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FerrisWheelInviteCarrierCmd) ProtoMessage() {}

func (x *FerrisWheelInviteCarrierCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FerrisWheelInviteCarrierCmd.ProtoReflect.Descriptor instead.
func (*FerrisWheelInviteCarrierCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{12}
}

func (x *FerrisWheelInviteCarrierCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FerrisWheelInviteCarrierCmd_Cmd
}

func (x *FerrisWheelInviteCarrierCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FerrisWheelInviteCarrierCmd_Param
}

func (x *FerrisWheelInviteCarrierCmd) GetTargetid() uint64 {
	if x != nil && x.Targetid != nil {
		return *x.Targetid
	}
	return Default_FerrisWheelInviteCarrierCmd_Targetid
}

func (x *FerrisWheelInviteCarrierCmd) GetTargetname() string {
	if x != nil && x.Targetname != nil {
		return *x.Targetname
	}
	return ""
}

func (x *FerrisWheelInviteCarrierCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_FerrisWheelInviteCarrierCmd_Id
}

type FerrisWheelProcessInviteCarrierCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command       `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam  `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=13" json:"param,omitempty"`
	Targetid *uint64        `protobuf:"varint,3,opt,name=targetid,def=0" json:"targetid,omitempty"`
	Action   *EFerrisAction `protobuf:"varint,4,opt,name=action,enum=Cmd.EFerrisAction,def=0" json:"action,omitempty"`
	Id       *uint32        `protobuf:"varint,5,opt,name=id,def=1" json:"id,omitempty"`
}

// Default values for FerrisWheelProcessInviteCarrierCmd fields.
const (
	Default_FerrisWheelProcessInviteCarrierCmd_Cmd      = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_FerrisWheelProcessInviteCarrierCmd_Param    = CarrierParam_MAPPARAM_FERRISWHEEL_PROCESSINVITE
	Default_FerrisWheelProcessInviteCarrierCmd_Targetid = uint64(0)
	Default_FerrisWheelProcessInviteCarrierCmd_Action   = EFerrisAction_EFERRISACTION_MIN
	Default_FerrisWheelProcessInviteCarrierCmd_Id       = uint32(1)
)

func (x *FerrisWheelProcessInviteCarrierCmd) Reset() {
	*x = FerrisWheelProcessInviteCarrierCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FerrisWheelProcessInviteCarrierCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FerrisWheelProcessInviteCarrierCmd) ProtoMessage() {}

func (x *FerrisWheelProcessInviteCarrierCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FerrisWheelProcessInviteCarrierCmd.ProtoReflect.Descriptor instead.
func (*FerrisWheelProcessInviteCarrierCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{13}
}

func (x *FerrisWheelProcessInviteCarrierCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FerrisWheelProcessInviteCarrierCmd_Cmd
}

func (x *FerrisWheelProcessInviteCarrierCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FerrisWheelProcessInviteCarrierCmd_Param
}

func (x *FerrisWheelProcessInviteCarrierCmd) GetTargetid() uint64 {
	if x != nil && x.Targetid != nil {
		return *x.Targetid
	}
	return Default_FerrisWheelProcessInviteCarrierCmd_Targetid
}

func (x *FerrisWheelProcessInviteCarrierCmd) GetAction() EFerrisAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return Default_FerrisWheelProcessInviteCarrierCmd_Action
}

func (x *FerrisWheelProcessInviteCarrierCmd) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_FerrisWheelProcessInviteCarrierCmd_Id
}

type StartFerrisWheelUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=14" json:"param,omitempty"`
	Charid   *uint64       `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Masterid *uint64       `protobuf:"varint,4,opt,name=masterid,def=0" json:"masterid,omitempty"`
}

// Default values for StartFerrisWheelUserCmd fields.
const (
	Default_StartFerrisWheelUserCmd_Cmd      = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_StartFerrisWheelUserCmd_Param    = CarrierParam_MAPPARAM_START_FERRISWHEEL
	Default_StartFerrisWheelUserCmd_Charid   = uint64(0)
	Default_StartFerrisWheelUserCmd_Masterid = uint64(0)
)

func (x *StartFerrisWheelUserCmd) Reset() {
	*x = StartFerrisWheelUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFerrisWheelUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFerrisWheelUserCmd) ProtoMessage() {}

func (x *StartFerrisWheelUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFerrisWheelUserCmd.ProtoReflect.Descriptor instead.
func (*StartFerrisWheelUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{14}
}

func (x *StartFerrisWheelUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_StartFerrisWheelUserCmd_Cmd
}

func (x *StartFerrisWheelUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_StartFerrisWheelUserCmd_Param
}

func (x *StartFerrisWheelUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_StartFerrisWheelUserCmd_Charid
}

func (x *StartFerrisWheelUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return Default_StartFerrisWheelUserCmd_Masterid
}

type CatchUserJoinCarrierUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=16" json:"cmd,omitempty"`
	Param    *CarrierParam `protobuf:"varint,2,opt,name=param,enum=Cmd.CarrierParam,def=15" json:"param,omitempty"`
	Charid   *uint64       `protobuf:"varint,3,opt,name=charid,def=0" json:"charid,omitempty"`
	Masterid *uint64       `protobuf:"varint,4,opt,name=masterid,def=0" json:"masterid,omitempty"`
	Mapid    *uint32       `protobuf:"varint,5,opt,name=mapid,def=0" json:"mapid,omitempty"`
}

// Default values for CatchUserJoinCarrierUserCmd fields.
const (
	Default_CatchUserJoinCarrierUserCmd_Cmd      = Command_SCENE_USER_CARRIER_PROTOCMD
	Default_CatchUserJoinCarrierUserCmd_Param    = CarrierParam_MAPPARAM_CATCH_USER_JOIN_CARRIER
	Default_CatchUserJoinCarrierUserCmd_Charid   = uint64(0)
	Default_CatchUserJoinCarrierUserCmd_Masterid = uint64(0)
	Default_CatchUserJoinCarrierUserCmd_Mapid    = uint32(0)
)

func (x *CatchUserJoinCarrierUserCmd) Reset() {
	*x = CatchUserJoinCarrierUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CarrierCmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchUserJoinCarrierUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchUserJoinCarrierUserCmd) ProtoMessage() {}

func (x *CatchUserJoinCarrierUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_CarrierCmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchUserJoinCarrierUserCmd.ProtoReflect.Descriptor instead.
func (*CatchUserJoinCarrierUserCmd) Descriptor() ([]byte, []int) {
	return file_CarrierCmd_proto_rawDescGZIP(), []int{15}
}

func (x *CatchUserJoinCarrierUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_CatchUserJoinCarrierUserCmd_Cmd
}

func (x *CatchUserJoinCarrierUserCmd) GetParam() CarrierParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CatchUserJoinCarrierUserCmd_Param
}

func (x *CatchUserJoinCarrierUserCmd) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return Default_CatchUserJoinCarrierUserCmd_Charid
}

func (x *CatchUserJoinCarrierUserCmd) GetMasterid() uint64 {
	if x != nil && x.Masterid != nil {
		return *x.Masterid
	}
	return Default_CatchUserJoinCarrierUserCmd_Masterid
}

func (x *CatchUserJoinCarrierUserCmd) GetMapid() uint32 {
	if x != nil && x.Mapid != nil {
		return *x.Mapid
	}
	return Default_CatchUserJoinCarrierUserCmd_Mapid
}

var File_CarrierCmd_proto protoreflect.FileDescriptor

var file_CarrierCmd_proto_rawDesc = []byte{
	0x0a, 0x10, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xa2, 0x02, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12,
	0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a,
	0x0d, 0x6e, 0x65, 0x65, 0x64, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17,
	0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0xef, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x69, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x42, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x19, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x54, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22,
	0xa3, 0x02, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65,
	0x77, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x03,
	0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x63, 0x68, 0x43,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52,
	0x52, 0x49, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x15,
	0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52,
	0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x16, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x16,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x17, 0x4d, 0x41, 0x50, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52,
	0x49, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x1b, 0x46,
	0x65, 0x72, 0x72, 0x69, 0x73, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1b, 0x4d, 0x41, 0x50, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x9f, 0x02, 0x0a, 0x22, 0x46, 0x65, 0x72, 0x72, 0x69, 0x73, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1d, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45, 0x46, 0x65, 0x72, 0x72, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x11, 0x45, 0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xd5, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x65, 0x72, 0x72, 0x69,
	0x73, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1a, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x46, 0x45, 0x52,
	0x52, 0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x1b, 0x43, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x1b, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x20, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x19, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x08,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x69, 0x64, 0x2a, 0xd8, 0x03, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4d,
	0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x52, 0x49, 0x45, 0x52, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10,
	0x05, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x06, 0x12, 0x1a,
	0x0a, 0x16, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x41,
	0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52,
	0x52, 0x49, 0x45, 0x52, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x0b,
	0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x45, 0x52,
	0x52, 0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10,
	0x0c, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x41, 0x50, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x45,
	0x52, 0x52, 0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x50,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x46, 0x45, 0x52, 0x52,
	0x49, 0x53, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x10, 0x0e, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41, 0x50,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x0f, 0x2a,
	0x72, 0x0a, 0x0d, 0x45, 0x46, 0x65, 0x72, 0x72, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x46, 0x45, 0x52, 0x52,
	0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x45, 0x46, 0x45, 0x52, 0x52, 0x49, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41,
	0x58, 0x10, 0x03,
}

var (
	file_CarrierCmd_proto_rawDescOnce sync.Once
	file_CarrierCmd_proto_rawDescData = file_CarrierCmd_proto_rawDesc
)

func file_CarrierCmd_proto_rawDescGZIP() []byte {
	file_CarrierCmd_proto_rawDescOnce.Do(func() {
		file_CarrierCmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_CarrierCmd_proto_rawDescData)
	})
	return file_CarrierCmd_proto_rawDescData
}

var file_CarrierCmd_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_CarrierCmd_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_CarrierCmd_proto_goTypes = []interface{}{
	(CarrierParam)(0),                          // 0: Cmd.CarrierParam
	(EFerrisAction)(0),                         // 1: Cmd.EFerrisAction
	(*CarrierMember)(nil),                      // 2: Cmd.CarrierMember
	(*CarrierInfoUserCmd)(nil),                 // 3: Cmd.CarrierInfoUserCmd
	(*CreateCarrierUserCmd)(nil),               // 4: Cmd.CreateCarrierUserCmd
	(*InviteCarrierUserCmd)(nil),               // 5: Cmd.InviteCarrierUserCmd
	(*JoinCarrierUserCmd)(nil),                 // 6: Cmd.JoinCarrierUserCmd
	(*RetJoinCarrierUserCmd)(nil),              // 7: Cmd.RetJoinCarrierUserCmd
	(*LeaveCarrierUserCmd)(nil),                // 8: Cmd.LeaveCarrierUserCmd
	(*ReachCarrierUserCmd)(nil),                // 9: Cmd.ReachCarrierUserCmd
	(*CarrierMoveUserCmd)(nil),                 // 10: Cmd.CarrierMoveUserCmd
	(*CarrierStartUserCmd)(nil),                // 11: Cmd.CarrierStartUserCmd
	(*CarrierWaitListUserCmd)(nil),             // 12: Cmd.CarrierWaitListUserCmd
	(*ChangeCarrierUserCmd)(nil),               // 13: Cmd.ChangeCarrierUserCmd
	(*FerrisWheelInviteCarrierCmd)(nil),        // 14: Cmd.FerrisWheelInviteCarrierCmd
	(*FerrisWheelProcessInviteCarrierCmd)(nil), // 15: Cmd.FerrisWheelProcessInviteCarrierCmd
	(*StartFerrisWheelUserCmd)(nil),            // 16: Cmd.StartFerrisWheelUserCmd
	(*CatchUserJoinCarrierUserCmd)(nil),        // 17: Cmd.CatchUserJoinCarrierUserCmd
	(Command)(0),                               // 18: Cmd.Command
	(*ScenePos)(nil),                           // 19: Cmd.ScenePos
}
var file_CarrierCmd_proto_depIdxs = []int32{
	18, // 0: Cmd.CarrierInfoUserCmd.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.CarrierInfoUserCmd.param:type_name -> Cmd.CarrierParam
	2,  // 2: Cmd.CarrierInfoUserCmd.members:type_name -> Cmd.CarrierMember
	18, // 3: Cmd.CreateCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 4: Cmd.CreateCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 5: Cmd.InviteCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 6: Cmd.InviteCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 7: Cmd.JoinCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 8: Cmd.JoinCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 9: Cmd.RetJoinCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 10: Cmd.RetJoinCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 11: Cmd.LeaveCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 12: Cmd.LeaveCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	19, // 13: Cmd.LeaveCarrierUserCmd.pos:type_name -> Cmd.ScenePos
	18, // 14: Cmd.ReachCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 15: Cmd.ReachCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	19, // 16: Cmd.ReachCarrierUserCmd.pos:type_name -> Cmd.ScenePos
	18, // 17: Cmd.CarrierMoveUserCmd.cmd:type_name -> Cmd.Command
	0,  // 18: Cmd.CarrierMoveUserCmd.param:type_name -> Cmd.CarrierParam
	19, // 19: Cmd.CarrierMoveUserCmd.pos:type_name -> Cmd.ScenePos
	18, // 20: Cmd.CarrierStartUserCmd.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.CarrierStartUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 22: Cmd.CarrierWaitListUserCmd.cmd:type_name -> Cmd.Command
	0,  // 23: Cmd.CarrierWaitListUserCmd.param:type_name -> Cmd.CarrierParam
	2,  // 24: Cmd.CarrierWaitListUserCmd.members:type_name -> Cmd.CarrierMember
	18, // 25: Cmd.ChangeCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 26: Cmd.ChangeCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 27: Cmd.FerrisWheelInviteCarrierCmd.cmd:type_name -> Cmd.Command
	0,  // 28: Cmd.FerrisWheelInviteCarrierCmd.param:type_name -> Cmd.CarrierParam
	18, // 29: Cmd.FerrisWheelProcessInviteCarrierCmd.cmd:type_name -> Cmd.Command
	0,  // 30: Cmd.FerrisWheelProcessInviteCarrierCmd.param:type_name -> Cmd.CarrierParam
	1,  // 31: Cmd.FerrisWheelProcessInviteCarrierCmd.action:type_name -> Cmd.EFerrisAction
	18, // 32: Cmd.StartFerrisWheelUserCmd.cmd:type_name -> Cmd.Command
	0,  // 33: Cmd.StartFerrisWheelUserCmd.param:type_name -> Cmd.CarrierParam
	18, // 34: Cmd.CatchUserJoinCarrierUserCmd.cmd:type_name -> Cmd.Command
	0,  // 35: Cmd.CatchUserJoinCarrierUserCmd.param:type_name -> Cmd.CarrierParam
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_CarrierCmd_proto_init() }
func file_CarrierCmd_proto_init() {
	if File_CarrierCmd_proto != nil {
		return
	}
	file_xCmd_proto_init()
	file_ProtoCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_CarrierCmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierInfoUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetJoinCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReachCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierMoveUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierStartUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierWaitListUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FerrisWheelInviteCarrierCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FerrisWheelProcessInviteCarrierCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFerrisWheelUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CarrierCmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchUserJoinCarrierUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CarrierCmd_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CarrierCmd_proto_goTypes,
		DependencyIndexes: file_CarrierCmd_proto_depIdxs,
		EnumInfos:         file_CarrierCmd_proto_enumTypes,
		MessageInfos:      file_CarrierCmd_proto_msgTypes,
	}.Build()
	File_CarrierCmd_proto = out.File
	file_CarrierCmd_proto_rawDesc = nil
	file_CarrierCmd_proto_goTypes = nil
	file_CarrierCmd_proto_depIdxs = nil
}
