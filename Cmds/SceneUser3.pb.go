// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: SceneUser3.proto

package Cmd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type User3Param int32

const (
	User3Param_USER3PARAM_FIRST_DEPOSIT_INFO                  User3Param = 1
	User3Param_USER3PARAM_FIRST_DEPOSIT_REWARD                User3Param = 2
	User3Param_USER3PARAM_CLIENT_PAY_LOG                      User3Param = 3
	User3Param_USER3PARAM_DALIY_DEPOSIT_INFO                  User3Param = 4
	User3Param_USER3PARAM_DALIY_DEPOSIT_GET_REWARD            User3Param = 5
	User3Param_USER3PARAM_BATTLE_TIME_SELECT                  User3Param = 6
	User3Param_USER3PARAM_QUERY_PROFESSION_RECORD_SIMPLE_DATA User3Param = 8
	User3Param_USER3PARAM_PLUGIN_NOTIFY                       User3Param = 9
	User3Param_USER3PARAM_PLUGIN_UPLOAD                       User3Param = 10
	User3Param_USER3PARAM_HERO_BUY                            User3Param = 11
	User3Param_USER3PARAM_HERO_SHOW                           User3Param = 12
	User3Param_USER3PARAM_HERO_GROWTH_QUEST_INFO              User3Param = 13
	User3Param_USER3PARAM_HERO_STORY_QUEST_REWARD             User3Param = 14
	User3Param_USER3PARAM_HERO_STORY_QUEST_INFO               User3Param = 15
	User3Param_USER3PARAM_HERO_STORY_QUEST_ACCEPT             User3Param = 16
	User3Param_USER3PARAM_ACCUM_DEPOSIT_INFO                  User3Param = 17
	User3Param_USER3PARAM_ACCUM_DEPOSIT_REWARD                User3Param = 18
	User3Param_USER3PARAM_BOLI_GOLD_GET_REWARD                User3Param = 19
	User3Param_USER3PARAM_BOLI_GOLD_INFO                      User3Param = 20
	User3Param_USER3PARAM_BOLI_GOLD_GET_FREE_REWARD           User3Param = 21
	User3Param_USER3PARAM_RESOURCE_CHECK                      User3Param = 22
	User3Param_USER3PARAM_UPDATE_RECORD_SLOT_INDEX            User3Param = 23
	User3Param_USER3PARAM_NOVICE_CHARGE_SYNC                  User3Param = 24
	User3Param_USER3PARAM_NOVICE_CHARGE_REWARD                User3Param = 25
	User3Param_USER3PARAM_EQUIP_EFFECT_TIME                   User3Param = 27
)

// Enum value maps for User3Param.
var (
	User3Param_name = map[int32]string{
		1:  "USER3PARAM_FIRST_DEPOSIT_INFO",
		2:  "USER3PARAM_FIRST_DEPOSIT_REWARD",
		3:  "USER3PARAM_CLIENT_PAY_LOG",
		4:  "USER3PARAM_DALIY_DEPOSIT_INFO",
		5:  "USER3PARAM_DALIY_DEPOSIT_GET_REWARD",
		6:  "USER3PARAM_BATTLE_TIME_SELECT",
		8:  "USER3PARAM_QUERY_PROFESSION_RECORD_SIMPLE_DATA",
		9:  "USER3PARAM_PLUGIN_NOTIFY",
		10: "USER3PARAM_PLUGIN_UPLOAD",
		11: "USER3PARAM_HERO_BUY",
		12: "USER3PARAM_HERO_SHOW",
		13: "USER3PARAM_HERO_GROWTH_QUEST_INFO",
		14: "USER3PARAM_HERO_STORY_QUEST_REWARD",
		15: "USER3PARAM_HERO_STORY_QUEST_INFO",
		16: "USER3PARAM_HERO_STORY_QUEST_ACCEPT",
		17: "USER3PARAM_ACCUM_DEPOSIT_INFO",
		18: "USER3PARAM_ACCUM_DEPOSIT_REWARD",
		19: "USER3PARAM_BOLI_GOLD_GET_REWARD",
		20: "USER3PARAM_BOLI_GOLD_INFO",
		21: "USER3PARAM_BOLI_GOLD_GET_FREE_REWARD",
		22: "USER3PARAM_RESOURCE_CHECK",
		23: "USER3PARAM_UPDATE_RECORD_SLOT_INDEX",
		24: "USER3PARAM_NOVICE_CHARGE_SYNC",
		25: "USER3PARAM_NOVICE_CHARGE_REWARD",
		27: "USER3PARAM_EQUIP_EFFECT_TIME",
	}
	User3Param_value = map[string]int32{
		"USER3PARAM_FIRST_DEPOSIT_INFO":                  1,
		"USER3PARAM_FIRST_DEPOSIT_REWARD":                2,
		"USER3PARAM_CLIENT_PAY_LOG":                      3,
		"USER3PARAM_DALIY_DEPOSIT_INFO":                  4,
		"USER3PARAM_DALIY_DEPOSIT_GET_REWARD":            5,
		"USER3PARAM_BATTLE_TIME_SELECT":                  6,
		"USER3PARAM_QUERY_PROFESSION_RECORD_SIMPLE_DATA": 8,
		"USER3PARAM_PLUGIN_NOTIFY":                       9,
		"USER3PARAM_PLUGIN_UPLOAD":                       10,
		"USER3PARAM_HERO_BUY":                            11,
		"USER3PARAM_HERO_SHOW":                           12,
		"USER3PARAM_HERO_GROWTH_QUEST_INFO":              13,
		"USER3PARAM_HERO_STORY_QUEST_REWARD":             14,
		"USER3PARAM_HERO_STORY_QUEST_INFO":               15,
		"USER3PARAM_HERO_STORY_QUEST_ACCEPT":             16,
		"USER3PARAM_ACCUM_DEPOSIT_INFO":                  17,
		"USER3PARAM_ACCUM_DEPOSIT_REWARD":                18,
		"USER3PARAM_BOLI_GOLD_GET_REWARD":                19,
		"USER3PARAM_BOLI_GOLD_INFO":                      20,
		"USER3PARAM_BOLI_GOLD_GET_FREE_REWARD":           21,
		"USER3PARAM_RESOURCE_CHECK":                      22,
		"USER3PARAM_UPDATE_RECORD_SLOT_INDEX":            23,
		"USER3PARAM_NOVICE_CHARGE_SYNC":                  24,
		"USER3PARAM_NOVICE_CHARGE_REWARD":                25,
		"USER3PARAM_EQUIP_EFFECT_TIME":                   27,
	}
)

func (x User3Param) Enum() *User3Param {
	p := new(User3Param)
	*p = x
	return p
}

func (x User3Param) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User3Param) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser3_proto_enumTypes[0].Descriptor()
}

func (User3Param) Type() protoreflect.EnumType {
	return &file_SceneUser3_proto_enumTypes[0]
}

func (x User3Param) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *User3Param) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = User3Param(num)
	return nil
}

// Deprecated: Use User3Param.Descriptor instead.
func (User3Param) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{0}
}

type EPriorTimeCost int32

const (
	EPriorTimeCost_EPRIORBATTLECOST_PLAY   EPriorTimeCost = 1
	EPriorTimeCost_EPRIORBATTLECOST_BATTLE EPriorTimeCost = 2
)

// Enum value maps for EPriorTimeCost.
var (
	EPriorTimeCost_name = map[int32]string{
		1: "EPRIORBATTLECOST_PLAY",
		2: "EPRIORBATTLECOST_BATTLE",
	}
	EPriorTimeCost_value = map[string]int32{
		"EPRIORBATTLECOST_PLAY":   1,
		"EPRIORBATTLECOST_BATTLE": 2,
	}
)

func (x EPriorTimeCost) Enum() *EPriorTimeCost {
	p := new(EPriorTimeCost)
	*p = x
	return p
}

func (x EPriorTimeCost) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPriorTimeCost) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser3_proto_enumTypes[1].Descriptor()
}

func (EPriorTimeCost) Type() protoreflect.EnumType {
	return &file_SceneUser3_proto_enumTypes[1]
}

func (x EPriorTimeCost) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPriorTimeCost) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPriorTimeCost(num)
	return nil
}

// Deprecated: Use EPriorTimeCost.Descriptor instead.
func (EPriorTimeCost) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{1}
}

type HeroStoryQusetState int32

const (
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_NONE      HeroStoryQusetState = 0
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_UNLOCK    HeroStoryQusetState = 1
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_UNACCEPT  HeroStoryQusetState = 2
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_INPROCESS HeroStoryQusetState = 3
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_COMPLETE  HeroStoryQusetState = 4
	HeroStoryQusetState_HEROSTORY_QUSET_STATE_REWARD    HeroStoryQusetState = 5
)

// Enum value maps for HeroStoryQusetState.
var (
	HeroStoryQusetState_name = map[int32]string{
		0: "HEROSTORY_QUSET_STATE_NONE",
		1: "HEROSTORY_QUSET_STATE_UNLOCK",
		2: "HEROSTORY_QUSET_STATE_UNACCEPT",
		3: "HEROSTORY_QUSET_STATE_INPROCESS",
		4: "HEROSTORY_QUSET_STATE_COMPLETE",
		5: "HEROSTORY_QUSET_STATE_REWARD",
	}
	HeroStoryQusetState_value = map[string]int32{
		"HEROSTORY_QUSET_STATE_NONE":      0,
		"HEROSTORY_QUSET_STATE_UNLOCK":    1,
		"HEROSTORY_QUSET_STATE_UNACCEPT":  2,
		"HEROSTORY_QUSET_STATE_INPROCESS": 3,
		"HEROSTORY_QUSET_STATE_COMPLETE":  4,
		"HEROSTORY_QUSET_STATE_REWARD":    5,
	}
)

func (x HeroStoryQusetState) Enum() *HeroStoryQusetState {
	p := new(HeroStoryQusetState)
	*p = x
	return p
}

func (x HeroStoryQusetState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeroStoryQusetState) Descriptor() protoreflect.EnumDescriptor {
	return file_SceneUser3_proto_enumTypes[2].Descriptor()
}

func (HeroStoryQusetState) Type() protoreflect.EnumType {
	return &file_SceneUser3_proto_enumTypes[2]
}

func (x HeroStoryQusetState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HeroStoryQusetState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HeroStoryQusetState(num)
	return nil
}

// Deprecated: Use HeroStoryQusetState.Descriptor instead.
func (HeroStoryQusetState) EnumDescriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{2}
}

type FirstDepositInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                  *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param                *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=1" json:"param,omitempty"`
	EndTime              *uint32     `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	GotGear              []uint32    `protobuf:"varint,4,rep,name=got_gear,json=gotGear" json:"got_gear,omitempty"`
	AccumlatedDeposit    *float32    `protobuf:"fixed32,5,opt,name=accumlated_deposit,json=accumlatedDeposit" json:"accumlated_deposit,omitempty"`
	FirstDepositRewarded *bool       `protobuf:"varint,6,opt,name=first_deposit_rewarded,json=firstDepositRewarded" json:"first_deposit_rewarded,omitempty"`
	Version              *uint32     `protobuf:"varint,7,opt,name=version" json:"version,omitempty"`
}

// Default values for FirstDepositInfo fields.
const (
	Default_FirstDepositInfo_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_FirstDepositInfo_Param = User3Param_USER3PARAM_FIRST_DEPOSIT_INFO
)

func (x *FirstDepositInfo) Reset() {
	*x = FirstDepositInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositInfo) ProtoMessage() {}

func (x *FirstDepositInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositInfo.ProtoReflect.Descriptor instead.
func (*FirstDepositInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{0}
}

func (x *FirstDepositInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FirstDepositInfo_Cmd
}

func (x *FirstDepositInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FirstDepositInfo_Param
}

func (x *FirstDepositInfo) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *FirstDepositInfo) GetGotGear() []uint32 {
	if x != nil {
		return x.GotGear
	}
	return nil
}

func (x *FirstDepositInfo) GetAccumlatedDeposit() float32 {
	if x != nil && x.AccumlatedDeposit != nil {
		return *x.AccumlatedDeposit
	}
	return 0
}

func (x *FirstDepositInfo) GetFirstDepositRewarded() bool {
	if x != nil && x.FirstDepositRewarded != nil {
		return *x.FirstDepositRewarded
	}
	return false
}

func (x *FirstDepositInfo) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type FirstDepositReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param              *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=2" json:"param,omitempty"`
	FirstDepositReward *bool       `protobuf:"varint,3,opt,name=first_deposit_reward,json=firstDepositReward" json:"first_deposit_reward,omitempty"`
	Gear               *uint32     `protobuf:"varint,4,opt,name=gear" json:"gear,omitempty"`
}

// Default values for FirstDepositReward fields.
const (
	Default_FirstDepositReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_FirstDepositReward_Param = User3Param_USER3PARAM_FIRST_DEPOSIT_REWARD
)

func (x *FirstDepositReward) Reset() {
	*x = FirstDepositReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositReward) ProtoMessage() {}

func (x *FirstDepositReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositReward.ProtoReflect.Descriptor instead.
func (*FirstDepositReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{1}
}

func (x *FirstDepositReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_FirstDepositReward_Cmd
}

func (x *FirstDepositReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_FirstDepositReward_Param
}

func (x *FirstDepositReward) GetFirstDepositReward() bool {
	if x != nil && x.FirstDepositReward != nil {
		return *x.FirstDepositReward
	}
	return false
}

func (x *FirstDepositReward) GetGear() uint32 {
	if x != nil && x.Gear != nil {
		return *x.Gear
	}
	return 0
}

type ClientPayLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param      *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=3" json:"param,omitempty"`
	EventId    *uint32     `protobuf:"varint,3,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	EventParam *uint32     `protobuf:"varint,4,opt,name=event_param,json=eventParam" json:"event_param,omitempty"`
}

// Default values for ClientPayLog fields.
const (
	Default_ClientPayLog_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_ClientPayLog_Param = User3Param_USER3PARAM_CLIENT_PAY_LOG
)

func (x *ClientPayLog) Reset() {
	*x = ClientPayLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayLog) ProtoMessage() {}

func (x *ClientPayLog) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayLog.ProtoReflect.Descriptor instead.
func (*ClientPayLog) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{2}
}

func (x *ClientPayLog) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ClientPayLog_Cmd
}

func (x *ClientPayLog) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ClientPayLog_Param
}

func (x *ClientPayLog) GetEventId() uint32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *ClientPayLog) GetEventParam() uint32 {
	if x != nil && x.EventParam != nil {
		return *x.EventParam
	}
	return 0
}

type DailyDepositInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd           *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param         *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=4" json:"param,omitempty"`
	Version       *uint32     `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	DepositGold   *uint32     `protobuf:"varint,4,opt,name=deposit_gold,json=depositGold" json:"deposit_gold,omitempty"`
	StartTime     *uint32     `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime       *uint32     `protobuf:"varint,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	GottenRewards []uint32    `protobuf:"varint,7,rep,name=gotten_rewards,json=gottenRewards" json:"gotten_rewards,omitempty"`
}

// Default values for DailyDepositInfo fields.
const (
	Default_DailyDepositInfo_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_DailyDepositInfo_Param = User3Param_USER3PARAM_DALIY_DEPOSIT_INFO
)

func (x *DailyDepositInfo) Reset() {
	*x = DailyDepositInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyDepositInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyDepositInfo) ProtoMessage() {}

func (x *DailyDepositInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyDepositInfo.ProtoReflect.Descriptor instead.
func (*DailyDepositInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{3}
}

func (x *DailyDepositInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DailyDepositInfo_Cmd
}

func (x *DailyDepositInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DailyDepositInfo_Param
}

func (x *DailyDepositInfo) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *DailyDepositInfo) GetDepositGold() uint32 {
	if x != nil && x.DepositGold != nil {
		return *x.DepositGold
	}
	return 0
}

func (x *DailyDepositInfo) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *DailyDepositInfo) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *DailyDepositInfo) GetGottenRewards() []uint32 {
	if x != nil {
		return x.GottenRewards
	}
	return nil
}

type DailyDepositGetReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param       *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=5" json:"param,omitempty"`
	RewardIndex *uint32     `protobuf:"varint,3,opt,name=reward_index,json=rewardIndex" json:"reward_index,omitempty"`
	Version     *uint32     `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
}

// Default values for DailyDepositGetReward fields.
const (
	Default_DailyDepositGetReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_DailyDepositGetReward_Param = User3Param_USER3PARAM_DALIY_DEPOSIT_GET_REWARD
)

func (x *DailyDepositGetReward) Reset() {
	*x = DailyDepositGetReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyDepositGetReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyDepositGetReward) ProtoMessage() {}

func (x *DailyDepositGetReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyDepositGetReward.ProtoReflect.Descriptor instead.
func (*DailyDepositGetReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{4}
}

func (x *DailyDepositGetReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_DailyDepositGetReward_Cmd
}

func (x *DailyDepositGetReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_DailyDepositGetReward_Param
}

func (x *DailyDepositGetReward) GetRewardIndex() uint32 {
	if x != nil && x.RewardIndex != nil {
		return *x.RewardIndex
	}
	return 0
}

func (x *DailyDepositGetReward) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type BattleTimeCostSelectCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command        `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param *User3Param     `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=6" json:"param,omitempty"`
	Ecost *EPriorTimeCost `protobuf:"varint,3,opt,name=ecost,enum=Cmd.EPriorTimeCost,def=1" json:"ecost,omitempty"`
}

// Default values for BattleTimeCostSelectCmd fields.
const (
	Default_BattleTimeCostSelectCmd_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_BattleTimeCostSelectCmd_Param = User3Param_USER3PARAM_BATTLE_TIME_SELECT
	Default_BattleTimeCostSelectCmd_Ecost = EPriorTimeCost_EPRIORBATTLECOST_PLAY
)

func (x *BattleTimeCostSelectCmd) Reset() {
	*x = BattleTimeCostSelectCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleTimeCostSelectCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleTimeCostSelectCmd) ProtoMessage() {}

func (x *BattleTimeCostSelectCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleTimeCostSelectCmd.ProtoReflect.Descriptor instead.
func (*BattleTimeCostSelectCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{5}
}

func (x *BattleTimeCostSelectCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BattleTimeCostSelectCmd_Cmd
}

func (x *BattleTimeCostSelectCmd) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BattleTimeCostSelectCmd_Param
}

func (x *BattleTimeCostSelectCmd) GetEcost() EPriorTimeCost {
	if x != nil && x.Ecost != nil {
		return *x.Ecost
	}
	return Default_BattleTimeCostSelectCmd_Ecost
}

type PlugInInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *string `protobuf:"bytes,1,opt,name=process" json:"process,omitempty"`
	Apk     *string `protobuf:"bytes,2,opt,name=apk" json:"apk,omitempty"`
	Data    *string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *PlugInInfo) Reset() {
	*x = PlugInInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugInInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugInInfo) ProtoMessage() {}

func (x *PlugInInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugInInfo.ProtoReflect.Descriptor instead.
func (*PlugInInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{6}
}

func (x *PlugInInfo) GetProcess() string {
	if x != nil && x.Process != nil {
		return *x.Process
	}
	return ""
}

func (x *PlugInInfo) GetApk() string {
	if x != nil && x.Apk != nil {
		return *x.Apk
	}
	return ""
}

func (x *PlugInInfo) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type PlugInNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd            *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param          *User3Param   `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=9" json:"param,omitempty"`
	Infos          []*PlugInInfo `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	Detectinterval *uint32       `protobuf:"varint,4,opt,name=detectinterval" json:"detectinterval,omitempty"`
}

// Default values for PlugInNotify fields.
const (
	Default_PlugInNotify_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_PlugInNotify_Param = User3Param_USER3PARAM_PLUGIN_NOTIFY
)

func (x *PlugInNotify) Reset() {
	*x = PlugInNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugInNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugInNotify) ProtoMessage() {}

func (x *PlugInNotify) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugInNotify.ProtoReflect.Descriptor instead.
func (*PlugInNotify) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{7}
}

func (x *PlugInNotify) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PlugInNotify_Cmd
}

func (x *PlugInNotify) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PlugInNotify_Param
}

func (x *PlugInNotify) GetInfos() []*PlugInInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *PlugInNotify) GetDetectinterval() uint32 {
	if x != nil && x.Detectinterval != nil {
		return *x.Detectinterval
	}
	return 0
}

type PlugInUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command      `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param *User3Param   `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=10" json:"param,omitempty"`
	Infos []*PlugInInfo `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	Flag  *uint32       `protobuf:"varint,4,opt,name=flag" json:"flag,omitempty"`
}

// Default values for PlugInUpload fields.
const (
	Default_PlugInUpload_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_PlugInUpload_Param = User3Param_USER3PARAM_PLUGIN_UPLOAD
)

func (x *PlugInUpload) Reset() {
	*x = PlugInUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugInUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugInUpload) ProtoMessage() {}

func (x *PlugInUpload) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugInUpload.ProtoReflect.Descriptor instead.
func (*PlugInUpload) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{8}
}

func (x *PlugInUpload) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_PlugInUpload_Cmd
}

func (x *PlugInUpload) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_PlugInUpload_Param
}

func (x *PlugInUpload) GetInfos() []*PlugInInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *PlugInUpload) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

type HeroStoryQusetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Queststate *HeroStoryQusetState `protobuf:"varint,2,opt,name=queststate,enum=Cmd.HeroStoryQusetState" json:"queststate,omitempty"`
}

func (x *HeroStoryQusetData) Reset() {
	*x = HeroStoryQusetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroStoryQusetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroStoryQusetData) ProtoMessage() {}

func (x *HeroStoryQusetData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroStoryQusetData.ProtoReflect.Descriptor instead.
func (*HeroStoryQusetData) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{9}
}

func (x *HeroStoryQusetData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *HeroStoryQusetData) GetQueststate() HeroStoryQusetState {
	if x != nil && x.Queststate != nil {
		return *x.Queststate
	}
	return HeroStoryQusetState_HEROSTORY_QUSET_STATE_NONE
}

type HeroStoryQusetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         *Command              `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param       *User3Param           `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=15" json:"param,omitempty"`
	Profession  *uint32               `protobuf:"varint,3,opt,name=profession,def=0" json:"profession,omitempty"`
	StoryQuests []*HeroStoryQusetData `protobuf:"bytes,4,rep,name=story_quests,json=storyQuests" json:"story_quests,omitempty"`
}

// Default values for HeroStoryQusetInfo fields.
const (
	Default_HeroStoryQusetInfo_Cmd        = Command_SCENE_USER3_PROTOCMD
	Default_HeroStoryQusetInfo_Param      = User3Param_USER3PARAM_HERO_STORY_QUEST_INFO
	Default_HeroStoryQusetInfo_Profession = uint32(0)
)

func (x *HeroStoryQusetInfo) Reset() {
	*x = HeroStoryQusetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroStoryQusetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroStoryQusetInfo) ProtoMessage() {}

func (x *HeroStoryQusetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroStoryQusetInfo.ProtoReflect.Descriptor instead.
func (*HeroStoryQusetInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{10}
}

func (x *HeroStoryQusetInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroStoryQusetInfo_Cmd
}

func (x *HeroStoryQusetInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroStoryQusetInfo_Param
}

func (x *HeroStoryQusetInfo) GetProfession() uint32 {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return Default_HeroStoryQusetInfo_Profession
}

func (x *HeroStoryQusetInfo) GetStoryQuests() []*HeroStoryQusetData {
	if x != nil {
		return x.StoryQuests
	}
	return nil
}

type HeroStoryQuestAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=16" json:"param,omitempty"`
	Id      *uint32     `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Success *bool       `protobuf:"varint,4,opt,name=success,def=0" json:"success,omitempty"`
}

// Default values for HeroStoryQuestAccept fields.
const (
	Default_HeroStoryQuestAccept_Cmd     = Command_SCENE_USER3_PROTOCMD
	Default_HeroStoryQuestAccept_Param   = User3Param_USER3PARAM_HERO_STORY_QUEST_ACCEPT
	Default_HeroStoryQuestAccept_Id      = uint32(0)
	Default_HeroStoryQuestAccept_Success = bool(false)
)

func (x *HeroStoryQuestAccept) Reset() {
	*x = HeroStoryQuestAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroStoryQuestAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroStoryQuestAccept) ProtoMessage() {}

func (x *HeroStoryQuestAccept) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroStoryQuestAccept.ProtoReflect.Descriptor instead.
func (*HeroStoryQuestAccept) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{11}
}

func (x *HeroStoryQuestAccept) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroStoryQuestAccept_Cmd
}

func (x *HeroStoryQuestAccept) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroStoryQuestAccept_Param
}

func (x *HeroStoryQuestAccept) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_HeroStoryQuestAccept_Id
}

func (x *HeroStoryQuestAccept) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return Default_HeroStoryQuestAccept_Success
}

type HeroStoryQuestReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=14" json:"param,omitempty"`
	Id      *uint32     `protobuf:"varint,3,opt,name=id,def=0" json:"id,omitempty"`
	Success *bool       `protobuf:"varint,4,opt,name=success,def=0" json:"success,omitempty"`
}

// Default values for HeroStoryQuestReward fields.
const (
	Default_HeroStoryQuestReward_Cmd     = Command_SCENE_USER3_PROTOCMD
	Default_HeroStoryQuestReward_Param   = User3Param_USER3PARAM_HERO_STORY_QUEST_REWARD
	Default_HeroStoryQuestReward_Id      = uint32(0)
	Default_HeroStoryQuestReward_Success = bool(false)
)

func (x *HeroStoryQuestReward) Reset() {
	*x = HeroStoryQuestReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroStoryQuestReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroStoryQuestReward) ProtoMessage() {}

func (x *HeroStoryQuestReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroStoryQuestReward.ProtoReflect.Descriptor instead.
func (*HeroStoryQuestReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{12}
}

func (x *HeroStoryQuestReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroStoryQuestReward_Cmd
}

func (x *HeroStoryQuestReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroStoryQuestReward_Param
}

func (x *HeroStoryQuestReward) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_HeroStoryQuestReward_Id
}

func (x *HeroStoryQuestReward) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return Default_HeroStoryQuestReward_Success
}

type HeroGrowthQuestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Process *uint32 `protobuf:"varint,2,opt,name=process" json:"process,omitempty"`
	Goal    *uint32 `protobuf:"varint,3,opt,name=goal" json:"goal,omitempty"`
}

func (x *HeroGrowthQuestData) Reset() {
	*x = HeroGrowthQuestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroGrowthQuestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroGrowthQuestData) ProtoMessage() {}

func (x *HeroGrowthQuestData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroGrowthQuestData.ProtoReflect.Descriptor instead.
func (*HeroGrowthQuestData) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{13}
}

func (x *HeroGrowthQuestData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *HeroGrowthQuestData) GetProcess() uint32 {
	if x != nil && x.Process != nil {
		return *x.Process
	}
	return 0
}

func (x *HeroGrowthQuestData) GetGoal() uint32 {
	if x != nil && x.Goal != nil {
		return *x.Goal
	}
	return 0
}

type HeroGrowthQuestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          *Command               `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param        *User3Param            `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=13" json:"param,omitempty"`
	Profession   *uint32                `protobuf:"varint,3,opt,name=profession,def=0" json:"profession,omitempty"`
	GrowthQuests []*HeroGrowthQuestData `protobuf:"bytes,4,rep,name=growth_quests,json=growthQuests" json:"growth_quests,omitempty"`
}

// Default values for HeroGrowthQuestInfo fields.
const (
	Default_HeroGrowthQuestInfo_Cmd        = Command_SCENE_USER3_PROTOCMD
	Default_HeroGrowthQuestInfo_Param      = User3Param_USER3PARAM_HERO_GROWTH_QUEST_INFO
	Default_HeroGrowthQuestInfo_Profession = uint32(0)
)

func (x *HeroGrowthQuestInfo) Reset() {
	*x = HeroGrowthQuestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroGrowthQuestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroGrowthQuestInfo) ProtoMessage() {}

func (x *HeroGrowthQuestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroGrowthQuestInfo.ProtoReflect.Descriptor instead.
func (*HeroGrowthQuestInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{14}
}

func (x *HeroGrowthQuestInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroGrowthQuestInfo_Cmd
}

func (x *HeroGrowthQuestInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroGrowthQuestInfo_Param
}

func (x *HeroGrowthQuestInfo) GetProfession() uint32 {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return Default_HeroGrowthQuestInfo_Profession
}

func (x *HeroGrowthQuestInfo) GetGrowthQuests() []*HeroGrowthQuestData {
	if x != nil {
		return x.GrowthQuests
	}
	return nil
}

type ProfessionSimpleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Profession *uint32 `protobuf:"varint,2,opt,name=profession" json:"profession,omitempty"`
	Recordname *string `protobuf:"bytes,3,opt,name=recordname" json:"recordname,omitempty"`
	Charid     *uint64 `protobuf:"varint,4,opt,name=charid" json:"charid,omitempty"`
	Charname   *string `protobuf:"bytes,5,opt,name=charname" json:"charname,omitempty"`
}

func (x *ProfessionSimpleData) Reset() {
	*x = ProfessionSimpleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionSimpleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionSimpleData) ProtoMessage() {}

func (x *ProfessionSimpleData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionSimpleData.ProtoReflect.Descriptor instead.
func (*ProfessionSimpleData) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{15}
}

func (x *ProfessionSimpleData) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProfessionSimpleData) GetProfession() uint32 {
	if x != nil && x.Profession != nil {
		return *x.Profession
	}
	return 0
}

func (x *ProfessionSimpleData) GetRecordname() string {
	if x != nil && x.Recordname != nil {
		return *x.Recordname
	}
	return ""
}

func (x *ProfessionSimpleData) GetCharid() uint64 {
	if x != nil && x.Charid != nil {
		return *x.Charid
	}
	return 0
}

func (x *ProfessionSimpleData) GetCharname() string {
	if x != nil && x.Charname != nil {
		return *x.Charname
	}
	return ""
}

type QueryProfessionRecordSimpleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command                `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param             `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=8" json:"param,omitempty"`
	Records []*ProfessionSimpleData `protobuf:"bytes,3,rep,name=records" json:"records,omitempty"`
}

// Default values for QueryProfessionRecordSimpleData fields.
const (
	Default_QueryProfessionRecordSimpleData_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_QueryProfessionRecordSimpleData_Param = User3Param_USER3PARAM_QUERY_PROFESSION_RECORD_SIMPLE_DATA
)

func (x *QueryProfessionRecordSimpleData) Reset() {
	*x = QueryProfessionRecordSimpleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProfessionRecordSimpleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProfessionRecordSimpleData) ProtoMessage() {}

func (x *QueryProfessionRecordSimpleData) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProfessionRecordSimpleData.ProtoReflect.Descriptor instead.
func (*QueryProfessionRecordSimpleData) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{16}
}

func (x *QueryProfessionRecordSimpleData) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_QueryProfessionRecordSimpleData_Cmd
}

func (x *QueryProfessionRecordSimpleData) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_QueryProfessionRecordSimpleData_Param
}

func (x *QueryProfessionRecordSimpleData) GetRecords() []*ProfessionSimpleData {
	if x != nil {
		return x.Records
	}
	return nil
}

type HeroBuyUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=11" json:"param,omitempty"`
	Branch  *uint32     `protobuf:"varint,3,opt,name=branch" json:"branch,omitempty"`
	Success *bool       `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
}

// Default values for HeroBuyUserCmd fields.
const (
	Default_HeroBuyUserCmd_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_HeroBuyUserCmd_Param = User3Param_USER3PARAM_HERO_BUY
)

func (x *HeroBuyUserCmd) Reset() {
	*x = HeroBuyUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBuyUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBuyUserCmd) ProtoMessage() {}

func (x *HeroBuyUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBuyUserCmd.ProtoReflect.Descriptor instead.
func (*HeroBuyUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{17}
}

func (x *HeroBuyUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroBuyUserCmd_Cmd
}

func (x *HeroBuyUserCmd) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroBuyUserCmd_Param
}

func (x *HeroBuyUserCmd) GetBranch() uint32 {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return 0
}

func (x *HeroBuyUserCmd) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type HeroProfessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch *uint32 `protobuf:"varint,1,opt,name=branch" json:"branch,omitempty"`
	Isbuy  *bool   `protobuf:"varint,2,opt,name=isbuy" json:"isbuy,omitempty"`
	Canbuy *bool   `protobuf:"varint,3,opt,name=canbuy" json:"canbuy,omitempty"`
}

func (x *HeroProfessionInfo) Reset() {
	*x = HeroProfessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroProfessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroProfessionInfo) ProtoMessage() {}

func (x *HeroProfessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroProfessionInfo.ProtoReflect.Descriptor instead.
func (*HeroProfessionInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{18}
}

func (x *HeroProfessionInfo) GetBranch() uint32 {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return 0
}

func (x *HeroProfessionInfo) GetIsbuy() bool {
	if x != nil && x.Isbuy != nil {
		return *x.Isbuy
	}
	return false
}

func (x *HeroProfessionInfo) GetCanbuy() bool {
	if x != nil && x.Canbuy != nil {
		return *x.Canbuy
	}
	return false
}

type HeroShowUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command              `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param *User3Param           `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=12" json:"param,omitempty"`
	Infos []*HeroProfessionInfo `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
}

// Default values for HeroShowUserCmd fields.
const (
	Default_HeroShowUserCmd_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_HeroShowUserCmd_Param = User3Param_USER3PARAM_HERO_SHOW
)

func (x *HeroShowUserCmd) Reset() {
	*x = HeroShowUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroShowUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroShowUserCmd) ProtoMessage() {}

func (x *HeroShowUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroShowUserCmd.ProtoReflect.Descriptor instead.
func (*HeroShowUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{19}
}

func (x *HeroShowUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_HeroShowUserCmd_Cmd
}

func (x *HeroShowUserCmd) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_HeroShowUserCmd_Param
}

func (x *HeroShowUserCmd) GetInfos() []*HeroProfessionInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type AccumDepositInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd               *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param             *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=17" json:"param,omitempty"`
	CurAct            *uint32     `protobuf:"varint,3,opt,name=cur_act,json=curAct" json:"cur_act,omitempty"`
	AccumlatedDeposit *float32    `protobuf:"fixed32,4,opt,name=accumlated_deposit,json=accumlatedDeposit" json:"accumlated_deposit,omitempty"`
	GottenRewards     []uint32    `protobuf:"varint,5,rep,name=gotten_rewards,json=gottenRewards" json:"gotten_rewards,omitempty"`
	EndTime           *uint32     `protobuf:"varint,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

// Default values for AccumDepositInfo fields.
const (
	Default_AccumDepositInfo_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_AccumDepositInfo_Param = User3Param_USER3PARAM_ACCUM_DEPOSIT_INFO
)

func (x *AccumDepositInfo) Reset() {
	*x = AccumDepositInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccumDepositInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumDepositInfo) ProtoMessage() {}

func (x *AccumDepositInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccumDepositInfo.ProtoReflect.Descriptor instead.
func (*AccumDepositInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{20}
}

func (x *AccumDepositInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AccumDepositInfo_Cmd
}

func (x *AccumDepositInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AccumDepositInfo_Param
}

func (x *AccumDepositInfo) GetCurAct() uint32 {
	if x != nil && x.CurAct != nil {
		return *x.CurAct
	}
	return 0
}

func (x *AccumDepositInfo) GetAccumlatedDeposit() float32 {
	if x != nil && x.AccumlatedDeposit != nil {
		return *x.AccumlatedDeposit
	}
	return 0
}

func (x *AccumDepositInfo) GetGottenRewards() []uint32 {
	if x != nil {
		return x.GottenRewards
	}
	return nil
}

func (x *AccumDepositInfo) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type AccumDepositReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param     *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=18" json:"param,omitempty"`
	GetReward *uint32     `protobuf:"varint,3,opt,name=get_reward,json=getReward" json:"get_reward,omitempty"`
}

// Default values for AccumDepositReward fields.
const (
	Default_AccumDepositReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_AccumDepositReward_Param = User3Param_USER3PARAM_ACCUM_DEPOSIT_REWARD
)

func (x *AccumDepositReward) Reset() {
	*x = AccumDepositReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccumDepositReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumDepositReward) ProtoMessage() {}

func (x *AccumDepositReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccumDepositReward.ProtoReflect.Descriptor instead.
func (*AccumDepositReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{21}
}

func (x *AccumDepositReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_AccumDepositReward_Cmd
}

func (x *AccumDepositReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_AccumDepositReward_Param
}

func (x *AccumDepositReward) GetGetReward() uint32 {
	if x != nil && x.GetReward != nil {
		return *x.GetReward
	}
	return 0
}

type BoliGoldGetReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=19" json:"param,omitempty"`
	Select  *uint32     `protobuf:"varint,3,opt,name=select" json:"select,omitempty"`
	Reward  *uint32     `protobuf:"varint,4,opt,name=reward" json:"reward,omitempty"`
	RestKey *uint32     `protobuf:"varint,5,opt,name=rest_key,json=restKey" json:"rest_key,omitempty"`
}

// Default values for BoliGoldGetReward fields.
const (
	Default_BoliGoldGetReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_BoliGoldGetReward_Param = User3Param_USER3PARAM_BOLI_GOLD_GET_REWARD
)

func (x *BoliGoldGetReward) Reset() {
	*x = BoliGoldGetReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoliGoldGetReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoliGoldGetReward) ProtoMessage() {}

func (x *BoliGoldGetReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoliGoldGetReward.ProtoReflect.Descriptor instead.
func (*BoliGoldGetReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{22}
}

func (x *BoliGoldGetReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoliGoldGetReward_Cmd
}

func (x *BoliGoldGetReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoliGoldGetReward_Param
}

func (x *BoliGoldGetReward) GetSelect() uint32 {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return 0
}

func (x *BoliGoldGetReward) GetReward() uint32 {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return 0
}

func (x *BoliGoldGetReward) GetRestKey() uint32 {
	if x != nil && x.RestKey != nil {
		return *x.RestKey
	}
	return 0
}

type BoliGoldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd              *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param            *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=20" json:"param,omitempty"`
	ActId            *uint32     `protobuf:"varint,3,opt,name=act_id,json=actId" json:"act_id,omitempty"`
	DepositGold      *uint32     `protobuf:"varint,4,opt,name=deposit_gold,json=depositGold" json:"deposit_gold,omitempty"`
	Selected         []uint32    `protobuf:"varint,5,rep,name=selected" json:"selected,omitempty"`
	GottenRewards    []uint32    `protobuf:"varint,6,rep,name=gotten_rewards,json=gottenRewards" json:"gotten_rewards,omitempty"`
	RestKey          *uint32     `protobuf:"varint,7,opt,name=rest_key,json=restKey" json:"rest_key,omitempty"`
	FreeRewardGotten *bool       `protobuf:"varint,8,opt,name=free_reward_gotten,json=freeRewardGotten" json:"free_reward_gotten,omitempty"`
}

// Default values for BoliGoldInfo fields.
const (
	Default_BoliGoldInfo_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_BoliGoldInfo_Param = User3Param_USER3PARAM_BOLI_GOLD_INFO
)

func (x *BoliGoldInfo) Reset() {
	*x = BoliGoldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoliGoldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoliGoldInfo) ProtoMessage() {}

func (x *BoliGoldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoliGoldInfo.ProtoReflect.Descriptor instead.
func (*BoliGoldInfo) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{23}
}

func (x *BoliGoldInfo) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoliGoldInfo_Cmd
}

func (x *BoliGoldInfo) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoliGoldInfo_Param
}

func (x *BoliGoldInfo) GetActId() uint32 {
	if x != nil && x.ActId != nil {
		return *x.ActId
	}
	return 0
}

func (x *BoliGoldInfo) GetDepositGold() uint32 {
	if x != nil && x.DepositGold != nil {
		return *x.DepositGold
	}
	return 0
}

func (x *BoliGoldInfo) GetSelected() []uint32 {
	if x != nil {
		return x.Selected
	}
	return nil
}

func (x *BoliGoldInfo) GetGottenRewards() []uint32 {
	if x != nil {
		return x.GottenRewards
	}
	return nil
}

func (x *BoliGoldInfo) GetRestKey() uint32 {
	if x != nil && x.RestKey != nil {
		return *x.RestKey
	}
	return 0
}

func (x *BoliGoldInfo) GetFreeRewardGotten() bool {
	if x != nil && x.FreeRewardGotten != nil {
		return *x.FreeRewardGotten
	}
	return false
}

type BoliGoldGetFreeReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=21" json:"param,omitempty"`
}

// Default values for BoliGoldGetFreeReward fields.
const (
	Default_BoliGoldGetFreeReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_BoliGoldGetFreeReward_Param = User3Param_USER3PARAM_BOLI_GOLD_GET_FREE_REWARD
)

func (x *BoliGoldGetFreeReward) Reset() {
	*x = BoliGoldGetFreeReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoliGoldGetFreeReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoliGoldGetFreeReward) ProtoMessage() {}

func (x *BoliGoldGetFreeReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoliGoldGetFreeReward.ProtoReflect.Descriptor instead.
func (*BoliGoldGetFreeReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{24}
}

func (x *BoliGoldGetFreeReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_BoliGoldGetFreeReward_Cmd
}

func (x *BoliGoldGetFreeReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_BoliGoldGetFreeReward_Param
}

type ResourceCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *string `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Checksum *string `protobuf:"bytes,2,opt,name=checksum" json:"checksum,omitempty"`
	Version  *string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Platform *string `protobuf:"bytes,4,opt,name=platform" json:"platform,omitempty"`
}

func (x *ResourceCheck) Reset() {
	*x = ResourceCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCheck) ProtoMessage() {}

func (x *ResourceCheck) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCheck.ProtoReflect.Descriptor instead.
func (*ResourceCheck) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{25}
}

func (x *ResourceCheck) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *ResourceCheck) GetChecksum() string {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return ""
}

func (x *ResourceCheck) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ResourceCheck) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

type ResourceCheckUserCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       *Command         `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param     *User3Param      `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=22" json:"param,omitempty"`
	Resources []*ResourceCheck `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
}

// Default values for ResourceCheckUserCmd fields.
const (
	Default_ResourceCheckUserCmd_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_ResourceCheckUserCmd_Param = User3Param_USER3PARAM_RESOURCE_CHECK
)

func (x *ResourceCheckUserCmd) Reset() {
	*x = ResourceCheckUserCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCheckUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCheckUserCmd) ProtoMessage() {}

func (x *ResourceCheckUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCheckUserCmd.ProtoReflect.Descriptor instead.
func (*ResourceCheckUserCmd) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{26}
}

func (x *ResourceCheckUserCmd) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_ResourceCheckUserCmd_Cmd
}

func (x *ResourceCheckUserCmd) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_ResourceCheckUserCmd_Param
}

func (x *ResourceCheckUserCmd) GetResources() []*ResourceCheck {
	if x != nil {
		return x.Resources
	}
	return nil
}

type NoviceChargeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId    *uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	LoginDay  *uint32 `protobuf:"varint,2,opt,name=login_day,json=loginDay" json:"login_day,omitempty"`
	RewardDay *uint32 `protobuf:"varint,3,opt,name=reward_day,json=rewardDay" json:"reward_day,omitempty"`
}

func (x *NoviceChargeItem) Reset() {
	*x = NoviceChargeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceChargeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceChargeItem) ProtoMessage() {}

func (x *NoviceChargeItem) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceChargeItem.ProtoReflect.Descriptor instead.
func (*NoviceChargeItem) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{27}
}

func (x *NoviceChargeItem) GetItemId() uint32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *NoviceChargeItem) GetLoginDay() uint32 {
	if x != nil && x.LoginDay != nil {
		return *x.LoginDay
	}
	return 0
}

func (x *NoviceChargeItem) GetRewardDay() uint32 {
	if x != nil && x.RewardDay != nil {
		return *x.RewardDay
	}
	return 0
}

type NoviceChargeSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command            `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param         `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=24" json:"param,omitempty"`
	EndTime *uint32             `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	ActId   *uint32             `protobuf:"varint,4,opt,name=act_id,json=actId" json:"act_id,omitempty"`
	Items   []*NoviceChargeItem `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
}

// Default values for NoviceChargeSync fields.
const (
	Default_NoviceChargeSync_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_NoviceChargeSync_Param = User3Param_USER3PARAM_NOVICE_CHARGE_SYNC
)

func (x *NoviceChargeSync) Reset() {
	*x = NoviceChargeSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceChargeSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceChargeSync) ProtoMessage() {}

func (x *NoviceChargeSync) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceChargeSync.ProtoReflect.Descriptor instead.
func (*NoviceChargeSync) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{28}
}

func (x *NoviceChargeSync) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceChargeSync_Cmd
}

func (x *NoviceChargeSync) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceChargeSync_Param
}

func (x *NoviceChargeSync) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *NoviceChargeSync) GetActId() uint32 {
	if x != nil && x.ActId != nil {
		return *x.ActId
	}
	return 0
}

func (x *NoviceChargeSync) GetItems() []*NoviceChargeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NoviceChargeReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param  *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=25" json:"param,omitempty"`
	ItemId *uint32     `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

// Default values for NoviceChargeReward fields.
const (
	Default_NoviceChargeReward_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_NoviceChargeReward_Param = User3Param_USER3PARAM_NOVICE_CHARGE_REWARD
)

func (x *NoviceChargeReward) Reset() {
	*x = NoviceChargeReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceChargeReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceChargeReward) ProtoMessage() {}

func (x *NoviceChargeReward) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceChargeReward.ProtoReflect.Descriptor instead.
func (*NoviceChargeReward) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{29}
}

func (x *NoviceChargeReward) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_NoviceChargeReward_Cmd
}

func (x *NoviceChargeReward) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_NoviceChargeReward_Param
}

func (x *NoviceChargeReward) GetItemId() uint32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type EquipPosEffectTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     *Command    `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param   *User3Param `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=27" json:"param,omitempty"`
	Pos     *uint32     `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	EndTime *uint64     `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	TotalCd *uint64     `protobuf:"varint,5,opt,name=total_cd,json=totalCd" json:"total_cd,omitempty"`
}

// Default values for EquipPosEffectTime fields.
const (
	Default_EquipPosEffectTime_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_EquipPosEffectTime_Param = User3Param_USER3PARAM_EQUIP_EFFECT_TIME
)

func (x *EquipPosEffectTime) Reset() {
	*x = EquipPosEffectTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipPosEffectTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipPosEffectTime) ProtoMessage() {}

func (x *EquipPosEffectTime) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipPosEffectTime.ProtoReflect.Descriptor instead.
func (*EquipPosEffectTime) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{30}
}

func (x *EquipPosEffectTime) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_EquipPosEffectTime_Cmd
}

func (x *EquipPosEffectTime) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_EquipPosEffectTime_Param
}

func (x *EquipPosEffectTime) GetPos() uint32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *EquipPosEffectTime) GetEndTime() uint64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *EquipPosEffectTime) GetTotalCd() uint64 {
	if x != nil && x.TotalCd != nil {
		return *x.TotalCd
	}
	return 0
}

type RecordSlotIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId *uint32 `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Index  *uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
}

func (x *RecordSlotIndex) Reset() {
	*x = RecordSlotIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSlotIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSlotIndex) ProtoMessage() {}

func (x *RecordSlotIndex) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSlotIndex.ProtoReflect.Descriptor instead.
func (*RecordSlotIndex) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{31}
}

func (x *RecordSlotIndex) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *RecordSlotIndex) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type UpdateRecordSlotIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        *Command           `protobuf:"varint,1,opt,name=cmd,enum=Cmd.Command,def=82" json:"cmd,omitempty"`
	Param      *User3Param        `protobuf:"varint,2,opt,name=param,enum=Cmd.User3Param,def=23" json:"param,omitempty"`
	SlotIndexs []*RecordSlotIndex `protobuf:"bytes,3,rep,name=slot_indexs,json=slotIndexs" json:"slot_indexs,omitempty"`
}

// Default values for UpdateRecordSlotIndex fields.
const (
	Default_UpdateRecordSlotIndex_Cmd   = Command_SCENE_USER3_PROTOCMD
	Default_UpdateRecordSlotIndex_Param = User3Param_USER3PARAM_UPDATE_RECORD_SLOT_INDEX
)

func (x *UpdateRecordSlotIndex) Reset() {
	*x = UpdateRecordSlotIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneUser3_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecordSlotIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecordSlotIndex) ProtoMessage() {}

func (x *UpdateRecordSlotIndex) ProtoReflect() protoreflect.Message {
	mi := &file_SceneUser3_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecordSlotIndex.ProtoReflect.Descriptor instead.
func (*UpdateRecordSlotIndex) Descriptor() ([]byte, []int) {
	return file_SceneUser3_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateRecordSlotIndex) GetCmd() Command {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return Default_UpdateRecordSlotIndex_Cmd
}

func (x *UpdateRecordSlotIndex) GetParam() User3Param {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_UpdateRecordSlotIndex_Param
}

func (x *UpdateRecordSlotIndex) GetSlotIndexs() []*RecordSlotIndex {
	if x != nil {
		return x.SlotIndexs
	}
	return nil
}

var File_SceneUser3_proto protoreflect.FileDescriptor

var file_SceneUser3_proto_rawDesc = []byte{
	0x0a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x33, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x43, 0x6d, 0x64, 0x1a, 0x0a, 0x78, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x6f, 0x74, 0x5f, 0x67, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x07, 0x67, 0x6f, 0x74, 0x47, 0x65, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d,
	0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x30,
	0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x67, 0x65, 0x61, 0x72, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53, 0x45,
	0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x41, 0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xac, 0x02, 0x0a, 0x10, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x44, 0x41, 0x4c, 0x49, 0x59, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x6f, 0x74, 0x74, 0x65,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x23, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x44, 0x41, 0x4c, 0x49, 0x59, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x34, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x45,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x3a, 0x15, 0x45,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x43, 0x4f, 0x53, 0x54, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x52, 0x05, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x0a, 0x50,
	0x6c, 0x75, 0x67, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x70, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x50, 0x6c,
	0x75, 0x67, 0x49, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55,
	0x47, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x49, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x49, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41,
	0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x22, 0x5e, 0x0a, 0x12, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x51, 0x75, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x51, 0x75, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x3a, 0x20, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52,
	0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x51, 0x75, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x48, 0x65, 0x72,
	0x6f, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x48, 0x65, 0x72, 0x6f, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x11, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x13, 0x48, 0x65, 0x72, 0x6f, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x48, 0x65,
	0x72, 0x6f, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x21, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x47, 0x52, 0x4f, 0x57, 0x54, 0x48, 0x5f,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x21, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xe3, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x55, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x2e, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x72, 0x6f, 0x42,
	0x75, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f,
	0x5f, 0x42, 0x55, 0x59, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5a, 0x0a,
	0x12, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x62, 0x75, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x62, 0x75,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x62, 0x75, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x48, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x34, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x3a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x98, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1d, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x5f, 0x44, 0x45, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x41, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6f, 0x74, 0x74,
	0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0d, 0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x41,
	0x63, 0x63, 0x75, 0x6d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xdc,
	0x01, 0x0a, 0x11, 0x42, 0x6f, 0x6c, 0x69, 0x47, 0x6f, 0x6c, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a,
	0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x1f, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4c, 0x49, 0x5f, 0x47, 0x4f, 0x4c, 0x44,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xcc, 0x02,
	0x0a, 0x0c, 0x42, 0x6f, 0x6c, 0x69, 0x47, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x42, 0x4f, 0x4c, 0x49, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x47, 0x6f, 0x6c, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x6f,
	0x74, 0x74, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a,
	0x15, 0x42, 0x6f, 0x6c, 0x69, 0x47, 0x6f, 0x6c, 0x64, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4b, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d,
	0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x24, 0x55, 0x53,
	0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4c, 0x49, 0x5f, 0x47, 0x4f,
	0x4c, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x7d, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xc0, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43,
	0x6d, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x10, 0x4e,
	0x6f, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x44, 0x61, 0x79, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x4e, 0x6f, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x3a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x4f,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x45, 0x71, 0x75, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x43, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a,
	0x1c, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49,
	0x50, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x64, 0x22, 0x40, 0x0a, 0x0f,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd0,
	0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x3a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x33,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x4a,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x43, 0x6d, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x23,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x43, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x73, 0x2a, 0x8a, 0x07, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x33, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x46,
	0x49, 0x52, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41,
	0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x44, 0x41, 0x4c, 0x49, 0x59, 0x5f, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23, 0x55, 0x53,
	0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x44, 0x41, 0x4c, 0x49, 0x59, 0x5f, 0x44,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x10, 0x06, 0x12, 0x32, 0x0a, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x49, 0x4d,
	0x50, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53,
	0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x09, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x0b, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45,
	0x52, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x10, 0x0c, 0x12, 0x25, 0x0a, 0x21, 0x55, 0x53, 0x45,
	0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x47, 0x52, 0x4f,
	0x57, 0x54, 0x48, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0d,
	0x12, 0x26, 0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48,
	0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x0e, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x53, 0x45, 0x52,
	0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0f, 0x12, 0x26,
	0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x48, 0x45, 0x52,
	0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x10, 0x10, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x11, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45,
	0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x12, 0x12, 0x23,
	0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x42, 0x4f, 0x4c,
	0x49, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x10, 0x13, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x42, 0x4f, 0x4c, 0x49, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x14, 0x12, 0x28, 0x0a, 0x24, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x42, 0x4f, 0x4c, 0x49, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x46,
	0x52, 0x45, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x15, 0x12, 0x1d, 0x0a, 0x19,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x16, 0x12, 0x27, 0x0a, 0x23, 0x55,
	0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x10, 0x17, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x18, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x33,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x19, 0x12, 0x20, 0x0a, 0x1c,
	0x55, 0x53, 0x45, 0x52, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x1b, 0x2a, 0x48,
	0x0a, 0x0e, 0x45, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x43, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x43, 0x4f, 0x53, 0x54, 0x5f,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0xe6, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x72,
	0x6f, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x1a, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55,
	0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x1c, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55,
	0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f,
	0x51, 0x55, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x48,
	0x45, 0x52, 0x4f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x53, 0x45, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x12,
	0x20, 0x0a, 0x1c, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x53,
	0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10,
	0x05,
}

var (
	file_SceneUser3_proto_rawDescOnce sync.Once
	file_SceneUser3_proto_rawDescData = file_SceneUser3_proto_rawDesc
)

func file_SceneUser3_proto_rawDescGZIP() []byte {
	file_SceneUser3_proto_rawDescOnce.Do(func() {
		file_SceneUser3_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneUser3_proto_rawDescData)
	})
	return file_SceneUser3_proto_rawDescData
}

var file_SceneUser3_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_SceneUser3_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_SceneUser3_proto_goTypes = []interface{}{
	(User3Param)(0),                         // 0: Cmd.User3Param
	(EPriorTimeCost)(0),                     // 1: Cmd.EPriorTimeCost
	(HeroStoryQusetState)(0),                // 2: Cmd.HeroStoryQusetState
	(*FirstDepositInfo)(nil),                // 3: Cmd.FirstDepositInfo
	(*FirstDepositReward)(nil),              // 4: Cmd.FirstDepositReward
	(*ClientPayLog)(nil),                    // 5: Cmd.ClientPayLog
	(*DailyDepositInfo)(nil),                // 6: Cmd.DailyDepositInfo
	(*DailyDepositGetReward)(nil),           // 7: Cmd.DailyDepositGetReward
	(*BattleTimeCostSelectCmd)(nil),         // 8: Cmd.BattleTimeCostSelectCmd
	(*PlugInInfo)(nil),                      // 9: Cmd.PlugInInfo
	(*PlugInNotify)(nil),                    // 10: Cmd.PlugInNotify
	(*PlugInUpload)(nil),                    // 11: Cmd.PlugInUpload
	(*HeroStoryQusetData)(nil),              // 12: Cmd.HeroStoryQusetData
	(*HeroStoryQusetInfo)(nil),              // 13: Cmd.HeroStoryQusetInfo
	(*HeroStoryQuestAccept)(nil),            // 14: Cmd.HeroStoryQuestAccept
	(*HeroStoryQuestReward)(nil),            // 15: Cmd.HeroStoryQuestReward
	(*HeroGrowthQuestData)(nil),             // 16: Cmd.HeroGrowthQuestData
	(*HeroGrowthQuestInfo)(nil),             // 17: Cmd.HeroGrowthQuestInfo
	(*ProfessionSimpleData)(nil),            // 18: Cmd.ProfessionSimpleData
	(*QueryProfessionRecordSimpleData)(nil), // 19: Cmd.QueryProfessionRecordSimpleData
	(*HeroBuyUserCmd)(nil),                  // 20: Cmd.HeroBuyUserCmd
	(*HeroProfessionInfo)(nil),              // 21: Cmd.HeroProfessionInfo
	(*HeroShowUserCmd)(nil),                 // 22: Cmd.HeroShowUserCmd
	(*AccumDepositInfo)(nil),                // 23: Cmd.AccumDepositInfo
	(*AccumDepositReward)(nil),              // 24: Cmd.AccumDepositReward
	(*BoliGoldGetReward)(nil),               // 25: Cmd.BoliGoldGetReward
	(*BoliGoldInfo)(nil),                    // 26: Cmd.BoliGoldInfo
	(*BoliGoldGetFreeReward)(nil),           // 27: Cmd.BoliGoldGetFreeReward
	(*ResourceCheck)(nil),                   // 28: Cmd.ResourceCheck
	(*ResourceCheckUserCmd)(nil),            // 29: Cmd.ResourceCheckUserCmd
	(*NoviceChargeItem)(nil),                // 30: Cmd.NoviceChargeItem
	(*NoviceChargeSync)(nil),                // 31: Cmd.NoviceChargeSync
	(*NoviceChargeReward)(nil),              // 32: Cmd.NoviceChargeReward
	(*EquipPosEffectTime)(nil),              // 33: Cmd.EquipPosEffectTime
	(*RecordSlotIndex)(nil),                 // 34: Cmd.RecordSlotIndex
	(*UpdateRecordSlotIndex)(nil),           // 35: Cmd.UpdateRecordSlotIndex
	(Command)(0),                            // 36: Cmd.Command
}
var file_SceneUser3_proto_depIdxs = []int32{
	36, // 0: Cmd.FirstDepositInfo.cmd:type_name -> Cmd.Command
	0,  // 1: Cmd.FirstDepositInfo.param:type_name -> Cmd.User3Param
	36, // 2: Cmd.FirstDepositReward.cmd:type_name -> Cmd.Command
	0,  // 3: Cmd.FirstDepositReward.param:type_name -> Cmd.User3Param
	36, // 4: Cmd.ClientPayLog.cmd:type_name -> Cmd.Command
	0,  // 5: Cmd.ClientPayLog.param:type_name -> Cmd.User3Param
	36, // 6: Cmd.DailyDepositInfo.cmd:type_name -> Cmd.Command
	0,  // 7: Cmd.DailyDepositInfo.param:type_name -> Cmd.User3Param
	36, // 8: Cmd.DailyDepositGetReward.cmd:type_name -> Cmd.Command
	0,  // 9: Cmd.DailyDepositGetReward.param:type_name -> Cmd.User3Param
	36, // 10: Cmd.BattleTimeCostSelectCmd.cmd:type_name -> Cmd.Command
	0,  // 11: Cmd.BattleTimeCostSelectCmd.param:type_name -> Cmd.User3Param
	1,  // 12: Cmd.BattleTimeCostSelectCmd.ecost:type_name -> Cmd.EPriorTimeCost
	36, // 13: Cmd.PlugInNotify.cmd:type_name -> Cmd.Command
	0,  // 14: Cmd.PlugInNotify.param:type_name -> Cmd.User3Param
	9,  // 15: Cmd.PlugInNotify.infos:type_name -> Cmd.PlugInInfo
	36, // 16: Cmd.PlugInUpload.cmd:type_name -> Cmd.Command
	0,  // 17: Cmd.PlugInUpload.param:type_name -> Cmd.User3Param
	9,  // 18: Cmd.PlugInUpload.infos:type_name -> Cmd.PlugInInfo
	2,  // 19: Cmd.HeroStoryQusetData.queststate:type_name -> Cmd.HeroStoryQusetState
	36, // 20: Cmd.HeroStoryQusetInfo.cmd:type_name -> Cmd.Command
	0,  // 21: Cmd.HeroStoryQusetInfo.param:type_name -> Cmd.User3Param
	12, // 22: Cmd.HeroStoryQusetInfo.story_quests:type_name -> Cmd.HeroStoryQusetData
	36, // 23: Cmd.HeroStoryQuestAccept.cmd:type_name -> Cmd.Command
	0,  // 24: Cmd.HeroStoryQuestAccept.param:type_name -> Cmd.User3Param
	36, // 25: Cmd.HeroStoryQuestReward.cmd:type_name -> Cmd.Command
	0,  // 26: Cmd.HeroStoryQuestReward.param:type_name -> Cmd.User3Param
	36, // 27: Cmd.HeroGrowthQuestInfo.cmd:type_name -> Cmd.Command
	0,  // 28: Cmd.HeroGrowthQuestInfo.param:type_name -> Cmd.User3Param
	16, // 29: Cmd.HeroGrowthQuestInfo.growth_quests:type_name -> Cmd.HeroGrowthQuestData
	36, // 30: Cmd.QueryProfessionRecordSimpleData.cmd:type_name -> Cmd.Command
	0,  // 31: Cmd.QueryProfessionRecordSimpleData.param:type_name -> Cmd.User3Param
	18, // 32: Cmd.QueryProfessionRecordSimpleData.records:type_name -> Cmd.ProfessionSimpleData
	36, // 33: Cmd.HeroBuyUserCmd.cmd:type_name -> Cmd.Command
	0,  // 34: Cmd.HeroBuyUserCmd.param:type_name -> Cmd.User3Param
	36, // 35: Cmd.HeroShowUserCmd.cmd:type_name -> Cmd.Command
	0,  // 36: Cmd.HeroShowUserCmd.param:type_name -> Cmd.User3Param
	21, // 37: Cmd.HeroShowUserCmd.infos:type_name -> Cmd.HeroProfessionInfo
	36, // 38: Cmd.AccumDepositInfo.cmd:type_name -> Cmd.Command
	0,  // 39: Cmd.AccumDepositInfo.param:type_name -> Cmd.User3Param
	36, // 40: Cmd.AccumDepositReward.cmd:type_name -> Cmd.Command
	0,  // 41: Cmd.AccumDepositReward.param:type_name -> Cmd.User3Param
	36, // 42: Cmd.BoliGoldGetReward.cmd:type_name -> Cmd.Command
	0,  // 43: Cmd.BoliGoldGetReward.param:type_name -> Cmd.User3Param
	36, // 44: Cmd.BoliGoldInfo.cmd:type_name -> Cmd.Command
	0,  // 45: Cmd.BoliGoldInfo.param:type_name -> Cmd.User3Param
	36, // 46: Cmd.BoliGoldGetFreeReward.cmd:type_name -> Cmd.Command
	0,  // 47: Cmd.BoliGoldGetFreeReward.param:type_name -> Cmd.User3Param
	36, // 48: Cmd.ResourceCheckUserCmd.cmd:type_name -> Cmd.Command
	0,  // 49: Cmd.ResourceCheckUserCmd.param:type_name -> Cmd.User3Param
	28, // 50: Cmd.ResourceCheckUserCmd.resources:type_name -> Cmd.ResourceCheck
	36, // 51: Cmd.NoviceChargeSync.cmd:type_name -> Cmd.Command
	0,  // 52: Cmd.NoviceChargeSync.param:type_name -> Cmd.User3Param
	30, // 53: Cmd.NoviceChargeSync.items:type_name -> Cmd.NoviceChargeItem
	36, // 54: Cmd.NoviceChargeReward.cmd:type_name -> Cmd.Command
	0,  // 55: Cmd.NoviceChargeReward.param:type_name -> Cmd.User3Param
	36, // 56: Cmd.EquipPosEffectTime.cmd:type_name -> Cmd.Command
	0,  // 57: Cmd.EquipPosEffectTime.param:type_name -> Cmd.User3Param
	36, // 58: Cmd.UpdateRecordSlotIndex.cmd:type_name -> Cmd.Command
	0,  // 59: Cmd.UpdateRecordSlotIndex.param:type_name -> Cmd.User3Param
	34, // 60: Cmd.UpdateRecordSlotIndex.slot_indexs:type_name -> Cmd.RecordSlotIndex
	61, // [61:61] is the sub-list for method output_type
	61, // [61:61] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_SceneUser3_proto_init() }
func file_SceneUser3_proto_init() {
	if File_SceneUser3_proto != nil {
		return
	}
	file_xCmd_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneUser3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyDepositInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyDepositGetReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleTimeCostSelectCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugInInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugInNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugInUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroStoryQusetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroStoryQusetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroStoryQuestAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroStoryQuestReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroGrowthQuestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroGrowthQuestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionSimpleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProfessionRecordSimpleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBuyUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroProfessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroShowUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccumDepositInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccumDepositReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoliGoldGetReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoliGoldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoliGoldGetFreeReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCheckUserCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceChargeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceChargeSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceChargeReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipPosEffectTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordSlotIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SceneUser3_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecordSlotIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneUser3_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneUser3_proto_goTypes,
		DependencyIndexes: file_SceneUser3_proto_depIdxs,
		EnumInfos:         file_SceneUser3_proto_enumTypes,
		MessageInfos:      file_SceneUser3_proto_msgTypes,
	}.Build()
	File_SceneUser3_proto = out.File
	file_SceneUser3_proto_rawDesc = nil
	file_SceneUser3_proto_goTypes = nil
	file_SceneUser3_proto_depIdxs = nil
}
